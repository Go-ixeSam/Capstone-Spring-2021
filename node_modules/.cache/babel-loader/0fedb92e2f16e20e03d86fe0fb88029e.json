{"ast":null,"code":"import * as variable from \"variables/Variables\";\nimport { getDates, removeDuplicateDate } from \"util/Helper\";\nimport { createVegetableData } from \"util/ContructorCreation\";\nexport function getList(state) {\n  return state.contract.listTestSelectorstSelector;\n}\nexport function getTrip(state) {\n  return state.trip.tripData;\n}\nexport function getVegetableAPIloadingTime(state) {\n  return state.post.loading;\n}\nexport function getAdvanceData(state) {\n  return state.account.accountData;\n}\nexport function getSystemConfigLoading(state) {\n  return state.systemConfig.loading;\n}\nexport function getAdvanceSelectedData(state) {\n  return state.trip.advanceTableDataSelected;\n}\nexport function getAdvanceDataByNameSearch(advanceTableData, searchValue) {\n  return advanceTableData.filter(record => record.Dessert.includes(searchValue));\n}\nexport function getUserRole(state) {\n  return state.user.roles.text;\n}\nexport function getModalVisible(state) {\n  return state.post.userPostVisible;\n}\nexport function getSelectedItem(state) {\n  return state.post.selectedItem;\n}\nexport function getToken(state) {\n  return state.login.token;\n}\nexport function getAllVegetable(state) {\n  // return state.post.getAllVegetableUnapprovedCurrent\n  console.log(state.post.getAllVegetableUnapprovedCurrent);\n  const datas = state.post.getAllVegetableUnapprovedCurrent;\n  const tableBodyData = [];\n  let image = \"\";\n\n  if (Object.keys(datas).length !== 0) {\n    datas.map(data => {\n      if (data.images) {\n        if (data.images.length > 0) {\n          if (data.images[0].url) {\n            image = data.images[0].url;\n          }\n        }\n      }\n\n      tableBodyData.push(createVegetableData(data.name, data.idDescription, data.feature, data.description, image));\n    });\n  }\n\n  return tableBodyData;\n}\nexport function getTokenExpiredTime(state) {\n  return state.login.expiresTime;\n}\n/**\r\n * * Hàm sẽ trả về 1 mảng chứa những ngày tạo bài đã loại bỏ trùng nhau từ account id\r\n */\n\nexport function getDateListByAccountId(state) {\n  let object = {\n    accountID: \"\",\n    posts: []\n  };\n  state.post.reportedPosts.map(obj => {\n    if (obj.accountID == state.post.selectedAccountId) {\n      object = { ...obj,\n        accountID: obj.accountID,\n        posts: obj.posts\n      };\n    }\n  });\n  return removeDuplicateDate(getDates(object.posts));\n}\n/**\r\n * * Hàm sẽ trả về cái object mà có account id giống với selected ID\r\n */\n\nexport function getReportedListByAccountId(state) {\n  let object = {\n    accountID: \"\",\n    posts: []\n  };\n  state.post.reportedPosts.map(obj => {\n    if (obj.accountID == state.post.selectedAccountId) {\n      object = obj;\n      console.log(\"obj \", object);\n    }\n  });\n  return object;\n}\nexport function getMaterialHeader(state) {\n  return state.account.accountTableHeader;\n}\nexport function getReportedPost(state) {\n  return state.post.reportedPosts;\n}\nexport function getPercentReport(state) {\n  return state.systemConfig.systemConfigForm;\n}\nexport function getPercent(state) {\n  return state.systemConfig.percent;\n}\nexport function getPercentResult(state) {\n  return state.systemConfig.percentResult;\n}\nexport function getPercentName(state) {\n  return state.systemConfig.percentNames;\n}\nexport function getSignInForm(state) {\n  return state.login.signInForm;\n}\nexport function getDashboardUpdate(state) {\n  return state.dashboard.updateDashboard;\n}\nexport function getFirebase(state) {\n  return state.firebase;\n} //* độ dài của cái notification này chính là độ dài của cái mảng chứa những phần tử duyệt cây\n\nexport function getNotificationCount(state) {\n  return state.post.getAllVegetableUnapprovedCurrent.length;\n}\nexport function getNotificationCountFromLogin(state) {\n  return state.login.notificationCount;\n}\nexport function getPostTableHeader(state) {\n  return state.post.tableHeader;\n}\nexport function getPostTableBodyData(state) {\n  return state.post.advanceTableData;\n}\nexport function getLoadingStatus(state) {\n  return state.account.loading;\n}\nexport function getSuccessStatus(state) {\n  return state.account.success;\n}\nexport function getFailStatus(state) {\n  return state.account.fail;\n}\n/**\r\n * ! Tìm kiến trip dựa trên ID\r\n * @param {*} state\r\n * @param {*} id\r\n */\n\nexport function getTripDetailById(state) {\n  const id = state.trip.tripSelectedID;\n  return state.trip.tripData.tableBody.record.find(obj => obj.contractCode == id);\n}\nexport function removeAdvanceRecord(state, selectedRecord) {\n  let newArray = [];\n  selectedRecord.map(selected => {\n    newArray = state.trip.advanceTableData.filter(record => record.name != selected);\n  });\n  return newArray;\n}","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/redux/Selector/Selectors.js"],"names":["variable","getDates","removeDuplicateDate","createVegetableData","getList","state","contract","listTestSelectorstSelector","getTrip","trip","tripData","getVegetableAPIloadingTime","post","loading","getAdvanceData","account","accountData","getSystemConfigLoading","systemConfig","getAdvanceSelectedData","advanceTableDataSelected","getAdvanceDataByNameSearch","advanceTableData","searchValue","filter","record","Dessert","includes","getUserRole","user","roles","text","getModalVisible","userPostVisible","getSelectedItem","selectedItem","getToken","login","token","getAllVegetable","console","log","getAllVegetableUnapprovedCurrent","datas","tableBodyData","image","Object","keys","length","map","data","images","url","push","name","idDescription","feature","description","getTokenExpiredTime","expiresTime","getDateListByAccountId","object","accountID","posts","reportedPosts","obj","selectedAccountId","getReportedListByAccountId","getMaterialHeader","accountTableHeader","getReportedPost","getPercentReport","systemConfigForm","getPercent","percent","getPercentResult","percentResult","getPercentName","percentNames","getSignInForm","signInForm","getDashboardUpdate","dashboard","updateDashboard","getFirebase","firebase","getNotificationCount","getNotificationCountFromLogin","notificationCount","getPostTableHeader","tableHeader","getPostTableBodyData","getLoadingStatus","getSuccessStatus","success","getFailStatus","fail","getTripDetailById","id","tripSelectedID","tableBody","find","contractCode","removeAdvanceRecord","selectedRecord","newArray","selected"],"mappings":"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","sourcesContent":["import * as variable from \"variables/Variables\";\r\nimport { getDates, removeDuplicateDate } from \"util/Helper\";\r\nimport { createVegetableData } from \"util/ContructorCreation\";\r\nexport function getList(state) {\r\n  return state.contract.listTestSelectorstSelector;\r\n}\r\n\r\nexport function getTrip(state) {\r\n  return state.trip.tripData;\r\n}\r\nexport function getVegetableAPIloadingTime(state) {\r\n  return state.post.loading;\r\n}\r\n\r\nexport function getAdvanceData(state) {\r\n  return state.account.accountData;\r\n}\r\n\r\nexport function getSystemConfigLoading(state) {\r\n  return state.systemConfig.loading;\r\n}\r\n\r\nexport function getAdvanceSelectedData(state) {\r\n  return state.trip.advanceTableDataSelected;\r\n}\r\n\r\nexport function getAdvanceDataByNameSearch(advanceTableData, searchValue) {\r\n  return advanceTableData.filter((record) =>\r\n    record.Dessert.includes(searchValue)\r\n  );\r\n}\r\n\r\nexport function getUserRole(state) {\r\n  return state.user.roles.text;\r\n}\r\nexport function getModalVisible(state) {\r\n  return state.post.userPostVisible;\r\n}\r\n\r\nexport function getSelectedItem(state) {\r\n  return state.post.selectedItem;\r\n}\r\nexport function getToken(state) {\r\n  return state.login.token;\r\n}\r\nexport function getAllVegetable(state) {\r\n  // return state.post.getAllVegetableUnapprovedCurrent\r\n  console.log(state.post.getAllVegetableUnapprovedCurrent);\r\n  const datas = state.post.getAllVegetableUnapprovedCurrent;\r\n  const tableBodyData = [];\r\n  let image = \"\";\r\n  if (Object.keys(datas).length !== 0) {\r\n    datas.map((data) => {\r\n      if (data.images) {\r\n        if (data.images.length > 0) {\r\n          if (data.images[0].url) {\r\n            image = data.images[0].url;\r\n          }\r\n        }\r\n      }\r\n      tableBodyData.push(\r\n        createVegetableData(\r\n          data.name,\r\n          data.idDescription,\r\n          data.feature,\r\n          data.description,\r\n          image\r\n        )\r\n      );\r\n    });\r\n  }\r\n  return tableBodyData;\r\n}\r\nexport function getTokenExpiredTime(state) {\r\n  return state.login.expiresTime;\r\n}\r\n/**\r\n * * Hàm sẽ trả về 1 mảng chứa những ngày tạo bài đã loại bỏ trùng nhau từ account id\r\n */\r\nexport function getDateListByAccountId(state) {\r\n  let object = { accountID: \"\", posts: [] };\r\n  state.post.reportedPosts.map((obj) => {\r\n    if (obj.accountID == state.post.selectedAccountId) {\r\n      object = { ...obj, accountID: obj.accountID, posts: obj.posts };\r\n    }\r\n  });\r\n  return removeDuplicateDate(getDates(object.posts));\r\n}\r\n/**\r\n * * Hàm sẽ trả về cái object mà có account id giống với selected ID\r\n */\r\nexport function getReportedListByAccountId(state) {\r\n  let object = { accountID: \"\", posts: [] };\r\n  state.post.reportedPosts.map((obj) => {\r\n    if (obj.accountID == state.post.selectedAccountId) {\r\n      object = obj;\r\n      console.log(\"obj \", object);\r\n    }\r\n  });\r\n  return object;\r\n}\r\nexport function getMaterialHeader(state) {\r\n  return state.account.accountTableHeader;\r\n}\r\nexport function getReportedPost(state) {\r\n  return state.post.reportedPosts;\r\n}\r\n\r\nexport function getPercentReport(state) {\r\n  return state.systemConfig.systemConfigForm;\r\n}\r\n\r\nexport function getPercent(state) {\r\n  return state.systemConfig.percent;\r\n}\r\n\r\nexport function getPercentResult(state) {\r\n  return state.systemConfig.percentResult;\r\n}\r\n\r\nexport function getPercentName(state) {\r\n  return state.systemConfig.percentNames;\r\n}\r\n\r\nexport function getSignInForm(state) {\r\n  return state.login.signInForm;\r\n}\r\n\r\nexport function getDashboardUpdate(state) {\r\n  return state.dashboard.updateDashboard;\r\n}\r\n\r\nexport function getFirebase(state) {\r\n  return state.firebase;\r\n}\r\n\r\n//* độ dài của cái notification này chính là độ dài của cái mảng chứa những phần tử duyệt cây\r\nexport function getNotificationCount(state) {\r\n  return state.post.getAllVegetableUnapprovedCurrent.length;\r\n}\r\n\r\nexport function getNotificationCountFromLogin(state) {\r\n  return state.login.notificationCount;\r\n}\r\n\r\nexport function getPostTableHeader(state) {\r\n  return state.post.tableHeader;\r\n}\r\n\r\nexport function getPostTableBodyData(state) {\r\n  return state.post.advanceTableData;\r\n}\r\nexport function getLoadingStatus(state) {\r\n  return state.account.loading;\r\n}\r\nexport function getSuccessStatus(state) {\r\n  return state.account.success;\r\n}\r\nexport function getFailStatus(state) {\r\n  return state.account.fail;\r\n}\r\n/**\r\n * ! Tìm kiến trip dựa trên ID\r\n * @param {*} state\r\n * @param {*} id\r\n */\r\nexport function getTripDetailById(state) {\r\n  const id = state.trip.tripSelectedID;\r\n  return state.trip.tripData.tableBody.record.find(\r\n    (obj) => obj.contractCode == id\r\n  );\r\n}\r\nexport function removeAdvanceRecord(state, selectedRecord) {\r\n  let newArray = [];\r\n  selectedRecord.map((selected) => {\r\n    newArray = state.trip.advanceTableData.filter(\r\n      (record) => record.name != selected\r\n    );\r\n  });\r\n  return newArray;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}