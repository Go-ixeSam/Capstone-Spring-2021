{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sam\\\\Documents\\\\GitHub\\\\Capstone-Spring-2021\\\\src\\\\components\\\\LoadingSpinner\\\\LoadingSpinner.jsx\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport * as variable from \"variables/Variables\"; // Can be a string as well. Need to ensure each key-value pair ends with ;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nfunction LoadingSpinner() {\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(variable.alternativePrimaryColor);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sweet-loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ClipLoader, {\n    color: color,\n    loading: loading,\n    size: 80,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n} //* spinner có thể bật tắt \n\n\nexport function SwitchSpinner(props) {\n  let [loading, setLoading] = useState(props.show);\n  let [color, setColor] = useState(variable.alternativePrimaryColor);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sweet-loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ClipLoader, {\n    color: color,\n    loading: loading,\n    size: 80,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n}\nexport default LoadingSpinner;","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/components/LoadingSpinner/LoadingSpinner.jsx"],"names":["React","useState","css","ClipLoader","variable","override","LoadingSpinner","loading","setLoading","color","setColor","alternativePrimaryColor","SwitchSpinner","props","show"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,qBAA1B,C,CACA;;AACA,MAAMC,QAAQ,GAAGH,GAAI;;;;CAArB;;AAMA,SAASI,cAAT,GAA0B;AACxB,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAApC;AACA,MAAI,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACG,QAAQ,CAACO,uBAAV,CAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEF,KAAnB;AAA0B,IAAA,OAAO,EAAEF,OAAnC;AAA4C,IAAA,IAAI,EAAE,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,C,CAED;;;AACA,OAAO,SAASK,aAAT,CAAuBC,KAAvB,EAA6B;AAClC,MAAI,CAACN,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACY,KAAK,CAACC,IAAP,CAApC;AACA,MAAI,CAACL,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACG,QAAQ,CAACO,uBAAV,CAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEF,KAAnB;AAA0B,IAAA,OAAO,EAAEF,OAAnC;AAA4C,IAAA,IAAI,EAAE,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMD;AAED,eAAeD,cAAf","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { css } from \"@emotion/core\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport * as variable from \"variables/Variables\"\r\n// Can be a string as well. Need to ensure each key-value pair ends with ;\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nfunction LoadingSpinner() {\r\n  let [loading, setLoading] = useState(true);\r\n  let [color, setColor] = useState(variable.alternativePrimaryColor);\r\n\r\n  return (\r\n    <div className=\"sweet-loading\">\r\n      <ClipLoader color={color} loading={loading} size={80} />\r\n    </div>\r\n  );\r\n}\r\n\r\n//* spinner có thể bật tắt \r\nexport function SwitchSpinner(props){\r\n  let [loading, setLoading] = useState(props.show);\r\n  let [color, setColor] = useState(variable.alternativePrimaryColor);\r\n\r\n  return (\r\n    <div className=\"sweet-loading\">\r\n      <ClipLoader color={color} loading={loading} size={80} />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default LoadingSpinner;\r\n"]},"metadata":{},"sourceType":"module"}