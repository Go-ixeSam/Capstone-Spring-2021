{"ast":null,"code":"var _jsxFileName = \"E:\\\\light-bootstrap-dashboard-react-master\\\\src\\\\views\\\\Account.jsx\";\nimport React from \"react\";\nimport { Col, Grid, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getALL, getPlantInfo } from \"redux/index\";\nimport { CardNoFooter } from \"../components/Card/Card\";\nimport EnhancedTable from \"../components/SuperTable/AdvanceTable\";\nimport { getAdvanceData, getMaterialHeader } from \"../redux/Selector/Selectors\";\nimport * as variable from \"../variables/Variables\";\nimport { fetchPostList } from \"api/APICall\";\nimport { ShowPopUp, SuccessPopUp, LoadingPopUp } from \"components/Modal/Modal\";\nimport \"components/LoadingSpinner/LoadingSpinner\";\nimport LoadingSpinner from \"components/LoadingSpinner/LoadingSpinner\";\nexport default function StickyHeadTable() {\n  let materialBody = useSelector(state => getAdvanceData(state));\n  let materialHeader = useSelector(state => getMaterialHeader(state));\n  let [successVisible, setSuccessVisible] = React.useState(false);\n  let [loadingVisible, setLoadingVisible] = React.useState(false);\n\n  function autoCloseSuccessModal() {\n    setSuccessVisible(true);\n    setTimeout(function () {\n      setSuccessVisible(false);\n    }, 2000);\n  }\n\n  function autoCloseLoadingModal() {\n    setLoadingVisible(true);\n    setTimeout(function () {\n      setLoadingVisible(false);\n    }, 2000);\n  }\n\n  function doing(requestStatus) {\n    switch (requestStatus) {\n      case variable.fulfilled:\n        console.log(\"đã vào\");\n        autoCloseSuccessModal();\n        break;\n\n      case variable.error:\n        break;\n      // ! Trường hợp pendding sẽ xảy ra trước và nếu như thành công thì nó sẽ đi vào fullfill, lỗi thì error\n      //! đọc trong link này:https://redux-toolkit.js.org/api/createAsyncThunk\n    }\n  }\n\n  let dispatch = useDispatch();\n  React.useEffect(() => {\n    //! 1 lưu ý quan trọng là nếu muón sử dụng async function ở trong useEffect thì ta phải triển khai nó luôn ở trong useEffect và gọi nó như ở dưới,\n    // ! Tuyệt đối ko tự biến useEffect thành async function =)\n    const fetchPostList = async () => {\n      // * Bắt try catch ở đây là để tránh lỗi crash ứng dụng lỡ như trong quá trình dispatch đến getAll bị lỗi\n      try {\n        // const response = await dispatch(getALL());\n        const response = await dispatch(getPlantInfo(\"Húng quế\"));\n        const requestStatus = response.meta.requestStatus;\n        doing(requestStatus);\n        console.log(\"status\", requestStatus); // * Nếu có sử dụng gì ở locFal này thì ta cứ lấy response ra mà dùng\n      } catch (errpr) {\n        console.log(\"Failed to fetch product list: \", errpr);\n      }\n    };\n\n    fetchPostList(dispatch);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SuccessPopUp, {\n    visible: successVisible,\n    length: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(LoadingPopUp, {\n    visible: loadingVisible,\n    length: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    style: {\n      margin: 0,\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardNoFooter, {\n    titlet: \"Account list\",\n    content: /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(EnhancedTable, {\n      headCells: materialHeader,\n      bodyData: materialBody,\n      notShowing: [variable.islock],\n      actionbuttonlist: [\"lock\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/views/Account.jsx"],"names":["React","Col","Grid","Row","useDispatch","useSelector","getALL","getPlantInfo","CardNoFooter","EnhancedTable","getAdvanceData","getMaterialHeader","variable","fetchPostList","ShowPopUp","SuccessPopUp","LoadingPopUp","LoadingSpinner","StickyHeadTable","materialBody","state","materialHeader","successVisible","setSuccessVisible","useState","loadingVisible","setLoadingVisible","autoCloseSuccessModal","setTimeout","autoCloseLoadingModal","doing","requestStatus","fulfilled","console","log","error","dispatch","useEffect","response","meta","errpr","margin","padding","islock"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Col, Grid, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getALL,getPlantInfo } from \"redux/index\";\r\nimport { CardNoFooter } from \"../components/Card/Card\";\r\nimport EnhancedTable from \"../components/SuperTable/AdvanceTable\";\r\nimport { getAdvanceData, getMaterialHeader } from \"../redux/Selector/Selectors\";\r\nimport * as variable from \"../variables/Variables\";\r\nimport { fetchPostList } from \"api/APICall\";\r\nimport { ShowPopUp, SuccessPopUp, LoadingPopUp } from \"components/Modal/Modal\";\r\nimport {} from \"components/LoadingSpinner/LoadingSpinner\";\r\nimport LoadingSpinner from \"components/LoadingSpinner/LoadingSpinner\";\r\n\r\nexport default function StickyHeadTable() {\r\n  let materialBody = useSelector((state) => getAdvanceData(state));\r\n  let materialHeader = useSelector((state) => getMaterialHeader(state));\r\n  let [successVisible, setSuccessVisible] = React.useState(false);\r\n  let [loadingVisible, setLoadingVisible] = React.useState(false);\r\n  function autoCloseSuccessModal() {\r\n    setSuccessVisible(true);\r\n    setTimeout(function () {\r\n      setSuccessVisible(false);\r\n    }, 2000);\r\n  }\r\n  function autoCloseLoadingModal() {\r\n    setLoadingVisible(true);\r\n    setTimeout(function () {\r\n      setLoadingVisible(false);\r\n    }, 2000);\r\n  }\r\n  function doing(requestStatus) {\r\n    switch (requestStatus) {\r\n      case variable.fulfilled:\r\n        console.log(\"đã vào\");\r\n        autoCloseSuccessModal();\r\n        break;\r\n      case variable.error:\r\n        break;\r\n        // ! Trường hợp pendding sẽ xảy ra trước và nếu như thành công thì nó sẽ đi vào fullfill, lỗi thì error\r\n        //! đọc trong link này:https://redux-toolkit.js.org/api/createAsyncThunk\r\n    }\r\n  }\r\n  let dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    //! 1 lưu ý quan trọng là nếu muón sử dụng async function ở trong useEffect thì ta phải triển khai nó luôn ở trong useEffect và gọi nó như ở dưới,\r\n    // ! Tuyệt đối ko tự biến useEffect thành async function =)\r\n    const fetchPostList = async () => {\r\n      // * Bắt try catch ở đây là để tránh lỗi crash ứng dụng lỡ như trong quá trình dispatch đến getAll bị lỗi\r\n      try {\r\n        // const response = await dispatch(getALL());\r\n        const response = await dispatch(getPlantInfo(\"Húng quế\"));\r\n        const requestStatus = response.meta.requestStatus;\r\n        doing(requestStatus);\r\n        console.log(\"status\", requestStatus);\r\n\r\n        // * Nếu có sử dụng gì ở locFal này thì ta cứ lấy response ra mà dùng\r\n      } catch (errpr) {\r\n        console.log(\"Failed to fetch product list: \", errpr);\r\n      }\r\n    };\r\n    fetchPostList(dispatch);\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <SuccessPopUp visible={successVisible} length=\"200px\" />\r\n      <LoadingPopUp visible={loadingVisible} length=\"200px\" />\r\n      <div className=\"content\">\r\n        <Grid fluid style={{ margin: 0, padding: 0 }}>\r\n          <CardNoFooter\r\n            titlet=\"Account list\"\r\n            content={\r\n              <Row>\r\n                <Col xs={12}>\r\n                  <EnhancedTable\r\n                    headCells={materialHeader}\r\n                    bodyData={materialBody}\r\n                    notShowing={[variable.islock]}\r\n                    actionbuttonlist={[\"lock\"]}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            }\r\n          />\r\n        </Grid>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}