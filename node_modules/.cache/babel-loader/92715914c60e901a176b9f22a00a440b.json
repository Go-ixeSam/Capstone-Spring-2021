{"ast":null,"code":"var _classCallCheck = require(\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nvar React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar merge = require('object-assign');\n\nvar NotificationContainer = require('./NotificationContainer');\n\nvar Constants = require('./constants');\n\nvar Styles = require('./styles');\n\nvar NotificationSystem = /*#__PURE__*/function (_React$Component) {\n  \"use strict\";\n\n  _inherits(NotificationSystem, _React$Component);\n\n  var _super = _createSuper(NotificationSystem);\n\n  function NotificationSystem() {\n    var _this;\n\n    _classCallCheck(this, NotificationSystem);\n\n    _this = _super.call(this);\n    _this.state = {\n      notifications: []\n    };\n    _this.uid = 3400;\n    _this._isMounted = false;\n    _this.overrideWidth = null;\n    _this.overrideStyle = {};\n    _this.elements = {\n      notification: 'NotificationItem',\n      title: 'Title',\n      messageWrapper: 'MessageWrapper',\n      dismiss: 'Dismiss',\n      action: 'Action',\n      actionWrapper: 'ActionWrapper'\n    };\n    _this.setOverrideStyle = _this.setOverrideStyle.bind(_assertThisInitialized(_this));\n    _this.wrapper = _this.wrapper.bind(_assertThisInitialized(_this));\n    _this.container = _this.container.bind(_assertThisInitialized(_this));\n    _this.byElement = _this.byElement.bind(_assertThisInitialized(_this));\n    _this._didNotificationRemoved = _this._didNotificationRemoved.bind(_assertThisInitialized(_this));\n    _this.addNotification = _this.addNotification.bind(_assertThisInitialized(_this));\n    _this.getNotificationRef = _this.getNotificationRef.bind(_assertThisInitialized(_this));\n    _this.removeNotification = _this.removeNotification.bind(_assertThisInitialized(_this));\n    _this.editNotification = _this.editNotification.bind(_assertThisInitialized(_this));\n    _this.clearNotifications = _this.clearNotifications.bind(_assertThisInitialized(_this));\n    _this._getStyles = {\n      overrideWidth: _this.overrideWidth,\n      overrideStyle: _this.overrideStyle,\n      elements: _this.elements,\n      setOverrideStyle: _this.setOverrideStyle,\n      wrapper: _this.wrapper,\n      container: _this.container,\n      byElement: _this.byElement\n    };\n    return _this;\n  }\n\n  _createClass(NotificationSystem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setOverrideStyle(this.props.style);\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"setOverrideStyle\",\n    value: function setOverrideStyle(style) {\n      this.overrideStyle = style;\n    }\n  }, {\n    key: \"wrapper\",\n    value: function wrapper() {\n      if (!this.overrideStyle) return {};\n      return merge({}, Styles.Wrapper, this.overrideStyle.Wrapper);\n    }\n  }, {\n    key: \"container\",\n    value: function container(position) {\n      var override = this.overrideStyle.Containers || {};\n      if (!this.overrideStyle) return {};\n      this.overrideWidth = Styles.Containers.DefaultStyle.width;\n\n      if (override.DefaultStyle && override.DefaultStyle.width) {\n        this.overrideWidth = override.DefaultStyle.width;\n      }\n\n      if (override[position] && override[position].width) {\n        this.overrideWidth = override[position].width;\n      }\n\n      return merge({}, Styles.Containers.DefaultStyle, Styles.Containers[position], override.DefaultStyle, override[position]);\n    }\n  }, {\n    key: \"byElement\",\n    value: function byElement(element) {\n      var _this2 = this;\n\n      return function (level) {\n        var _element = _this2.elements[element];\n        var override = _this2.overrideStyle[_element] || {};\n        if (!_this2.overrideStyle) return {};\n        return merge({}, Styles[_element].DefaultStyle, Styles[_element][level], override.DefaultStyle, override[level]);\n      };\n    }\n  }, {\n    key: \"_didNotificationRemoved\",\n    value: function _didNotificationRemoved(uid) {\n      var notification;\n      var notifications = this.state.notifications.filter(function (toCheck) {\n        if (toCheck.uid === uid) {\n          notification = toCheck;\n          return false;\n        }\n\n        return true;\n      });\n\n      if (this._isMounted) {\n        this.setState({\n          notifications: notifications\n        });\n      }\n\n      if (notification && notification.onRemove) {\n        notification.onRemove(notification);\n      }\n    }\n  }, {\n    key: \"addNotification\",\n    value: function addNotification(notification) {\n      var _notification = merge({}, Constants.notification, notification);\n\n      var notifications = this.state.notifications;\n      var i;\n\n      if (!_notification.level) {\n        throw new Error('notification level is required.');\n      }\n\n      if (Object.keys(Constants.levels).indexOf(_notification.level) === -1) {\n        throw new Error(\"'\" + _notification.level + \"' is not a valid level.\");\n      } // eslint-disable-next-line\n\n\n      if (isNaN(_notification.autoDismiss)) {\n        throw new Error(\"'autoDismiss' must be a number.\");\n      }\n\n      if (Object.keys(Constants.positions).indexOf(_notification.position) === -1) {\n        throw new Error(\"'\" + _notification.position + \"' is not a valid position.\");\n      } // Some preparations\n\n\n      _notification.position = _notification.position.toLowerCase();\n      _notification.level = _notification.level.toLowerCase();\n      _notification.autoDismiss = parseInt(_notification.autoDismiss, 10);\n      _notification.uid = _notification.uid || this.uid;\n      _notification.ref = 'notification-' + _notification.uid;\n      this.uid += 1; // do not add if the notification already exists based on supplied uid\n\n      for (i = 0; i < notifications.length; i += 1) {\n        if (notifications[i].uid === _notification.uid) {\n          return false;\n        }\n      }\n\n      if (this.props.newOnTop) {\n        notifications.unshift(_notification);\n      } else {\n        notifications.push(_notification);\n      }\n\n      if (typeof _notification.onAdd === 'function') {\n        notification.onAdd(_notification);\n      }\n\n      this.setState({\n        notifications: notifications\n      });\n      return _notification;\n    }\n  }, {\n    key: \"getNotificationRef\",\n    value: function getNotificationRef(notification) {\n      var _this3 = this;\n\n      var foundNotification = null;\n      Object.keys(this.refs).forEach(function (container) {\n        if (container.indexOf('container') > -1) {\n          Object.keys(_this3.refs[container].refs).forEach(function (_notification) {\n            var uid = notification.uid ? notification.uid : notification;\n\n            if (_notification === 'notification-' + uid) {\n              // NOTE: Stop iterating further and return the found notification.\n              // Since UIDs are uniques and there won't be another notification found.\n              foundNotification = _this3.refs[container].refs[_notification];\n            }\n          });\n        }\n      });\n      return foundNotification;\n    }\n  }, {\n    key: \"removeNotification\",\n    value: function removeNotification(notification) {\n      var foundNotification = this.getNotificationRef(notification);\n      return foundNotification && foundNotification._hideNotification();\n    }\n  }, {\n    key: \"editNotification\",\n    value: function editNotification(notification, newNotification) {\n      var foundNotification = null; // NOTE: Find state notification to update by using\n      // `setState` and forcing React to re-render the component.\n\n      var uid = notification.uid ? notification.uid : notification;\n      var newNotifications = this.state.notifications.filter(function (stateNotification) {\n        if (uid === stateNotification.uid) {\n          foundNotification = stateNotification;\n          return false;\n        }\n\n        return true;\n      });\n\n      if (!foundNotification) {\n        return;\n      }\n\n      newNotifications.push(merge({}, foundNotification, newNotification));\n      this.setState({\n        notifications: newNotifications\n      });\n    }\n  }, {\n    key: \"clearNotifications\",\n    value: function clearNotifications() {\n      var _this4 = this;\n\n      Object.keys(this.refs).forEach(function (container) {\n        if (container.indexOf('container') > -1) {\n          Object.keys(_this4.refs[container].refs).forEach(function (_notification) {\n            _this4.refs[container].refs[_notification]._hideNotification();\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var containers = null;\n      var notifications = this.state.notifications;\n\n      if (notifications.length) {\n        containers = Object.keys(Constants.positions).map(function (position) {\n          var _notifications = notifications.filter(function (notification) {\n            return position === notification.position;\n          });\n\n          if (!_notifications.length) {\n            return null;\n          }\n\n          return React.createElement(NotificationContainer, {\n            ref: 'container-' + position,\n            key: position,\n            position: position,\n            notifications: _notifications,\n            getStyles: _this5._getStyles,\n            onRemove: _this5._didNotificationRemoved,\n            noAnimation: _this5.props.noAnimation,\n            allowHTML: _this5.props.allowHTML\n          });\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"notifications-wrapper\",\n        style: this.wrapper()\n      }, containers);\n    }\n  }]);\n\n  return NotificationSystem;\n}(React.Component);\n\nNotificationSystem.propTypes = {\n  style: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  noAnimation: PropTypes.bool,\n  allowHTML: PropTypes.bool,\n  newOnTop: PropTypes.bool\n};\nNotificationSystem.defaultProps = {\n  style: {},\n  noAnimation: false,\n  allowHTML: false,\n  newOnTop: false\n};\nmodule.exports = NotificationSystem;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/node_modules/react-notification-system/dist/NotificationSystem.js"],"names":["React","require","PropTypes","merge","NotificationContainer","Constants","Styles","NotificationSystem","state","notifications","uid","_isMounted","overrideWidth","overrideStyle","elements","notification","title","messageWrapper","dismiss","action","actionWrapper","setOverrideStyle","bind","wrapper","container","byElement","_didNotificationRemoved","addNotification","getNotificationRef","removeNotification","editNotification","clearNotifications","_getStyles","props","style","Wrapper","position","override","Containers","DefaultStyle","width","element","level","_element","filter","toCheck","setState","onRemove","_notification","i","Error","Object","keys","levels","indexOf","isNaN","autoDismiss","positions","toLowerCase","parseInt","ref","length","newOnTop","unshift","push","onAdd","foundNotification","refs","forEach","_hideNotification","newNotification","newNotifications","stateNotification","containers","map","_notifications","createElement","key","getStyles","noAnimation","allowHTML","className","Component","propTypes","oneOfType","bool","object","defaultProps","module","exports"],"mappings":"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","sourcesContent":["var React = require('react');\nvar PropTypes = require('prop-types');\nvar merge = require('object-assign');\nvar NotificationContainer = require('./NotificationContainer');\nvar Constants = require('./constants');\nvar Styles = require('./styles');\n\nclass NotificationSystem extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      notifications: []\n    };\n    this.uid = 3400;\n    this._isMounted = false;\n    this.overrideWidth = null;\n    this.overrideStyle = {};\n    this.elements = {\n      notification: 'NotificationItem',\n      title: 'Title',\n      messageWrapper: 'MessageWrapper',\n      dismiss: 'Dismiss',\n      action: 'Action',\n      actionWrapper: 'ActionWrapper'\n    };\n\n    this.setOverrideStyle = this.setOverrideStyle.bind(this);\n    this.wrapper = this.wrapper.bind(this);\n    this.container = this.container.bind(this);\n    this.byElement = this.byElement.bind(this);\n    this._didNotificationRemoved = this._didNotificationRemoved.bind(this);\n    this.addNotification = this.addNotification.bind(this);\n    this.getNotificationRef = this.getNotificationRef.bind(this);\n    this.removeNotification = this.removeNotification.bind(this);\n    this.editNotification = this.editNotification.bind(this);\n    this.clearNotifications = this.clearNotifications.bind(this);\n\n    this._getStyles = {\n      overrideWidth: this.overrideWidth,\n      overrideStyle: this.overrideStyle,\n      elements: this.elements,\n      setOverrideStyle: this.setOverrideStyle,\n      wrapper: this.wrapper,\n      container: this.container,\n      byElement: this.byElement\n    };\n  }\n\n  componentDidMount() {\n    this.setOverrideStyle(this.props.style);\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  setOverrideStyle(style) {\n    this.overrideStyle = style;\n  }\n\n  wrapper() {\n    if (!this.overrideStyle) return {};\n    return merge({}, Styles.Wrapper, this.overrideStyle.Wrapper);\n  }\n\n  container(position) {\n    var override = this.overrideStyle.Containers || {};\n    if (!this.overrideStyle) return {};\n\n    this.overrideWidth = Styles.Containers.DefaultStyle.width;\n\n    if (override.DefaultStyle && override.DefaultStyle.width) {\n      this.overrideWidth = override.DefaultStyle.width;\n    }\n\n    if (override[position] && override[position].width) {\n      this.overrideWidth = override[position].width;\n    }\n\n    return merge(\n      {},\n      Styles.Containers.DefaultStyle,\n      Styles.Containers[position],\n      override.DefaultStyle,\n      override[position]\n    );\n  }\n\n  byElement(element) {\n    return (level) => {\n      var _element = this.elements[element];\n      var override = this.overrideStyle[_element] || {};\n      if (!this.overrideStyle) return {};\n      return merge(\n        {},\n        Styles[_element].DefaultStyle,\n        Styles[_element][level],\n        override.DefaultStyle,\n        override[level]\n      );\n    };\n  }\n\n  _didNotificationRemoved(uid) {\n    var notification;\n    var notifications = this.state.notifications.filter(function(toCheck) {\n      if (toCheck.uid === uid) {\n        notification = toCheck;\n        return false;\n      }\n      return true;\n    });\n\n    if (this._isMounted) {\n      this.setState({ notifications: notifications });\n    }\n\n    if (notification && notification.onRemove) {\n      notification.onRemove(notification);\n    }\n  }\n\n  addNotification(notification) {\n    var _notification = merge({}, Constants.notification, notification);\n    var notifications = this.state.notifications;\n    var i;\n\n\n    if (!_notification.level) {\n      throw new Error('notification level is required.');\n    }\n\n    if (Object.keys(Constants.levels).indexOf(_notification.level) === -1) {\n      throw new Error(\"'\" + _notification.level + \"' is not a valid level.\");\n    }\n\n    // eslint-disable-next-line\n    if (isNaN(_notification.autoDismiss)) {\n      throw new Error(\"'autoDismiss' must be a number.\");\n    }\n\n    if (\n      Object.keys(Constants.positions).indexOf(_notification.position) === -1\n    ) {\n      throw new Error(\"'\" + _notification.position + \"' is not a valid position.\");\n    }\n\n    // Some preparations\n    _notification.position = _notification.position.toLowerCase();\n    _notification.level = _notification.level.toLowerCase();\n    _notification.autoDismiss = parseInt(_notification.autoDismiss, 10);\n\n    _notification.uid = _notification.uid || this.uid;\n    _notification.ref = 'notification-' + _notification.uid;\n    this.uid += 1;\n\n\n    // do not add if the notification already exists based on supplied uid\n    for (i = 0; i < notifications.length; i += 1) {\n      if (notifications[i].uid === _notification.uid) {\n        return false;\n      }\n    }\n\n    if (this.props.newOnTop) {\n      notifications.unshift(_notification);\n    } else {\n      notifications.push(_notification);\n    }\n\n\n    if (typeof _notification.onAdd === 'function') {\n      notification.onAdd(_notification);\n    }\n\n    this.setState({\n      notifications: notifications\n    });\n\n    return _notification;\n  }\n\n  getNotificationRef(notification) {\n    var foundNotification = null;\n\n    Object.keys(this.refs).forEach((container) => {\n      if (container.indexOf('container') > -1) {\n        Object.keys(this.refs[container].refs).forEach((_notification) => {\n          var uid = notification.uid ? notification.uid : notification;\n          if (_notification === 'notification-' + uid) {\n            // NOTE: Stop iterating further and return the found notification.\n            // Since UIDs are uniques and there won't be another notification found.\n            foundNotification = this.refs[container].refs[_notification];\n          }\n        });\n      }\n    });\n\n    return foundNotification;\n  }\n\n  removeNotification(notification) {\n    var foundNotification = this.getNotificationRef(notification);\n    return foundNotification && foundNotification._hideNotification();\n  }\n\n  editNotification(notification, newNotification) {\n    var foundNotification = null;\n    // NOTE: Find state notification to update by using\n    // `setState` and forcing React to re-render the component.\n    var uid = notification.uid ? notification.uid : notification;\n\n    var newNotifications = this.state.notifications.filter(function(stateNotification) {\n      if (uid === stateNotification.uid) {\n        foundNotification = stateNotification;\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!foundNotification) {\n      return;\n    }\n\n    newNotifications.push(merge({}, foundNotification, newNotification));\n\n    this.setState({\n      notifications: newNotifications\n    });\n  }\n\n  clearNotifications() {\n    Object.keys(this.refs).forEach((container) => {\n      if (container.indexOf('container') > -1) {\n        Object.keys(this.refs[container].refs).forEach((_notification) => {\n          this.refs[container].refs[_notification]._hideNotification();\n        });\n      }\n    });\n  }\n\n  render() {\n    var containers = null;\n    var notifications = this.state.notifications;\n\n    if (notifications.length) {\n      containers = Object.keys(Constants.positions).map((position) => {\n        var _notifications = notifications.filter((notification) => {\n          return position === notification.position;\n        });\n\n        if (!_notifications.length) {\n          return null;\n        }\n\n        return (\n          React.createElement(NotificationContainer, {\n            ref:  'container-' + position, \n            key:  position, \n            position:  position, \n            notifications:  _notifications, \n            getStyles:  this._getStyles, \n            onRemove:  this._didNotificationRemoved, \n            noAnimation:  this.props.noAnimation, \n            allowHTML:  this.props.allowHTML}\n          )\n        );\n      });\n    }\n\n    return (\n      React.createElement(\"div\", {className: \"notifications-wrapper\", style:  this.wrapper() }, \n        containers\n      )\n    );\n  }\n}\n\nNotificationSystem.propTypes = {\n  style: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  noAnimation: PropTypes.bool,\n  allowHTML: PropTypes.bool,\n  newOnTop: PropTypes.bool\n};\n\nNotificationSystem.defaultProps = {\n  style: {},\n  noAnimation: false,\n  allowHTML: false,\n  newOnTop: false\n};\n\nmodule.exports = NotificationSystem;\n"]},"metadata":{},"sourceType":"script"}