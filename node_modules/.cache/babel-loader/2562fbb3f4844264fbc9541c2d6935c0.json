{"ast":null,"code":"var _jsxFileName = \"E:\\\\light-bootstrap-dashboard-react-master\\\\src\\\\layouts\\\\Admin.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\nimport { connect } from \"react-redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\nimport firebase from \"util/firebase\";\nimport { addObject } from \"redux/index\";\nimport { style } from \"variables/Variables.jsx\";\nimport routes from \"routes.js\";\nimport imageSide from \"assets/img/sidebar-3.jpg\";\nimport { array, object } from \"yup/lib/locale\";\nimport { useRef } from \"react\";\nimport { getFirebase } from \"redux/Selector/Selectors\"; // class Admin extends Component {\n\nconst Admin = props => {\n  // constructor(props) {\n  //   super(props);\n  //   this.notify = null;\n  //   this.setNotify = (element) => {\n  //     this.notify = element;\n  //   };\n  //   this.state = {\n  //     _notificationSystem: null,\n  //     image: image,\n  //     color: \"black\",\n  //     hasImage: true,\n  //     fixedClasses: \"dropdown show-dropdown open\",\n  //   };\n  // }\n  // const { notify, setNotify } = React.useState(null);\n  const {\n    image,\n    setImage\n  } = React.useState(imageSide);\n  const {\n    color,\n    setColor\n  } = React.useState(\"black\");\n  const {\n    hasImage,\n    setHasImage\n  } = React.useState(true);\n  const {\n    fixedClasses,\n    setFixedClasses\n  } = React.useState(\"dropdown show-dropdown open\");\n  const mainPanel = useRef();\n  const notify = useRef();\n  const dataInFirebase = useSelector(state => getFirebase(state));\n  const dispatch = useDispatch(); //! Hàm này có tác dụng là tạo ra một notification, ta sẽ dùng hàm này cứ mỗi khi firebase bắt\n  //! sự kiện\n\n  const addNotify = () => {\n    var color = Math.floor(Math.random() * 4 + 1);\n    var level;\n    const notification = notify.current;\n\n    switch (color) {\n      case 1:\n        level = \"success\";\n        break;\n\n      case 2:\n        level = \"warning\";\n        break;\n\n      case 3:\n        level = \"error\";\n        break;\n\n      case 4:\n        level = \"info\";\n        break;\n\n      default:\n        break;\n    }\n\n    notification.addNotification({\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        \"data-notify\": \"icon\",\n        className: \"pe-7s-gift\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 14\n        }\n      }),\n      message: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, \"Welcome to \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 22\n        }\n      }, \"Light Bootstrap Dashboard\"), \" - a beautiful freebie for every web developer.\"),\n      level: level,\n      position: \"tr\",\n      autoDismiss: 15\n    });\n  }; // handleNotificationClick = (position) => {\n  //   var color = Math.floor(Math.random() * 4 + 1);\n  //   var level;\n  //   switch (color) {\n  //     case 1:\n  //       level = \"success\";\n  //       break;\n  //     case 2:\n  //       level = \"warning\";\n  //       break;\n  //     case 3:\n  //       level = \"error\";\n  //       break;\n  //     case 4:\n  //       level = \"info\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   this.state._notificationSystem.addNotification({\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n  //     message: (\n  //       <div>\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n  //         every web developer.\n  //       </div>\n  //     ),\n  //     level: level,\n  //     position: position,\n  //     autoDismiss: 15,\n  //   });\n  // };\n\n\n  const getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return /*#__PURE__*/React.createElement(Route, {\n          path: prop.layout + prop.path,\n          render: props => /*#__PURE__*/React.createElement(prop.component, Object.assign({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }\n          })),\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }\n        });\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (props.location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n\n    return \"Brand\";\n  };\n\n  const handleImageClick = image => {\n    // this.setState({ image: image });\n    setImage(image);\n  };\n\n  const handleColorClick = color => {\n    // this.setState({ color: color });\n    setColor(color);\n  };\n\n  const handleHasImage = hasImage => {\n    // this.setState({ hasImage: hasImage });\n    setHasImage(hasImage);\n  };\n\n  const handleFixedClick = () => {\n    // if (this.state.fixedClasses === \"dropdown\") {\n    if (fixedClasses === \"dropdown\") {\n      // this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\n      setFixedClasses(\"dropdown show-dropdown open\");\n    } else {\n      // this.setState({ fixedClasses: \"dropdown\" });\n      setFixedClasses(\"dropdown\");\n    }\n  }; // React.useEffect(() => {\n  //   addNotify();\n  // }, [dataInFirebase]);\n\n\n  React.useEffect(() => {\n    // console.log(\"Run didMount\");\n    console.log(\"arrr= \", dataInFirebase.firebaseData);\n\n    if (dataInFirebase.firebaseData.length != 0) {\n      addNotify();\n    }\n\n    firebaseListening();\n    return () => {\n      removeFirebaseListening();\n    };\n  }, []); // React.useEffect(() => {\n  //   console.log(\"Run didUpdate\");\n  //   if (dataInFirebase.firebaseData.length != 0) {\n  //   }\n  // }, [dataInFirebase]);\n  // componentDidMount() {\n  // }\n  // componentDidUpdate(e) {\n  //   if (\n  //     window.innerWidth < 993 &&\n  //     e.history.location.pathname !== e.location.pathname &&\n  //     document.documentElement.className.indexOf(\"nav-open\") !== -1\n  //   ) {\n  //     document.documentElement.classList.toggle(\"nav-open\");\n  //   }\n  //   if (e.history.action === \"PUSH\") {\n  //     document.documentElement.scrollTop = 0;\n  //     document.scrollingElement.scrollTop = 0;\n  //     mainPanel.scrollTop = 0;\n  //   }\n  // }\n  // componentWillUnmount() {\n  //   this.removeFirebaseListening();\n  // }\n  // ! Lắng nghe sự thay đổi của database trên firebase\n\n  function firebaseListening(params) {\n    var userCount = firebase.database().ref(\"users\");\n    userCount.on(\"value\", snapshot => {\n      let newArr = []; // ? Vì snapshot sẽ chỉ trả về các obj nên ta muốn nó thành 1 array ta phải làm bằng tay, chi tiết thế nào thì coi trong quick note\n\n      snapshot.forEach(child => {\n        newArr.push({ ...child.val(),\n          userId: child.key\n        });\n      });\n      dispatch(addObject(newArr));\n    });\n  }\n\n  function removeFirebaseListening(params) {\n    firebase.database().ref(\"user\").off(\"value\");\n  } // render() {\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NotificationSystem, {\n    ref: notify,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Sidebar, Object.assign({}, props, {\n    routes: routes // image={this.state.image}\n    // color={this.state.color}\n    // hasImage={this.state.hasImage}\n    ,\n    image: image,\n    color: color,\n    hasImage: hasImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"main-panel\",\n    className: \"main-panel\",\n    ref: mainPanel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AdminNavbar, Object.assign({}, props, {\n    brandText: getBrandText(props.location.pathname),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }, getRoutes(routes)), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  })));\n}; // }\n//Có tác dụng select ra những state cần xử lí\n\n/**\n * state này là của redux, và chữ fn đóng vai trò là 1 props\n * fn có giá trị là state.full_name của redux\n * @param {} state\n */\n// const mapStateToProps = (state) => {\n//   return {\n//     firebase: state.firebase,\n//   };\n// };\n// const mapDispatchToProps = dispatch => {\n//   return {\n//   }\n// };\n// export default connect(mapStateToProps, { addObject })(Admin);\n\n\nexport default Admin;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/layouts/Admin.jsx"],"names":["React","Component","Route","Switch","NotificationSystem","connect","useDispatch","useSelector","AdminNavbar","Footer","Sidebar","FixedPlugin","firebase","addObject","style","routes","imageSide","array","object","useRef","getFirebase","Admin","props","image","setImage","useState","color","setColor","hasImage","setHasImage","fixedClasses","setFixedClasses","mainPanel","notify","dataInFirebase","state","dispatch","addNotify","Math","floor","random","level","notification","current","addNotification","title","message","position","autoDismiss","getRoutes","map","prop","key","layout","path","getBrandText","i","length","location","pathname","indexOf","name","handleImageClick","handleColorClick","handleHasImage","handleFixedClick","useEffect","console","log","firebaseData","firebaseListening","removeFirebaseListening","params","userCount","database","ref","on","snapshot","newArr","forEach","child","push","val","userId","off"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\nimport { connect } from \"react-redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\nimport firebase from \"util/firebase\";\nimport { addObject } from \"redux/index\";\n\nimport { style } from \"variables/Variables.jsx\";\n\nimport routes from \"routes.js\";\n\nimport imageSide from \"assets/img/sidebar-3.jpg\";\nimport { array, object } from \"yup/lib/locale\";\nimport { useRef } from \"react\";\nimport { getFirebase } from \"redux/Selector/Selectors\";\n\n// class Admin extends Component {\nconst Admin = (props) => {\n  // constructor(props) {\n  //   super(props);\n  //   this.notify = null;\n\n  //   this.setNotify = (element) => {\n  //     this.notify = element;\n  //   };\n\n  //   this.state = {\n  //     _notificationSystem: null,\n  //     image: image,\n  //     color: \"black\",\n  //     hasImage: true,\n  //     fixedClasses: \"dropdown show-dropdown open\",\n  //   };\n  // }\n  // const { notify, setNotify } = React.useState(null);\n  const { image, setImage } = React.useState(imageSide);\n  const { color, setColor } = React.useState(\"black\");\n  const { hasImage, setHasImage } = React.useState(true);\n  const { fixedClasses, setFixedClasses } = React.useState(\n    \"dropdown show-dropdown open\"\n  );\n  const mainPanel = useRef();\n  const notify = useRef();\n  const dataInFirebase = useSelector((state) => getFirebase(state));\n  const dispatch = useDispatch();\n\n  //! Hàm này có tác dụng là tạo ra một notification, ta sẽ dùng hàm này cứ mỗi khi firebase bắt\n  //! sự kiện\n  const addNotify = () => {\n    var color = Math.floor(Math.random() * 4 + 1);\n    var level;\n    const notification = notify.current;\n    switch (color) {\n      case 1:\n        level = \"success\";\n        break;\n      case 2:\n        level = \"warning\";\n        break;\n      case 3:\n        level = \"error\";\n        break;\n      case 4:\n        level = \"info\";\n        break;\n      default:\n        break;\n    }\n    notification.addNotification({\n      title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n      message: (\n        <div>\n          Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n          every web developer.\n        </div>\n      ),\n      level: level,\n      position: \"tr\",\n      autoDismiss: 15,\n    });\n  };\n\n  // handleNotificationClick = (position) => {\n  //   var color = Math.floor(Math.random() * 4 + 1);\n  //   var level;\n  //   switch (color) {\n  //     case 1:\n  //       level = \"success\";\n  //       break;\n  //     case 2:\n  //       level = \"warning\";\n  //       break;\n  //     case 3:\n  //       level = \"error\";\n  //       break;\n  //     case 4:\n  //       level = \"info\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   this.state._notificationSystem.addNotification({\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n  //     message: (\n  //       <div>\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n  //         every web developer.\n  //       </div>\n  //     ),\n  //     level: level,\n  //     position: position,\n  //     autoDismiss: 15,\n  //   });\n  // };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            render={(props) => (\n              <prop.component\n                {...props}\n                // handleClick={handleNotificationClick}\n              />\n            )}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        props.location.pathname.indexOf(routes[i].layout + routes[i].path) !==\n        -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  const handleImageClick = (image) => {\n    // this.setState({ image: image });\n    setImage(image);\n  };\n  const handleColorClick = (color) => {\n    // this.setState({ color: color });\n    setColor(color);\n  };\n  const handleHasImage = (hasImage) => {\n    // this.setState({ hasImage: hasImage });\n    setHasImage(hasImage);\n  };\n  const handleFixedClick = () => {\n    // if (this.state.fixedClasses === \"dropdown\") {\n    if (fixedClasses === \"dropdown\") {\n      // this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\n      setFixedClasses(\"dropdown show-dropdown open\");\n    } else {\n      // this.setState({ fixedClasses: \"dropdown\" });\n      setFixedClasses(\"dropdown\");\n    }\n  };\n\n  // React.useEffect(() => {\n  //   addNotify();\n  // }, [dataInFirebase]);\n\n  React.useEffect(() => {\n    // console.log(\"Run didMount\");\n    console.log(\"arrr= \", dataInFirebase.firebaseData);\n    if (dataInFirebase.firebaseData.length != 0) {\n      addNotify();\n    }\n    firebaseListening();\n    return () => {\n      removeFirebaseListening();\n    };\n  }, []);\n  // React.useEffect(() => {\n  //   console.log(\"Run didUpdate\");\n  //   if (dataInFirebase.firebaseData.length != 0) {\n  //   }\n  // }, [dataInFirebase]);\n\n  // componentDidMount() {\n  // }\n  // componentDidUpdate(e) {\n  //   if (\n  //     window.innerWidth < 993 &&\n  //     e.history.location.pathname !== e.location.pathname &&\n  //     document.documentElement.className.indexOf(\"nav-open\") !== -1\n  //   ) {\n  //     document.documentElement.classList.toggle(\"nav-open\");\n  //   }\n  //   if (e.history.action === \"PUSH\") {\n  //     document.documentElement.scrollTop = 0;\n  //     document.scrollingElement.scrollTop = 0;\n  //     mainPanel.scrollTop = 0;\n  //   }\n  // }\n  // componentWillUnmount() {\n  //   this.removeFirebaseListening();\n  // }\n\n  // ! Lắng nghe sự thay đổi của database trên firebase\n  function firebaseListening(params) {\n    var userCount = firebase.database().ref(\"users\");\n    userCount.on(\"value\", (snapshot) => {\n      let newArr = [];\n      // ? Vì snapshot sẽ chỉ trả về các obj nên ta muốn nó thành 1 array ta phải làm bằng tay, chi tiết thế nào thì coi trong quick note\n      snapshot.forEach((child) => {\n        newArr.push({ ...child.val(), userId: child.key });\n      });\n      dispatch(addObject(newArr));\n    });\n  }\n\n  function removeFirebaseListening(params) {\n    firebase.database().ref(\"user\").off(\"value\");\n  }\n  // render() {\n  return (\n    <div className=\"wrapper\">\n      {/* {console.log(\"arrr= \", dataInFirebase.firebaseData)} */}\n      <NotificationSystem ref={notify} style={style} />\n      <Sidebar\n        {...props}\n        routes={routes}\n        // image={this.state.image}\n        // color={this.state.color}\n        // hasImage={this.state.hasImage}\n        image={image}\n        color={color}\n        hasImage={hasImage}\n      />\n      <div id=\"main-panel\" className=\"main-panel\" ref={mainPanel}>\n        <AdminNavbar\n          {...props}\n          brandText={getBrandText(props.location.pathname)}\n        />\n        <Switch>{getRoutes(routes)}</Switch>\n        <Footer />\n      </div>\n    </div>\n  );\n};\n// }\n\n//Có tác dụng select ra những state cần xử lí\n/**\n * state này là của redux, và chữ fn đóng vai trò là 1 props\n * fn có giá trị là state.full_name của redux\n * @param {} state\n */\n// const mapStateToProps = (state) => {\n//   return {\n//     firebase: state.firebase,\n//   };\n// };\n// const mapDispatchToProps = dispatch => {\n//   return {\n\n//   }\n// };\n\n// export default connect(mapStateToProps, { addObject })(Admin);\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}