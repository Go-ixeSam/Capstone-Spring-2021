{"ast":null,"code":"// import ContractType from \"./contractType\";\nimport * as variable from \"../../variables/Variables\";\nimport JSONPLACEHOLDERApi from \"api/JSONPLACEHOLDERApi\";\n\nconst {\n  createSlice,\n  createAsyncThunk\n} = require(\"@reduxjs/toolkit\");\n\nconst post = createSlice({\n  name: \"post\",\n  initialState: {\n    current: {},\n    loadingL: false,\n    error: \"\",\n    userPostVisible: false\n  },\n  reducers: {\n    setVisible: (state, action) => {\n      state.userPostVisible = action.payload;\n    }\n  },\n  extraReducers: {\n    [getALL.pending]: state => {},\n    [getALL.rejected]: (state, action) => {\n      state.error = action.error;\n    },\n    [getALL.fulfilled]: (state, action) => {\n      state.current = action.payload;\n    }\n  }\n});\nconst {\n  reducer: postReducer,\n  actions\n} = post; //createSlice sẽ trả về cho ta 2 biến là reducer và action\n\nexport const {\n  setVisible\n} = actions;\nexport default postReducer;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/redux/Post/PostSlice.jsx"],"names":["variable","JSONPLACEHOLDERApi","createSlice","createAsyncThunk","require","post","name","initialState","current","loadingL","error","userPostVisible","reducers","setVisible","state","action","payload","extraReducers","getALL","pending","rejected","fulfilled","reducer","postReducer","actions"],"mappings":"AAAA;AACA,OAAO,KAAKA,QAAZ,MAA0B,2BAA1B;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;;AAEA,MAAM;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAAoCC,OAAO,CAAC,kBAAD,CAAjD;;AAEA,MAAMC,IAAI,GAAGH,WAAW,CAAC;AACvBI,EAAAA,IAAI,EAAE,MADiB;AAEvBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE,EADG;AAEZC,IAAAA,QAAQ,EAAE,KAFE;AAGZC,IAAAA,KAAK,EAAE,EAHK;AAIZC,IAAAA,eAAe,EAAE;AAJL,GAFS;AAQvBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7BD,MAAAA,KAAK,CAACH,eAAN,GAAwBI,MAAM,CAACC,OAA/B;AACD;AAHO,GARa;AAavBC,EAAAA,aAAa,EAAE;AACb,KAACC,MAAM,CAACC,OAAR,GAAmBL,KAAD,IAAW,CAAE,CADlB;AAEb,KAACI,MAAM,CAACE,QAAR,GAAmB,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACpCD,MAAAA,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACL,KAArB;AACD,KAJY;AAKb,KAACQ,MAAM,CAACG,SAAR,GAAoB,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACrCD,MAAAA,KAAK,CAACN,OAAN,GAAgBO,MAAM,CAACC,OAAvB;AACD;AAPY;AAbQ,CAAD,CAAxB;AAwBA,MAAM;AAAEM,EAAAA,OAAO,EAAEC,WAAX;AAAwBC,EAAAA;AAAxB,IAAoCnB,IAA1C,C,CAAgD;;AAChD,OAAO,MAAM;AAAEQ,EAAAA;AAAF,IAAiBW,OAAvB;AACP,eAAeD,WAAf","sourcesContent":["// import ContractType from \"./contractType\";\r\nimport * as variable from \"../../variables/Variables\";\r\nimport JSONPLACEHOLDERApi from \"api/JSONPLACEHOLDERApi\";\r\n\r\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\n\r\nconst post = createSlice({\r\n  name: \"post\",\r\n  initialState: {\r\n    current: {},\r\n    loadingL: false,\r\n    error: \"\",\r\n    userPostVisible: false,\r\n  },\r\n  reducers: {\r\n    setVisible: (state, action) => {\r\n      state.userPostVisible = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getALL.pending]: (state) => {},\r\n    [getALL.rejected]: (state, action) => {\r\n      state.error = action.error;\r\n    },\r\n    [getALL.fulfilled]: (state, action) => {\r\n      state.current = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst { reducer: postReducer, actions } = post; //createSlice sẽ trả về cho ta 2 biến là reducer và action\r\nexport const { setVisible } = actions;\r\nexport default postReducer;\r\n"]},"metadata":{},"sourceType":"module"}