{"ast":null,"code":"var SourceMapConsumer = require('source-map').SourceMapConsumer;\n\nvar path = require('path');\n\nvar fs;\n\ntry {\n  fs = require('fs');\n\n  if (!fs.existsSync || !fs.readFileSync) {\n    // fs doesn't have all methods we need\n    fs = null;\n  }\n} catch (err) {\n  /* nop */\n}\n\nvar bufferFrom = require('buffer-from');\n/**\r\n * Requires a module which is protected against bundler minification.\r\n *\r\n * @param {NodeModule} mod\r\n * @param {string} request\r\n */\n\n\nfunction dynamicRequire(mod, request) {\n  return mod.require(request);\n} // Only install once if called multiple times\n\n\nvar errorFormatterInstalled = false;\nvar uncaughtShimInstalled = false; // If true, the caches are reset before a stack trace formatting operation\n\nvar emptyCacheBetweenOperations = false; // Supports {browser, node, auto}\n\nvar environment = \"auto\"; // Maps a file path to a string containing the file contents\n\nvar fileContentsCache = {}; // Maps a file path to a source map for that file\n\nvar sourceMapCache = {}; // Regex for detecting source maps\n\nvar reSourceMap = /^data:application\\/json[^,]+base64,/; // Priority list of retrieve handlers\n\nvar retrieveFileHandlers = [];\nvar retrieveMapHandlers = [];\n\nfunction isInBrowser() {\n  if (environment === \"browser\") return true;\n  if (environment === \"node\") return false;\n  return typeof window !== 'undefined' && typeof XMLHttpRequest === 'function' && !(window.require && window.module && window.process && window.process.type === \"renderer\");\n}\n\nfunction hasGlobalProcessEventEmitter() {\n  return typeof process === 'object' && process !== null && typeof process.on === 'function';\n}\n\nfunction handlerExec(list) {\n  return function (arg) {\n    for (var i = 0; i < list.length; i++) {\n      var ret = list[i](arg);\n\n      if (ret) {\n        return ret;\n      }\n    }\n\n    return null;\n  };\n}\n\nvar retrieveFile = handlerExec(retrieveFileHandlers);\nretrieveFileHandlers.push(function (path) {\n  // Trim the path to make sure there is no extra whitespace.\n  path = path.trim();\n\n  if (/^file:/.test(path)) {\n    // existsSync/readFileSync can't handle file protocol, but once stripped, it works\n    path = path.replace(/file:\\/\\/\\/(\\w:)?/, function (protocol, drive) {\n      return drive ? '' : // file:///C:/dir/file -> C:/dir/file\n      '/'; // file:///root-dir/file -> /root-dir/file\n    });\n  }\n\n  if (path in fileContentsCache) {\n    return fileContentsCache[path];\n  }\n\n  var contents = '';\n\n  try {\n    if (!fs) {\n      // Use SJAX if we are in the browser\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', path,\n      /** async */\n      false);\n      xhr.send(null);\n\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        contents = xhr.responseText;\n      }\n    } else if (fs.existsSync(path)) {\n      // Otherwise, use the filesystem\n      contents = fs.readFileSync(path, 'utf8');\n    }\n  } catch (er) {\n    /* ignore any errors */\n  }\n\n  return fileContentsCache[path] = contents;\n}); // Support URLs relative to a directory, but be careful about a protocol prefix\n// in case we are in the browser (i.e. directories may start with \"http://\" or \"file:///\")\n\nfunction supportRelativeURL(file, url) {\n  if (!file) return url;\n  var dir = path.dirname(file);\n  var match = /^\\w+:\\/\\/[^\\/]*/.exec(dir);\n  var protocol = match ? match[0] : '';\n  var startPath = dir.slice(protocol.length);\n\n  if (protocol && /^\\/\\w\\:/.test(startPath)) {\n    // handle file:///C:/ paths\n    protocol += '/';\n    return protocol + path.resolve(dir.slice(protocol.length), url).replace(/\\\\/g, '/');\n  }\n\n  return protocol + path.resolve(dir.slice(protocol.length), url);\n}\n\nfunction retrieveSourceMapURL(source) {\n  var fileData;\n\n  if (isInBrowser()) {\n    try {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', source, false);\n      xhr.send(null);\n      fileData = xhr.readyState === 4 ? xhr.responseText : null; // Support providing a sourceMappingURL via the SourceMap header\n\n      var sourceMapHeader = xhr.getResponseHeader(\"SourceMap\") || xhr.getResponseHeader(\"X-SourceMap\");\n\n      if (sourceMapHeader) {\n        return sourceMapHeader;\n      }\n    } catch (e) {}\n  } // Get the URL of the source map\n\n\n  fileData = retrieveFile(source);\n  var re = /(?:\\/\\/[@#][\\s]*sourceMappingURL=([^\\s'\"]+)[\\s]*$)|(?:\\/\\*[@#][\\s]*sourceMappingURL=([^\\s*'\"]+)[\\s]*(?:\\*\\/)[\\s]*$)/mg; // Keep executing the search to find the *last* sourceMappingURL to avoid\n  // picking up sourceMappingURLs from comments, strings, etc.\n\n  var lastMatch, match;\n\n  while (match = re.exec(fileData)) lastMatch = match;\n\n  if (!lastMatch) return null;\n  return lastMatch[1];\n}\n\n; // Can be overridden by the retrieveSourceMap option to install. Takes a\n// generated source filename; returns a {map, optional url} object, or null if\n// there is no source map.  The map field may be either a string or the parsed\n// JSON object (ie, it must be a valid argument to the SourceMapConsumer\n// constructor).\n\nvar retrieveSourceMap = handlerExec(retrieveMapHandlers);\nretrieveMapHandlers.push(function (source) {\n  var sourceMappingURL = retrieveSourceMapURL(source);\n  if (!sourceMappingURL) return null; // Read the contents of the source map\n\n  var sourceMapData;\n\n  if (reSourceMap.test(sourceMappingURL)) {\n    // Support source map URL as a data url\n    var rawData = sourceMappingURL.slice(sourceMappingURL.indexOf(',') + 1);\n    sourceMapData = bufferFrom(rawData, \"base64\").toString();\n    sourceMappingURL = source;\n  } else {\n    // Support source map URLs relative to the source URL\n    sourceMappingURL = supportRelativeURL(source, sourceMappingURL);\n    sourceMapData = retrieveFile(sourceMappingURL);\n  }\n\n  if (!sourceMapData) {\n    return null;\n  }\n\n  return {\n    url: sourceMappingURL,\n    map: sourceMapData\n  };\n});\n\nfunction mapSourcePosition(position) {\n  var sourceMap = sourceMapCache[position.source];\n\n  if (!sourceMap) {\n    // Call the (overrideable) retrieveSourceMap function to get the source map.\n    var urlAndMap = retrieveSourceMap(position.source);\n\n    if (urlAndMap) {\n      sourceMap = sourceMapCache[position.source] = {\n        url: urlAndMap.url,\n        map: new SourceMapConsumer(urlAndMap.map)\n      }; // Load all sources stored inline with the source map into the file cache\n      // to pretend like they are already loaded. They may not exist on disk.\n\n      if (sourceMap.map.sourcesContent) {\n        sourceMap.map.sources.forEach(function (source, i) {\n          var contents = sourceMap.map.sourcesContent[i];\n\n          if (contents) {\n            var url = supportRelativeURL(sourceMap.url, source);\n            fileContentsCache[url] = contents;\n          }\n        });\n      }\n    } else {\n      sourceMap = sourceMapCache[position.source] = {\n        url: null,\n        map: null\n      };\n    }\n  } // Resolve the source URL relative to the URL of the source map\n\n\n  if (sourceMap && sourceMap.map && typeof sourceMap.map.originalPositionFor === 'function') {\n    var originalPosition = sourceMap.map.originalPositionFor(position); // Only return the original position if a matching line was found. If no\n    // matching line is found then we return position instead, which will cause\n    // the stack trace to print the path and line for the compiled file. It is\n    // better to give a precise location in the compiled file than a vague\n    // location in the original file.\n\n    if (originalPosition.source !== null) {\n      originalPosition.source = supportRelativeURL(sourceMap.url, originalPosition.source);\n      return originalPosition;\n    }\n  }\n\n  return position;\n} // Parses code generated by FormatEvalOrigin(), a function inside V8:\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js\n\n\nfunction mapEvalOrigin(origin) {\n  // Most eval() calls are in this format\n  var match = /^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(origin);\n\n  if (match) {\n    var position = mapSourcePosition({\n      source: match[2],\n      line: +match[3],\n      column: match[4] - 1\n    });\n    return 'eval at ' + match[1] + ' (' + position.source + ':' + position.line + ':' + (position.column + 1) + ')';\n  } // Parse nested eval() calls using recursion\n\n\n  match = /^eval at ([^(]+) \\((.+)\\)$/.exec(origin);\n\n  if (match) {\n    return 'eval at ' + match[1] + ' (' + mapEvalOrigin(match[2]) + ')';\n  } // Make sure we still return useful information if we didn't find anything\n\n\n  return origin;\n} // This is copied almost verbatim from the V8 source code at\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js. The\n// implementation of wrapCallSite() used to just forward to the actual source\n// code of CallSite.prototype.toString but unfortunately a new release of V8\n// did something to the prototype chain and broke the shim. The only fix I\n// could find was copy/paste.\n\n\nfunction CallSiteToString() {\n  var fileName;\n  var fileLocation = \"\";\n\n  if (this.isNative()) {\n    fileLocation = \"native\";\n  } else {\n    fileName = this.getScriptNameOrSourceURL();\n\n    if (!fileName && this.isEval()) {\n      fileLocation = this.getEvalOrigin();\n      fileLocation += \", \"; // Expecting source position to follow.\n    }\n\n    if (fileName) {\n      fileLocation += fileName;\n    } else {\n      // Source code does not originate from a file and is not native, but we\n      // can still get the source position inside the source string, e.g. in\n      // an eval string.\n      fileLocation += \"<anonymous>\";\n    }\n\n    var lineNumber = this.getLineNumber();\n\n    if (lineNumber != null) {\n      fileLocation += \":\" + lineNumber;\n      var columnNumber = this.getColumnNumber();\n\n      if (columnNumber) {\n        fileLocation += \":\" + columnNumber;\n      }\n    }\n  }\n\n  var line = \"\";\n  var functionName = this.getFunctionName();\n  var addSuffix = true;\n  var isConstructor = this.isConstructor();\n  var isMethodCall = !(this.isToplevel() || isConstructor);\n\n  if (isMethodCall) {\n    var typeName = this.getTypeName(); // Fixes shim to be backward compatable with Node v0 to v4\n\n    if (typeName === \"[object Object]\") {\n      typeName = \"null\";\n    }\n\n    var methodName = this.getMethodName();\n\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) != 0) {\n        line += typeName + \".\";\n      }\n\n      line += functionName;\n\n      if (methodName && functionName.indexOf(\".\" + methodName) != functionName.length - methodName.length - 1) {\n        line += \" [as \" + methodName + \"]\";\n      }\n    } else {\n      line += typeName + \".\" + (methodName || \"<anonymous>\");\n    }\n  } else if (isConstructor) {\n    line += \"new \" + (functionName || \"<anonymous>\");\n  } else if (functionName) {\n    line += functionName;\n  } else {\n    line += fileLocation;\n    addSuffix = false;\n  }\n\n  if (addSuffix) {\n    line += \" (\" + fileLocation + \")\";\n  }\n\n  return line;\n}\n\nfunction cloneCallSite(frame) {\n  var object = {};\n  Object.getOwnPropertyNames(Object.getPrototypeOf(frame)).forEach(function (name) {\n    object[name] = /^(?:is|get)/.test(name) ? function () {\n      return frame[name].call(frame);\n    } : frame[name];\n  });\n  object.toString = CallSiteToString;\n  return object;\n}\n\nfunction wrapCallSite(frame, state) {\n  // provides interface backward compatibility\n  if (state === undefined) {\n    state = {\n      nextPosition: null,\n      curPosition: null\n    };\n  }\n\n  if (frame.isNative()) {\n    state.curPosition = null;\n    return frame;\n  } // Most call sites will return the source file from getFileName(), but code\n  // passed to eval() ending in \"//# sourceURL=...\" will return the source file\n  // from getScriptNameOrSourceURL() instead\n\n\n  var source = frame.getFileName() || frame.getScriptNameOrSourceURL();\n\n  if (source) {\n    var line = frame.getLineNumber();\n    var column = frame.getColumnNumber() - 1; // Fix position in Node where some (internal) code is prepended.\n    // See https://github.com/evanw/node-source-map-support/issues/36\n    // Header removed in node at ^10.16 || >=11.11.0\n    // v11 is not an LTS candidate, we can just test the one version with it.\n    // Test node versions for: 10.16-19, 10.20+, 12-19, 20-99, 100+, or 11.11\n\n    var noHeader = /^v(10\\.1[6-9]|10\\.[2-9][0-9]|10\\.[0-9]{3,}|1[2-9]\\d*|[2-9]\\d|\\d{3,}|11\\.11)/;\n    var headerLength = noHeader.test(process.version) ? 0 : 62;\n\n    if (line === 1 && column > headerLength && !isInBrowser() && !frame.isEval()) {\n      column -= headerLength;\n    }\n\n    var position = mapSourcePosition({\n      source: source,\n      line: line,\n      column: column\n    });\n    state.curPosition = position;\n    frame = cloneCallSite(frame);\n    var originalFunctionName = frame.getFunctionName;\n\n    frame.getFunctionName = function () {\n      if (state.nextPosition == null) {\n        return originalFunctionName();\n      }\n\n      return state.nextPosition.name || originalFunctionName();\n    };\n\n    frame.getFileName = function () {\n      return position.source;\n    };\n\n    frame.getLineNumber = function () {\n      return position.line;\n    };\n\n    frame.getColumnNumber = function () {\n      return position.column + 1;\n    };\n\n    frame.getScriptNameOrSourceURL = function () {\n      return position.source;\n    };\n\n    return frame;\n  } // Code called using eval() needs special handling\n\n\n  var origin = frame.isEval() && frame.getEvalOrigin();\n\n  if (origin) {\n    origin = mapEvalOrigin(origin);\n    frame = cloneCallSite(frame);\n\n    frame.getEvalOrigin = function () {\n      return origin;\n    };\n\n    return frame;\n  } // If we get here then we were unable to change the source position\n\n\n  return frame;\n} // This function is part of the V8 stack trace API, for more info see:\n// https://v8.dev/docs/stack-trace-api\n\n\nfunction prepareStackTrace(error, stack) {\n  if (emptyCacheBetweenOperations) {\n    fileContentsCache = {};\n    sourceMapCache = {};\n  }\n\n  var name = error.name || 'Error';\n  var message = error.message || '';\n  var errorString = name + \": \" + message;\n  var state = {\n    nextPosition: null,\n    curPosition: null\n  };\n  var processedStack = [];\n\n  for (var i = stack.length - 1; i >= 0; i--) {\n    processedStack.push('\\n    at ' + wrapCallSite(stack[i], state));\n    state.nextPosition = state.curPosition;\n  }\n\n  state.curPosition = state.nextPosition = null;\n  return errorString + processedStack.reverse().join('');\n} // Generate position and snippet of original source with pointer\n\n\nfunction getErrorSource(error) {\n  var match = /\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(error.stack);\n\n  if (match) {\n    var source = match[1];\n    var line = +match[2];\n    var column = +match[3]; // Support the inline sourceContents inside the source map\n\n    var contents = fileContentsCache[source]; // Support files on disk\n\n    if (!contents && fs && fs.existsSync(source)) {\n      try {\n        contents = fs.readFileSync(source, 'utf8');\n      } catch (er) {\n        contents = '';\n      }\n    } // Format the line from the original source code like node does\n\n\n    if (contents) {\n      var code = contents.split(/(?:\\r\\n|\\r|\\n)/)[line - 1];\n\n      if (code) {\n        return source + ':' + line + '\\n' + code + '\\n' + new Array(column).join(' ') + '^';\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction printErrorAndExit(error) {\n  var source = getErrorSource(error); // Ensure error is printed synchronously and not truncated\n\n  if (process.stderr._handle && process.stderr._handle.setBlocking) {\n    process.stderr._handle.setBlocking(true);\n  }\n\n  if (source) {\n    console.error();\n    console.error(source);\n  }\n\n  console.error(error.stack);\n  process.exit(1);\n}\n\nfunction shimEmitUncaughtException() {\n  var origEmit = process.emit;\n\n  process.emit = function (type) {\n    if (type === 'uncaughtException') {\n      var hasStack = arguments[1] && arguments[1].stack;\n      var hasListeners = this.listeners(type).length > 0;\n\n      if (hasStack && !hasListeners) {\n        return printErrorAndExit(arguments[1]);\n      }\n    }\n\n    return origEmit.apply(this, arguments);\n  };\n}\n\nvar originalRetrieveFileHandlers = retrieveFileHandlers.slice(0);\nvar originalRetrieveMapHandlers = retrieveMapHandlers.slice(0);\nexports.wrapCallSite = wrapCallSite;\nexports.getErrorSource = getErrorSource;\nexports.mapSourcePosition = mapSourcePosition;\nexports.retrieveSourceMap = retrieveSourceMap;\n\nexports.install = function (options) {\n  options = options || {};\n\n  if (options.environment) {\n    environment = options.environment;\n\n    if ([\"node\", \"browser\", \"auto\"].indexOf(environment) === -1) {\n      throw new Error(\"environment \" + environment + \" was unknown. Available options are {auto, browser, node}\");\n    }\n  } // Allow sources to be found by methods other than reading the files\n  // directly from disk.\n\n\n  if (options.retrieveFile) {\n    if (options.overrideRetrieveFile) {\n      retrieveFileHandlers.length = 0;\n    }\n\n    retrieveFileHandlers.unshift(options.retrieveFile);\n  } // Allow source maps to be found by methods other than reading the files\n  // directly from disk.\n\n\n  if (options.retrieveSourceMap) {\n    if (options.overrideRetrieveSourceMap) {\n      retrieveMapHandlers.length = 0;\n    }\n\n    retrieveMapHandlers.unshift(options.retrieveSourceMap);\n  } // Support runtime transpilers that include inline source maps\n\n\n  if (options.hookRequire && !isInBrowser()) {\n    // Use dynamicRequire to avoid including in browser bundles\n    var Module = dynamicRequire(module, 'module');\n    var $compile = Module.prototype._compile;\n\n    if (!$compile.__sourceMapSupport) {\n      Module.prototype._compile = function (content, filename) {\n        fileContentsCache[filename] = content;\n        sourceMapCache[filename] = undefined;\n        return $compile.call(this, content, filename);\n      };\n\n      Module.prototype._compile.__sourceMapSupport = true;\n    }\n  } // Configure options\n\n\n  if (!emptyCacheBetweenOperations) {\n    emptyCacheBetweenOperations = 'emptyCacheBetweenOperations' in options ? options.emptyCacheBetweenOperations : false;\n  } // Install the error reformatter\n\n\n  if (!errorFormatterInstalled) {\n    errorFormatterInstalled = true;\n    Error.prepareStackTrace = prepareStackTrace;\n  }\n\n  if (!uncaughtShimInstalled) {\n    var installHandler = 'handleUncaughtExceptions' in options ? options.handleUncaughtExceptions : true; // Do not override 'uncaughtException' with our own handler in Node.js\n    // Worker threads. Workers pass the error to the main thread as an event,\n    // rather than printing something to stderr and exiting.\n\n    try {\n      // We need to use `dynamicRequire` because `require` on it's own will be optimized by WebPack/Browserify.\n      var worker_threads = dynamicRequire(module, 'worker_threads');\n\n      if (worker_threads.isMainThread === false) {\n        installHandler = false;\n      }\n    } catch (e) {} // Provide the option to not install the uncaught exception handler. This is\n    // to support other uncaught exception handlers (in test frameworks, for\n    // example). If this handler is not installed and there are no other uncaught\n    // exception handlers, uncaught exceptions will be caught by node's built-in\n    // exception handler and the process will still be terminated. However, the\n    // generated JavaScript code will be shown above the stack trace instead of\n    // the original source code.\n\n\n    if (installHandler && hasGlobalProcessEventEmitter()) {\n      uncaughtShimInstalled = true;\n      shimEmitUncaughtException();\n    }\n  }\n};\n\nexports.resetRetrieveHandlers = function () {\n  retrieveFileHandlers.length = 0;\n  retrieveMapHandlers.length = 0;\n  retrieveFileHandlers = originalRetrieveFileHandlers.slice(0);\n  retrieveMapHandlers = originalRetrieveMapHandlers.slice(0);\n  retrieveSourceMap = handlerExec(retrieveMapHandlers);\n  retrieveFile = handlerExec(retrieveFileHandlers);\n};","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/node_modules/source-map-support/source-map-support.js"],"names":["SourceMapConsumer","require","path","fs","existsSync","readFileSync","err","bufferFrom","dynamicRequire","mod","request","errorFormatterInstalled","uncaughtShimInstalled","emptyCacheBetweenOperations","environment","fileContentsCache","sourceMapCache","reSourceMap","retrieveFileHandlers","retrieveMapHandlers","isInBrowser","window","XMLHttpRequest","module","process","type","hasGlobalProcessEventEmitter","on","handlerExec","list","arg","i","length","ret","retrieveFile","push","trim","test","replace","protocol","drive","contents","xhr","open","send","readyState","status","responseText","er","supportRelativeURL","file","url","dir","dirname","match","exec","startPath","slice","resolve","retrieveSourceMapURL","source","fileData","sourceMapHeader","getResponseHeader","e","re","lastMatch","retrieveSourceMap","sourceMappingURL","sourceMapData","rawData","indexOf","toString","map","mapSourcePosition","position","sourceMap","urlAndMap","sourcesContent","sources","forEach","originalPositionFor","originalPosition","mapEvalOrigin","origin","line","column","CallSiteToString","fileName","fileLocation","isNative","getScriptNameOrSourceURL","isEval","getEvalOrigin","lineNumber","getLineNumber","columnNumber","getColumnNumber","functionName","getFunctionName","addSuffix","isConstructor","isMethodCall","isToplevel","typeName","getTypeName","methodName","getMethodName","cloneCallSite","frame","object","Object","getOwnPropertyNames","getPrototypeOf","name","call","wrapCallSite","state","undefined","nextPosition","curPosition","getFileName","noHeader","headerLength","version","originalFunctionName","prepareStackTrace","error","stack","message","errorString","processedStack","reverse","join","getErrorSource","code","split","Array","printErrorAndExit","stderr","_handle","setBlocking","console","exit","shimEmitUncaughtException","origEmit","emit","hasStack","arguments","hasListeners","listeners","apply","originalRetrieveFileHandlers","originalRetrieveMapHandlers","exports","install","options","Error","overrideRetrieveFile","unshift","overrideRetrieveSourceMap","hookRequire","Module","$compile","prototype","_compile","__sourceMapSupport","content","filename","installHandler","handleUncaughtExceptions","worker_threads","isMainThread","resetRetrieveHandlers"],"mappings":"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","sourcesContent":["var SourceMapConsumer = require('source-map').SourceMapConsumer;\r\nvar path = require('path');\r\n\r\nvar fs;\r\ntry {\r\n  fs = require('fs');\r\n  if (!fs.existsSync || !fs.readFileSync) {\r\n    // fs doesn't have all methods we need\r\n    fs = null;\r\n  }\r\n} catch (err) {\r\n  /* nop */\r\n}\r\n\r\nvar bufferFrom = require('buffer-from');\r\n\r\n/**\r\n * Requires a module which is protected against bundler minification.\r\n *\r\n * @param {NodeModule} mod\r\n * @param {string} request\r\n */\r\nfunction dynamicRequire(mod, request) {\r\n  return mod.require(request);\r\n}\r\n\r\n// Only install once if called multiple times\r\nvar errorFormatterInstalled = false;\r\nvar uncaughtShimInstalled = false;\r\n\r\n// If true, the caches are reset before a stack trace formatting operation\r\nvar emptyCacheBetweenOperations = false;\r\n\r\n// Supports {browser, node, auto}\r\nvar environment = \"auto\";\r\n\r\n// Maps a file path to a string containing the file contents\r\nvar fileContentsCache = {};\r\n\r\n// Maps a file path to a source map for that file\r\nvar sourceMapCache = {};\r\n\r\n// Regex for detecting source maps\r\nvar reSourceMap = /^data:application\\/json[^,]+base64,/;\r\n\r\n// Priority list of retrieve handlers\r\nvar retrieveFileHandlers = [];\r\nvar retrieveMapHandlers = [];\r\n\r\nfunction isInBrowser() {\r\n  if (environment === \"browser\")\r\n    return true;\r\n  if (environment === \"node\")\r\n    return false;\r\n  return ((typeof window !== 'undefined') && (typeof XMLHttpRequest === 'function') && !(window.require && window.module && window.process && window.process.type === \"renderer\"));\r\n}\r\n\r\nfunction hasGlobalProcessEventEmitter() {\r\n  return ((typeof process === 'object') && (process !== null) && (typeof process.on === 'function'));\r\n}\r\n\r\nfunction handlerExec(list) {\r\n  return function(arg) {\r\n    for (var i = 0; i < list.length; i++) {\r\n      var ret = list[i](arg);\r\n      if (ret) {\r\n        return ret;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n}\r\n\r\nvar retrieveFile = handlerExec(retrieveFileHandlers);\r\n\r\nretrieveFileHandlers.push(function(path) {\r\n  // Trim the path to make sure there is no extra whitespace.\r\n  path = path.trim();\r\n  if (/^file:/.test(path)) {\r\n    // existsSync/readFileSync can't handle file protocol, but once stripped, it works\r\n    path = path.replace(/file:\\/\\/\\/(\\w:)?/, function(protocol, drive) {\r\n      return drive ?\r\n        '' : // file:///C:/dir/file -> C:/dir/file\r\n        '/'; // file:///root-dir/file -> /root-dir/file\r\n    });\r\n  }\r\n  if (path in fileContentsCache) {\r\n    return fileContentsCache[path];\r\n  }\r\n\r\n  var contents = '';\r\n  try {\r\n    if (!fs) {\r\n      // Use SJAX if we are in the browser\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', path, /** async */ false);\r\n      xhr.send(null);\r\n      if (xhr.readyState === 4 && xhr.status === 200) {\r\n        contents = xhr.responseText;\r\n      }\r\n    } else if (fs.existsSync(path)) {\r\n      // Otherwise, use the filesystem\r\n      contents = fs.readFileSync(path, 'utf8');\r\n    }\r\n  } catch (er) {\r\n    /* ignore any errors */\r\n  }\r\n\r\n  return fileContentsCache[path] = contents;\r\n});\r\n\r\n// Support URLs relative to a directory, but be careful about a protocol prefix\r\n// in case we are in the browser (i.e. directories may start with \"http://\" or \"file:///\")\r\nfunction supportRelativeURL(file, url) {\r\n  if (!file) return url;\r\n  var dir = path.dirname(file);\r\n  var match = /^\\w+:\\/\\/[^\\/]*/.exec(dir);\r\n  var protocol = match ? match[0] : '';\r\n  var startPath = dir.slice(protocol.length);\r\n  if (protocol && /^\\/\\w\\:/.test(startPath)) {\r\n    // handle file:///C:/ paths\r\n    protocol += '/';\r\n    return protocol + path.resolve(dir.slice(protocol.length), url).replace(/\\\\/g, '/');\r\n  }\r\n  return protocol + path.resolve(dir.slice(protocol.length), url);\r\n}\r\n\r\nfunction retrieveSourceMapURL(source) {\r\n  var fileData;\r\n\r\n  if (isInBrowser()) {\r\n     try {\r\n       var xhr = new XMLHttpRequest();\r\n       xhr.open('GET', source, false);\r\n       xhr.send(null);\r\n       fileData = xhr.readyState === 4 ? xhr.responseText : null;\r\n\r\n       // Support providing a sourceMappingURL via the SourceMap header\r\n       var sourceMapHeader = xhr.getResponseHeader(\"SourceMap\") ||\r\n                             xhr.getResponseHeader(\"X-SourceMap\");\r\n       if (sourceMapHeader) {\r\n         return sourceMapHeader;\r\n       }\r\n     } catch (e) {\r\n     }\r\n  }\r\n\r\n  // Get the URL of the source map\r\n  fileData = retrieveFile(source);\r\n  var re = /(?:\\/\\/[@#][\\s]*sourceMappingURL=([^\\s'\"]+)[\\s]*$)|(?:\\/\\*[@#][\\s]*sourceMappingURL=([^\\s*'\"]+)[\\s]*(?:\\*\\/)[\\s]*$)/mg;\r\n  // Keep executing the search to find the *last* sourceMappingURL to avoid\r\n  // picking up sourceMappingURLs from comments, strings, etc.\r\n  var lastMatch, match;\r\n  while (match = re.exec(fileData)) lastMatch = match;\r\n  if (!lastMatch) return null;\r\n  return lastMatch[1];\r\n};\r\n\r\n// Can be overridden by the retrieveSourceMap option to install. Takes a\r\n// generated source filename; returns a {map, optional url} object, or null if\r\n// there is no source map.  The map field may be either a string or the parsed\r\n// JSON object (ie, it must be a valid argument to the SourceMapConsumer\r\n// constructor).\r\nvar retrieveSourceMap = handlerExec(retrieveMapHandlers);\r\nretrieveMapHandlers.push(function(source) {\r\n  var sourceMappingURL = retrieveSourceMapURL(source);\r\n  if (!sourceMappingURL) return null;\r\n\r\n  // Read the contents of the source map\r\n  var sourceMapData;\r\n  if (reSourceMap.test(sourceMappingURL)) {\r\n    // Support source map URL as a data url\r\n    var rawData = sourceMappingURL.slice(sourceMappingURL.indexOf(',') + 1);\r\n    sourceMapData = bufferFrom(rawData, \"base64\").toString();\r\n    sourceMappingURL = source;\r\n  } else {\r\n    // Support source map URLs relative to the source URL\r\n    sourceMappingURL = supportRelativeURL(source, sourceMappingURL);\r\n    sourceMapData = retrieveFile(sourceMappingURL);\r\n  }\r\n\r\n  if (!sourceMapData) {\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    url: sourceMappingURL,\r\n    map: sourceMapData\r\n  };\r\n});\r\n\r\nfunction mapSourcePosition(position) {\r\n  var sourceMap = sourceMapCache[position.source];\r\n  if (!sourceMap) {\r\n    // Call the (overrideable) retrieveSourceMap function to get the source map.\r\n    var urlAndMap = retrieveSourceMap(position.source);\r\n    if (urlAndMap) {\r\n      sourceMap = sourceMapCache[position.source] = {\r\n        url: urlAndMap.url,\r\n        map: new SourceMapConsumer(urlAndMap.map)\r\n      };\r\n\r\n      // Load all sources stored inline with the source map into the file cache\r\n      // to pretend like they are already loaded. They may not exist on disk.\r\n      if (sourceMap.map.sourcesContent) {\r\n        sourceMap.map.sources.forEach(function(source, i) {\r\n          var contents = sourceMap.map.sourcesContent[i];\r\n          if (contents) {\r\n            var url = supportRelativeURL(sourceMap.url, source);\r\n            fileContentsCache[url] = contents;\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      sourceMap = sourceMapCache[position.source] = {\r\n        url: null,\r\n        map: null\r\n      };\r\n    }\r\n  }\r\n\r\n  // Resolve the source URL relative to the URL of the source map\r\n  if (sourceMap && sourceMap.map && typeof sourceMap.map.originalPositionFor === 'function') {\r\n    var originalPosition = sourceMap.map.originalPositionFor(position);\r\n\r\n    // Only return the original position if a matching line was found. If no\r\n    // matching line is found then we return position instead, which will cause\r\n    // the stack trace to print the path and line for the compiled file. It is\r\n    // better to give a precise location in the compiled file than a vague\r\n    // location in the original file.\r\n    if (originalPosition.source !== null) {\r\n      originalPosition.source = supportRelativeURL(\r\n        sourceMap.url, originalPosition.source);\r\n      return originalPosition;\r\n    }\r\n  }\r\n\r\n  return position;\r\n}\r\n\r\n// Parses code generated by FormatEvalOrigin(), a function inside V8:\r\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js\r\nfunction mapEvalOrigin(origin) {\r\n  // Most eval() calls are in this format\r\n  var match = /^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(origin);\r\n  if (match) {\r\n    var position = mapSourcePosition({\r\n      source: match[2],\r\n      line: +match[3],\r\n      column: match[4] - 1\r\n    });\r\n    return 'eval at ' + match[1] + ' (' + position.source + ':' +\r\n      position.line + ':' + (position.column + 1) + ')';\r\n  }\r\n\r\n  // Parse nested eval() calls using recursion\r\n  match = /^eval at ([^(]+) \\((.+)\\)$/.exec(origin);\r\n  if (match) {\r\n    return 'eval at ' + match[1] + ' (' + mapEvalOrigin(match[2]) + ')';\r\n  }\r\n\r\n  // Make sure we still return useful information if we didn't find anything\r\n  return origin;\r\n}\r\n\r\n// This is copied almost verbatim from the V8 source code at\r\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js. The\r\n// implementation of wrapCallSite() used to just forward to the actual source\r\n// code of CallSite.prototype.toString but unfortunately a new release of V8\r\n// did something to the prototype chain and broke the shim. The only fix I\r\n// could find was copy/paste.\r\nfunction CallSiteToString() {\r\n  var fileName;\r\n  var fileLocation = \"\";\r\n  if (this.isNative()) {\r\n    fileLocation = \"native\";\r\n  } else {\r\n    fileName = this.getScriptNameOrSourceURL();\r\n    if (!fileName && this.isEval()) {\r\n      fileLocation = this.getEvalOrigin();\r\n      fileLocation += \", \";  // Expecting source position to follow.\r\n    }\r\n\r\n    if (fileName) {\r\n      fileLocation += fileName;\r\n    } else {\r\n      // Source code does not originate from a file and is not native, but we\r\n      // can still get the source position inside the source string, e.g. in\r\n      // an eval string.\r\n      fileLocation += \"<anonymous>\";\r\n    }\r\n    var lineNumber = this.getLineNumber();\r\n    if (lineNumber != null) {\r\n      fileLocation += \":\" + lineNumber;\r\n      var columnNumber = this.getColumnNumber();\r\n      if (columnNumber) {\r\n        fileLocation += \":\" + columnNumber;\r\n      }\r\n    }\r\n  }\r\n\r\n  var line = \"\";\r\n  var functionName = this.getFunctionName();\r\n  var addSuffix = true;\r\n  var isConstructor = this.isConstructor();\r\n  var isMethodCall = !(this.isToplevel() || isConstructor);\r\n  if (isMethodCall) {\r\n    var typeName = this.getTypeName();\r\n    // Fixes shim to be backward compatable with Node v0 to v4\r\n    if (typeName === \"[object Object]\") {\r\n      typeName = \"null\";\r\n    }\r\n    var methodName = this.getMethodName();\r\n    if (functionName) {\r\n      if (typeName && functionName.indexOf(typeName) != 0) {\r\n        line += typeName + \".\";\r\n      }\r\n      line += functionName;\r\n      if (methodName && functionName.indexOf(\".\" + methodName) != functionName.length - methodName.length - 1) {\r\n        line += \" [as \" + methodName + \"]\";\r\n      }\r\n    } else {\r\n      line += typeName + \".\" + (methodName || \"<anonymous>\");\r\n    }\r\n  } else if (isConstructor) {\r\n    line += \"new \" + (functionName || \"<anonymous>\");\r\n  } else if (functionName) {\r\n    line += functionName;\r\n  } else {\r\n    line += fileLocation;\r\n    addSuffix = false;\r\n  }\r\n  if (addSuffix) {\r\n    line += \" (\" + fileLocation + \")\";\r\n  }\r\n  return line;\r\n}\r\n\r\nfunction cloneCallSite(frame) {\r\n  var object = {};\r\n  Object.getOwnPropertyNames(Object.getPrototypeOf(frame)).forEach(function(name) {\r\n    object[name] = /^(?:is|get)/.test(name) ? function() { return frame[name].call(frame); } : frame[name];\r\n  });\r\n  object.toString = CallSiteToString;\r\n  return object;\r\n}\r\n\r\nfunction wrapCallSite(frame, state) {\r\n  // provides interface backward compatibility\r\n  if (state === undefined) {\r\n    state = { nextPosition: null, curPosition: null }\r\n  }\r\n  if(frame.isNative()) {\r\n    state.curPosition = null;\r\n    return frame;\r\n  }\r\n\r\n  // Most call sites will return the source file from getFileName(), but code\r\n  // passed to eval() ending in \"//# sourceURL=...\" will return the source file\r\n  // from getScriptNameOrSourceURL() instead\r\n  var source = frame.getFileName() || frame.getScriptNameOrSourceURL();\r\n  if (source) {\r\n    var line = frame.getLineNumber();\r\n    var column = frame.getColumnNumber() - 1;\r\n\r\n    // Fix position in Node where some (internal) code is prepended.\r\n    // See https://github.com/evanw/node-source-map-support/issues/36\r\n    // Header removed in node at ^10.16 || >=11.11.0\r\n    // v11 is not an LTS candidate, we can just test the one version with it.\r\n    // Test node versions for: 10.16-19, 10.20+, 12-19, 20-99, 100+, or 11.11\r\n    var noHeader = /^v(10\\.1[6-9]|10\\.[2-9][0-9]|10\\.[0-9]{3,}|1[2-9]\\d*|[2-9]\\d|\\d{3,}|11\\.11)/;\r\n    var headerLength = noHeader.test(process.version) ? 0 : 62;\r\n    if (line === 1 && column > headerLength && !isInBrowser() && !frame.isEval()) {\r\n      column -= headerLength;\r\n    }\r\n\r\n    var position = mapSourcePosition({\r\n      source: source,\r\n      line: line,\r\n      column: column\r\n    });\r\n    state.curPosition = position;\r\n    frame = cloneCallSite(frame);\r\n    var originalFunctionName = frame.getFunctionName;\r\n    frame.getFunctionName = function() {\r\n      if (state.nextPosition == null) {\r\n        return originalFunctionName();\r\n      }\r\n      return state.nextPosition.name || originalFunctionName();\r\n    };\r\n    frame.getFileName = function() { return position.source; };\r\n    frame.getLineNumber = function() { return position.line; };\r\n    frame.getColumnNumber = function() { return position.column + 1; };\r\n    frame.getScriptNameOrSourceURL = function() { return position.source; };\r\n    return frame;\r\n  }\r\n\r\n  // Code called using eval() needs special handling\r\n  var origin = frame.isEval() && frame.getEvalOrigin();\r\n  if (origin) {\r\n    origin = mapEvalOrigin(origin);\r\n    frame = cloneCallSite(frame);\r\n    frame.getEvalOrigin = function() { return origin; };\r\n    return frame;\r\n  }\r\n\r\n  // If we get here then we were unable to change the source position\r\n  return frame;\r\n}\r\n\r\n// This function is part of the V8 stack trace API, for more info see:\r\n// https://v8.dev/docs/stack-trace-api\r\nfunction prepareStackTrace(error, stack) {\r\n  if (emptyCacheBetweenOperations) {\r\n    fileContentsCache = {};\r\n    sourceMapCache = {};\r\n  }\r\n\r\n  var name = error.name || 'Error';\r\n  var message = error.message || '';\r\n  var errorString = name + \": \" + message;\r\n\r\n  var state = { nextPosition: null, curPosition: null };\r\n  var processedStack = [];\r\n  for (var i = stack.length - 1; i >= 0; i--) {\r\n    processedStack.push('\\n    at ' + wrapCallSite(stack[i], state));\r\n    state.nextPosition = state.curPosition;\r\n  }\r\n  state.curPosition = state.nextPosition = null;\r\n  return errorString + processedStack.reverse().join('');\r\n}\r\n\r\n// Generate position and snippet of original source with pointer\r\nfunction getErrorSource(error) {\r\n  var match = /\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(error.stack);\r\n  if (match) {\r\n    var source = match[1];\r\n    var line = +match[2];\r\n    var column = +match[3];\r\n\r\n    // Support the inline sourceContents inside the source map\r\n    var contents = fileContentsCache[source];\r\n\r\n    // Support files on disk\r\n    if (!contents && fs && fs.existsSync(source)) {\r\n      try {\r\n        contents = fs.readFileSync(source, 'utf8');\r\n      } catch (er) {\r\n        contents = '';\r\n      }\r\n    }\r\n\r\n    // Format the line from the original source code like node does\r\n    if (contents) {\r\n      var code = contents.split(/(?:\\r\\n|\\r|\\n)/)[line - 1];\r\n      if (code) {\r\n        return source + ':' + line + '\\n' + code + '\\n' +\r\n          new Array(column).join(' ') + '^';\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction printErrorAndExit (error) {\r\n  var source = getErrorSource(error);\r\n\r\n  // Ensure error is printed synchronously and not truncated\r\n  if (process.stderr._handle && process.stderr._handle.setBlocking) {\r\n    process.stderr._handle.setBlocking(true);\r\n  }\r\n\r\n  if (source) {\r\n    console.error();\r\n    console.error(source);\r\n  }\r\n\r\n  console.error(error.stack);\r\n  process.exit(1);\r\n}\r\n\r\nfunction shimEmitUncaughtException () {\r\n  var origEmit = process.emit;\r\n\r\n  process.emit = function (type) {\r\n    if (type === 'uncaughtException') {\r\n      var hasStack = (arguments[1] && arguments[1].stack);\r\n      var hasListeners = (this.listeners(type).length > 0);\r\n\r\n      if (hasStack && !hasListeners) {\r\n        return printErrorAndExit(arguments[1]);\r\n      }\r\n    }\r\n\r\n    return origEmit.apply(this, arguments);\r\n  };\r\n}\r\n\r\nvar originalRetrieveFileHandlers = retrieveFileHandlers.slice(0);\r\nvar originalRetrieveMapHandlers = retrieveMapHandlers.slice(0);\r\n\r\nexports.wrapCallSite = wrapCallSite;\r\nexports.getErrorSource = getErrorSource;\r\nexports.mapSourcePosition = mapSourcePosition;\r\nexports.retrieveSourceMap = retrieveSourceMap;\r\n\r\nexports.install = function(options) {\r\n  options = options || {};\r\n\r\n  if (options.environment) {\r\n    environment = options.environment;\r\n    if ([\"node\", \"browser\", \"auto\"].indexOf(environment) === -1) {\r\n      throw new Error(\"environment \" + environment + \" was unknown. Available options are {auto, browser, node}\")\r\n    }\r\n  }\r\n\r\n  // Allow sources to be found by methods other than reading the files\r\n  // directly from disk.\r\n  if (options.retrieveFile) {\r\n    if (options.overrideRetrieveFile) {\r\n      retrieveFileHandlers.length = 0;\r\n    }\r\n\r\n    retrieveFileHandlers.unshift(options.retrieveFile);\r\n  }\r\n\r\n  // Allow source maps to be found by methods other than reading the files\r\n  // directly from disk.\r\n  if (options.retrieveSourceMap) {\r\n    if (options.overrideRetrieveSourceMap) {\r\n      retrieveMapHandlers.length = 0;\r\n    }\r\n\r\n    retrieveMapHandlers.unshift(options.retrieveSourceMap);\r\n  }\r\n\r\n  // Support runtime transpilers that include inline source maps\r\n  if (options.hookRequire && !isInBrowser()) {\r\n    // Use dynamicRequire to avoid including in browser bundles\r\n    var Module = dynamicRequire(module, 'module');\r\n    var $compile = Module.prototype._compile;\r\n\r\n    if (!$compile.__sourceMapSupport) {\r\n      Module.prototype._compile = function(content, filename) {\r\n        fileContentsCache[filename] = content;\r\n        sourceMapCache[filename] = undefined;\r\n        return $compile.call(this, content, filename);\r\n      };\r\n\r\n      Module.prototype._compile.__sourceMapSupport = true;\r\n    }\r\n  }\r\n\r\n  // Configure options\r\n  if (!emptyCacheBetweenOperations) {\r\n    emptyCacheBetweenOperations = 'emptyCacheBetweenOperations' in options ?\r\n      options.emptyCacheBetweenOperations : false;\r\n  }\r\n\r\n  // Install the error reformatter\r\n  if (!errorFormatterInstalled) {\r\n    errorFormatterInstalled = true;\r\n    Error.prepareStackTrace = prepareStackTrace;\r\n  }\r\n\r\n  if (!uncaughtShimInstalled) {\r\n    var installHandler = 'handleUncaughtExceptions' in options ?\r\n      options.handleUncaughtExceptions : true;\r\n\r\n    // Do not override 'uncaughtException' with our own handler in Node.js\r\n    // Worker threads. Workers pass the error to the main thread as an event,\r\n    // rather than printing something to stderr and exiting.\r\n    try {\r\n      // We need to use `dynamicRequire` because `require` on it's own will be optimized by WebPack/Browserify.\r\n      var worker_threads = dynamicRequire(module, 'worker_threads');\r\n      if (worker_threads.isMainThread === false) {\r\n        installHandler = false;\r\n      }\r\n    } catch(e) {}\r\n\r\n    // Provide the option to not install the uncaught exception handler. This is\r\n    // to support other uncaught exception handlers (in test frameworks, for\r\n    // example). If this handler is not installed and there are no other uncaught\r\n    // exception handlers, uncaught exceptions will be caught by node's built-in\r\n    // exception handler and the process will still be terminated. However, the\r\n    // generated JavaScript code will be shown above the stack trace instead of\r\n    // the original source code.\r\n    if (installHandler && hasGlobalProcessEventEmitter()) {\r\n      uncaughtShimInstalled = true;\r\n      shimEmitUncaughtException();\r\n    }\r\n  }\r\n};\r\n\r\nexports.resetRetrieveHandlers = function() {\r\n  retrieveFileHandlers.length = 0;\r\n  retrieveMapHandlers.length = 0;\r\n\r\n  retrieveFileHandlers = originalRetrieveFileHandlers.slice(0);\r\n  retrieveMapHandlers = originalRetrieveMapHandlers.slice(0);\r\n\r\n  retrieveSourceMap = handlerExec(retrieveMapHandlers);\r\n  retrieveFile = handlerExec(retrieveFileHandlers);\r\n}\r\n"]},"metadata":{},"sourceType":"script"}