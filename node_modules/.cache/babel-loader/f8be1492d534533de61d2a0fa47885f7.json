{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sam\\\\Documents\\\\GitHub\\\\Capstone-Spring-2021\\\\src\\\\views\\\\Dashboard.jsx\";\n\n/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v1.3.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\nimport React, { Component, useState } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport { useHistory } from \"react-router-dom\";\nimport crown from \"assets/img/crown.png\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport ChartistTooltip from \"chartist-plugin-tooltips-updated\";\nimport { Card, CardNoFooter } from \"components/Card/Card.jsx\";\nimport Chartist, { plugins } from \"chartist\";\nimport { StatsCard, MiniChartCard } from \"components/StatsCard/StatsCard.jsx\";\nimport { Tasks } from \"components/Tasks/Tasks.jsx\";\nimport { dataPie, legendPie // dataSales,\n, optionsSales, responsiveSales, legendSales, dataBar, optionsBar, responsiveBar, legendBar } from \"variables/Variables.jsx\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ShowPopUp, SuccessPopUp, LoadingPopUp } from \"components/Modal/Modal\";\nimport { FormControll } from \"components/Formik/FormikControl\";\nimport { MaterialButton } from \"components/CustomButton/MaterialButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDashboard, getTop10, getShareAndExchangeCompare } from \"../redux/index\";\nimport { getDashboardUpdate } from \"redux/Selector/Selectors\";\nimport { Box } from \"@material-ui/core\";\n\nrequire(\"chartist-plugin-legend\");\n\nfunction Dashboard() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [dataSales, setDataSales] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [top10, setTop10] = useState([]);\n  const [top10Account, setTop10Account] = useState([]);\n  const [compare, setCompare] = useState({});\n  console.log(\"dashboard= \", history);\n  React.useEffect(() => {\n    try {\n      const prepare = () => {\n        dispatch(getDashboard()).then(response => {\n          const data = response.payload.data;\n          console.log(\"dashboard ngày 29/01 \", data);\n          const labels = [...data.labels, \"\"];\n          const tmp = {\n            labels: labels,\n            series: data.series\n          };\n          setDataSales(tmp);\n        });\n        dispatch(getTop10(2)).then(res => {\n          const tmp = res.payload.data;\n          setTop10(tmp); // console.log(\"danh sách 10 rau: \", res);\n        });\n        dispatch(getTop10(1)).then(res => {\n          const tmp = res.payload.data;\n          setTop10Account(tmp); // console.log(\"danh sách 10 người: \", res);\n        });\n        dispatch(getShareAndExchangeCompare()).then(res => {\n          setCompare(res.payload.data); // console.log(\"share và exchage: \", res);\n        });\n        setLoading(false);\n      };\n\n      prepare();\n    } catch (error) {\n      console.log(\"Failed to fetch product list: \", error);\n    }\n  }, []);\n  const updateButtonForm = useSelector(state => getDashboardUpdate(state));\n  const options = {\n    plugins: [ChartistTooltip()]\n  };\n  console.log(updateButtonForm);\n  const initialValues = {\n    updateTime: \"\"\n  };\n\n  const onSubmit = values => {};\n\n  const dropdownOptions = [{\n    key: \"Tháng này\",\n    value: \"thismonth\"\n  }, {\n    key: \"Hôm nay\",\n    value: \"today\"\n  }, {\n    key: \"7 ngày trước\",\n    value: \"last7days\"\n  }];\n\n  function createLegend(json) {\n    var legend = [];\n\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push( /*#__PURE__*/React.createElement(\"i\", {\n        className: type,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }\n      }));\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n\n    return legend;\n  }\n\n  const size = 20;\n  const number = {\n    color: \"white\",\n    background: \"#63d8f1\",\n    paddingLeft: 5,\n    paddingRight: 5,\n    marginLeft: 5\n  };\n  const numberRed = {\n    color: \"white\",\n    background: \"#fc727a\",\n    paddingLeft: 5,\n    paddingRight: 5,\n    marginLeft: 5\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LoadingPopUp, {\n    visible: loading,\n    length: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, formik => {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, updateButtonForm.map(item => {\n      item.row.cols.map(col => {\n        const {\n          name,\n          type,\n          placeholder,\n          labeltext\n        } = col.elementConfig;\n        return /*#__PURE__*/React.createElement(FormControll, {\n          control: \"select\",\n          label: labeltext,\n          name: name,\n          options: dropdownOptions,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }\n        });\n      });\n    }));\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    id: \"chartHours\",\n    title: \"Ho\\u1EA1t \\u0111\\u1ED9ng c\\u1EE7a ng\\u01B0\\u1EDDi  d\\xF9ng\",\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ct-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ChartistGraph, {\n      data: dataSales,\n      type: \"Line\",\n      options: optionsSales,\n      responsiveOptions: responsiveSales,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 19\n      }\n    })),\n    legend: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 23\n      }\n    }, createLegend(legendSales)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    id: \"chartActivity\",\n    title: \"Bi\\u1EC3u \\u0111\\u1ED3 so s\\xE1nh s\\u1ED1 l\\u01B0\\u1EE3ng b\\xE0i \\u0111\\u0103ng chia s\\u1EBB v\\xE0 trao \\u0111\\u1ED5i\" // category=\"All products including Taxes\"\n    ,\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ct-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ChartistGraph, {\n      data: compare,\n      type: \"Bar\",\n      options: optionsBar,\n      responsiveOptions: responsiveBar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    })),\n    legend: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 23\n      }\n    }, createLegend(legendBar)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    id: \"top10A\",\n    title: \"Top 10 rau \\u0111\\u01B0\\u1EE3c chia s\\u1EBB nhi\\u1EC1u nh\\u1EA5t\" // category=\"All products including Taxes\"\n    ,\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, top10.map((item, index) => {\n      if (index == 0) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: crown,\n          height: size,\n          width: size,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          style: number,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 27\n          }\n        }, index + 1), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginLeft: 5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 27\n          }\n        }, item.id), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginLeft: 5,\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 27\n          }\n        }, item.text));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Box, {\n          height: size,\n          width: size,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          style: number,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 27\n          }\n        }, index + 1), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginLeft: 5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 27\n          }\n        }, item.id), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginLeft: 5,\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 27\n          }\n        }, item.text));\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    id: \"top10B\",\n    title: \"Top 10 t\\xE0i kho\\u1EA3n \\u0111\\u0103ng b\\xE0i nhi\\u1EC1u nh\\u1EA5t\" // category=\"All products including Taxes\"\n    ,\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }, top10Account.map((item, index) => {\n      if (index == 0) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: crown,\n          height: size,\n          width: size,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          style: numberRed,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 27\n          }\n        }, index + 1), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginLeft: 5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 27\n          }\n        }, item.id), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginLeft: 5,\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 27\n          }\n        }, item.text));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Box, {\n          height: size,\n          width: size,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          style: numberRed,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 27\n          }\n        }, index + 1), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginLeft: 5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 27\n          }\n        }, item.id), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginLeft: 5,\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 27\n          }\n        }, item.text));\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/views/Dashboard.jsx"],"names":["React","Component","useState","ChartistGraph","useHistory","crown","Grid","Row","Col","ChartistTooltip","Card","CardNoFooter","Chartist","plugins","StatsCard","MiniChartCard","Tasks","dataPie","legendPie","optionsSales","responsiveSales","legendSales","dataBar","optionsBar","responsiveBar","legendBar","Formik","Form","Yup","ShowPopUp","SuccessPopUp","LoadingPopUp","FormControll","MaterialButton","useDispatch","useSelector","getDashboard","getTop10","getShareAndExchangeCompare","getDashboardUpdate","Box","require","Dashboard","history","dispatch","dataSales","setDataSales","loading","setLoading","top10","setTop10","top10Account","setTop10Account","compare","setCompare","console","log","useEffect","prepare","then","response","data","payload","labels","tmp","series","res","error","updateButtonForm","state","options","initialValues","updateTime","onSubmit","values","dropdownOptions","key","value","createLegend","json","legend","i","length","type","push","size","number","color","background","paddingLeft","paddingRight","marginLeft","numberRed","formik","map","item","row","cols","col","name","placeholder","labeltext","elementConfig","index","display","flexDirection","id","fontWeight","text"],"mappings":"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","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v1.3.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, { Component, useState } from \"react\";\r\nimport ChartistGraph from \"react-chartist\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport crown from \"assets/img/crown.png\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport ChartistTooltip from \"chartist-plugin-tooltips-updated\";\r\nimport { Card, CardNoFooter } from \"components/Card/Card.jsx\";\r\nimport Chartist, { plugins } from \"chartist\";\r\nimport { StatsCard, MiniChartCard } from \"components/StatsCard/StatsCard.jsx\";\r\nimport { Tasks } from \"components/Tasks/Tasks.jsx\";\r\nimport {\r\n  dataPie,\r\n  legendPie,\r\n  // dataSales,\r\n  optionsSales,\r\n  responsiveSales,\r\n  legendSales,\r\n  dataBar,\r\n  optionsBar,\r\n  responsiveBar,\r\n  legendBar,\r\n} from \"variables/Variables.jsx\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ShowPopUp, SuccessPopUp, LoadingPopUp } from \"components/Modal/Modal\";\r\nimport { FormControll } from \"components/Formik/FormikControl\";\r\nimport { MaterialButton } from \"components/CustomButton/MaterialButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getDashboard,\r\n  getTop10,\r\n  getShareAndExchangeCompare,\r\n} from \"../redux/index\";\r\nimport { getDashboardUpdate } from \"redux/Selector/Selectors\";\r\nimport { Box } from \"@material-ui/core\";\r\nrequire(\"chartist-plugin-legend\");\r\n\r\nfunction Dashboard() {\r\n  const history=useHistory()\r\n  const dispatch = useDispatch();\r\n  const [dataSales, setDataSales] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [top10, setTop10] = useState([]);\r\n  const [top10Account, setTop10Account] = useState([]);\r\n  const [compare, setCompare] = useState({});\r\n  console.log(\"dashboard= \",history)\r\n  React.useEffect(() => {\r\n    try {\r\n      const prepare = () => {\r\n        dispatch(getDashboard()).then((response) => {\r\n          const data = response.payload.data;\r\n          console.log(\"dashboard ngày 29/01 \", data);\r\n          const labels = [...data.labels, \"\"];\r\n          const tmp = {\r\n            labels: labels,\r\n            series: data.series,\r\n          };\r\n          setDataSales(tmp);\r\n        });\r\n        dispatch(getTop10(2)).then((res) => {\r\n          const tmp = res.payload.data;\r\n          setTop10(tmp);\r\n          // console.log(\"danh sách 10 rau: \", res);\r\n        });\r\n        dispatch(getTop10(1)).then((res) => {\r\n          const tmp = res.payload.data;\r\n          setTop10Account(tmp);\r\n          // console.log(\"danh sách 10 người: \", res);\r\n        });\r\n        dispatch(getShareAndExchangeCompare()).then((res) => {\r\n          setCompare(res.payload.data);\r\n          // console.log(\"share và exchage: \", res);\r\n        });\r\n        setLoading(false);\r\n      };\r\n      prepare();\r\n    } catch (error) {\r\n      console.log(\"Failed to fetch product list: \", error);\r\n    }\r\n  }, []);\r\n  const updateButtonForm = useSelector((state) => getDashboardUpdate(state));\r\n  const options = {\r\n    plugins: [ChartistTooltip()],\r\n  };\r\n  console.log(updateButtonForm);\r\n  const initialValues = {\r\n    updateTime: \"\",\r\n  };\r\n  const onSubmit = (values) => {};\r\n  const dropdownOptions = [\r\n    { key: \"Tháng này\", value: \"thismonth\" },\r\n    { key: \"Hôm nay\", value: \"today\" },\r\n    { key: \"7 ngày trước\", value: \"last7days\" },\r\n  ];\r\n  function createLegend(json) {\r\n    var legend = [];\r\n    for (var i = 0; i < json[\"names\"].length; i++) {\r\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\r\n      legend.push(<i className={type} key={i} />);\r\n      legend.push(\" \");\r\n      legend.push(json[\"names\"][i]);\r\n    }\r\n    return legend;\r\n  }\r\n  const size = 20;\r\n  const number = {\r\n    color: \"white\",\r\n    background: \"#63d8f1\",\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    marginLeft: 5,\r\n  };\r\n  const numberRed = {\r\n    color: \"white\",\r\n    background: \"#fc727a\",\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    marginLeft: 5,\r\n  };\r\n  return (\r\n    <div className=\"content\">\r\n      <LoadingPopUp visible={loading} length=\"200px\" />\r\n      <Grid fluid>\r\n        <Row>\r\n          <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n            {(formik) => {\r\n              return (\r\n                <Form>\r\n                  {updateButtonForm.map((item) => {\r\n                    item.row.cols.map((col) => {\r\n                      const {\r\n                        name,\r\n                        type,\r\n                        placeholder,\r\n                        labeltext,\r\n                      } = col.elementConfig;\r\n                      return (\r\n                        <FormControll\r\n                          control={\"select\"}\r\n                          label={labeltext}\r\n                          name={name}\r\n                          options={dropdownOptions}\r\n                        />\r\n                      );\r\n                    });\r\n                  })}\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            <Card\r\n              id=\"chartHours\"\r\n              title=\"Hoạt động của người  dùng\"\r\n              content={\r\n                <div className=\"ct-chart\">\r\n                  <ChartistGraph\r\n                    data={dataSales}\r\n                    type=\"Line\"\r\n                    options={optionsSales}\r\n                    responsiveOptions={responsiveSales}\r\n                  />\r\n                </div>\r\n              }\r\n              legend={<div className=\"legend\">{createLegend(legendSales)}</div>}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            <Card\r\n              id=\"chartActivity\"\r\n              title=\"Biểu đồ so sánh số lượng bài đăng chia sẻ và trao đổi\"\r\n              // category=\"All products including Taxes\"\r\n              content={\r\n                <div className=\"ct-chart\">\r\n                  <ChartistGraph\r\n                    data={compare}\r\n                    type=\"Bar\"\r\n                    options={optionsBar}\r\n                    responsiveOptions={responsiveBar}\r\n                  />\r\n                </div>\r\n              }\r\n              legend={<div className=\"legend\">{createLegend(legendBar)}</div>}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <Card\r\n              id=\"top10A\"\r\n              title=\"Top 10 rau được chia sẻ nhiều nhất\"\r\n              // category=\"All products including Taxes\"\r\n              content={\r\n                <div>\r\n                  {top10.map((item, index) => {\r\n                    if (index == 0) {\r\n                      return (\r\n                        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                          <img src={crown} height={size} width={size} />\r\n                          <p style={number}>{index+1}</p>\r\n                          <p style={{ marginLeft: 5 }}>{item.id}</p>\r\n                          <p style={{ marginLeft: 5, fontWeight: \"bold\" }}>\r\n                            {item.text}\r\n                          </p>\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                          <Box height={size} width={size}></Box>\r\n                          <p style={number}>{index+1}</p>\r\n                          <p style={{ marginLeft: 5 }}>{item.id}</p>\r\n                          <p style={{ marginLeft: 5, fontWeight: \"bold\" }}>\r\n                            {item.text}\r\n                          </p>\r\n                        </div>\r\n                      );\r\n                    }\r\n                  })}\r\n                </div>\r\n              }\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <Card\r\n              id=\"top10B\"\r\n              title=\"Top 10 tài khoản đăng bài nhiều nhất\"\r\n              // category=\"All products including Taxes\"\r\n              content={\r\n                <div>\r\n                  {top10Account.map((item, index) => {\r\n                    if (index == 0) {\r\n                      return (\r\n                        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                          <img src={crown} height={size} width={size} />\r\n                          <p style={numberRed}>{index+1}</p>\r\n                          <p style={{ marginLeft: 5 }}>{item.id}</p>\r\n                          <p style={{ marginLeft: 5, fontWeight: \"bold\" }}>\r\n                            {item.text}\r\n                          </p>\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                          <Box height={size} width={size}></Box>\r\n                          <p style={numberRed}>{index+1}</p>\r\n                          <p style={{ marginLeft: 5 }}>{item.id}</p>\r\n                          <p style={{ marginLeft: 5, fontWeight: \"bold\" }}>\r\n                            {item.text}\r\n                            \r\n                          </p>\r\n                        </div>\r\n                      );\r\n                    }\r\n                  })}\r\n                </div>\r\n              }\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}