{"ast":null,"code":"var _jsxFileName = \"/media/nguyen_sam/Coding/light-bootstrap-dashboard-react-master/src/components/CustomButton/CustomButton.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nclass CustomButton extends Component {\n  render() {\n    const {\n      fill,\n      simple,\n      pullRight,\n      round,\n      block,\n      ...rest\n    } = this.props;\n    const btnClasses = cx({\n      \"btn-fill\": fill,\n      \"btn-simple\": simple,\n      \"pull-right\": pullRight,\n      \"btn-block\": block,\n      \"btn-round\": round\n    });\n    return /*#__PURE__*/React.createElement(Button, Object.assign({\n      className: btnClasses\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    }));\n  }\n\n}\n\nCustomButton.propTypes = {\n  fill: PropTypes.bool,\n  simple: PropTypes.bool,\n  pullRight: PropTypes.bool,\n  block: PropTypes.bool,\n  round: PropTypes.bool\n};\nexport default CustomButton;","map":{"version":3,"sources":["/media/nguyen_sam/Coding/light-bootstrap-dashboard-react-master/src/components/CustomButton/CustomButton.jsx"],"names":["React","Component","Button","cx","PropTypes","CustomButton","render","fill","simple","pullRight","round","block","rest","props","btnClasses","propTypes","bool"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;AAiBA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AACnCK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA,SAAhB;AAA2BC,MAAAA,KAA3B;AAAkCC,MAAAA,KAAlC;AAAyC,SAAGC;AAA5C,QAAqD,KAAKC,KAAhE;AAEA,UAAMC,UAAU,GAAGX,EAAE,CAAC;AACpB,kBAAYI,IADQ;AAEpB,oBAAcC,MAFM;AAGpB,oBAAcC,SAHM;AAIpB,mBAAaE,KAJO;AAKpB,mBAAaD;AALO,KAAD,CAArB;AAQA,wBAAO,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAEI;AAAnB,OAAmCF,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAbkC;;AAgBrCP,YAAY,CAACU,SAAb,GAAyB;AACvBR,EAAAA,IAAI,EAAEH,SAAS,CAACY,IADO;AAEvBR,EAAAA,MAAM,EAAEJ,SAAS,CAACY,IAFK;AAGvBP,EAAAA,SAAS,EAAEL,SAAS,CAACY,IAHE;AAIvBL,EAAAA,KAAK,EAAEP,SAAS,CAACY,IAJM;AAKvBN,EAAAA,KAAK,EAAEN,SAAS,CAACY;AALM,CAAzB;AAQA,eAAeX,YAAf","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nclass CustomButton extends Component {\n  render() {\n    const { fill, simple, pullRight, round, block, ...rest } = this.props;\n\n    const btnClasses = cx({\n      \"btn-fill\": fill,\n      \"btn-simple\": simple,\n      \"pull-right\": pullRight,\n      \"btn-block\": block,\n      \"btn-round\": round\n    });\n\n    return <Button className={btnClasses} {...rest} />;\n  }\n}\n\nCustomButton.propTypes = {\n  fill: PropTypes.bool,\n  simple: PropTypes.bool,\n  pullRight: PropTypes.bool,\n  block: PropTypes.bool,\n  round: PropTypes.bool\n};\n\nexport default CustomButton;\n"]},"metadata":{},"sourceType":"module"}