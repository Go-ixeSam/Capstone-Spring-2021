{"ast":null,"code":"export function getList(state) {\n  return state.contract.listTestSelectorstSelector;\n}\nexport function getTrip(state) {\n  return state.trip.tripData;\n}\nexport function getAdvanceData(state) {\n  return state.trip.advanceTableData;\n}\nexport function getAdvanceSelectedData(state) {\n  return state.trip.advanceTableDataSelected;\n}\nexport function getAdvanceDataByNameSearch(advanceTableData, searchValue) {\n  return state.trip.advanceTableData.filter(record => record.name.includes(searchValue));\n}\nexport function getUserRole(state) {\n  return state.user.roles.text;\n}\nexport function getMaterialHeader(state) {\n  return state.trip.materialHeader;\n}\n/**\r\n * ! Tìm kiến trip dựa trên ID\r\n * @param {*} state\r\n * @param {*} id\r\n */\n\nexport function getTripDetailById(state) {\n  const id = state.trip.tripSelectedID;\n  return state.trip.tripData.tableBody.record.find(obj => obj.contractCode == id);\n}\nexport function removeAdvanceRecord(state, selectedRecord) {\n  let newArray = [];\n  selectedRecord.map(selected => {\n    newArray = state.trip.advanceTableData.filter(record => record.name != selected);\n  });\n  return newArray;\n}","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/redux/Selector/Selectors.js"],"names":["getList","state","contract","listTestSelectorstSelector","getTrip","trip","tripData","getAdvanceData","advanceTableData","getAdvanceSelectedData","advanceTableDataSelected","getAdvanceDataByNameSearch","searchValue","filter","record","name","includes","getUserRole","user","roles","text","getMaterialHeader","materialHeader","getTripDetailById","id","tripSelectedID","tableBody","find","obj","contractCode","removeAdvanceRecord","selectedRecord","newArray","map","selected"],"mappings":"AACA,OAAO,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AAC7B,SAAOA,KAAK,CAACC,QAAN,CAAeC,0BAAtB;AACD;AAED,OAAO,SAASC,OAAT,CAAiBH,KAAjB,EAAwB;AAC7B,SAAOA,KAAK,CAACI,IAAN,CAAWC,QAAlB;AACD;AAED,OAAO,SAASC,cAAT,CAAwBN,KAAxB,EAA+B;AACpC,SAAOA,KAAK,CAACI,IAAN,CAAWG,gBAAlB;AACD;AAGD,OAAO,SAASC,sBAAT,CAAgCR,KAAhC,EAAuC;AAC5C,SAAOA,KAAK,CAACI,IAAN,CAAWK,wBAAlB;AACD;AAED,OAAO,SAASC,0BAAT,CAAoCH,gBAApC,EAAsDI,WAAtD,EAAmE;AACxE,SAAOX,KAAK,CAACI,IAAN,CAAWG,gBAAX,CAA4BK,MAA5B,CAAoCC,MAAD,IAAYA,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBJ,WAArB,CAA/C,CAAP;AACD;AAED,OAAO,SAASK,WAAT,CAAqBhB,KAArB,EAA4B;AACjC,SAAOA,KAAK,CAACiB,IAAN,CAAWC,KAAX,CAAiBC,IAAxB;AACD;AAGD,OAAO,SAASC,iBAAT,CAA2BpB,KAA3B,EAAkC;AACvC,SAAOA,KAAK,CAACI,IAAN,CAAWiB,cAAlB;AACD;AAED;;;;;;AAKA,OAAO,SAASC,iBAAT,CAA2BtB,KAA3B,EAAkC;AACvC,QAAMuB,EAAE,GAAGvB,KAAK,CAACI,IAAN,CAAWoB,cAAtB;AACA,SAAOxB,KAAK,CAACI,IAAN,CAAWC,QAAX,CAAoBoB,SAApB,CAA8BZ,MAA9B,CAAqCa,IAArC,CACJC,GAAD,IAASA,GAAG,CAACC,YAAJ,IAAoBL,EADxB,CAAP;AAGD;AACD,OAAO,SAASM,mBAAT,CAA6B7B,KAA7B,EAAoC8B,cAApC,EAAoD;AACzD,MAAIC,QAAQ,GAAG,EAAf;AACAD,EAAAA,cAAc,CAACE,GAAf,CAAoBC,QAAD,IAAc;AAC/BF,IAAAA,QAAQ,GAAG/B,KAAK,CAACI,IAAN,CAAWG,gBAAX,CAA4BK,MAA5B,CACRC,MAAD,IAAYA,MAAM,CAACC,IAAP,IAAemB,QADlB,CAAX;AAGD,GAJD;AAKA,SAAOF,QAAP;AACD","sourcesContent":["\r\nexport function getList(state) {\r\n  return state.contract.listTestSelectorstSelector;\r\n}\r\n\r\nexport function getTrip(state) {\r\n  return state.trip.tripData;\r\n}\r\n\r\nexport function getAdvanceData(state) {\r\n  return state.trip.advanceTableData;\r\n}\r\n\r\n\r\nexport function getAdvanceSelectedData(state) {\r\n  return state.trip.advanceTableDataSelected;\r\n}\r\n\r\nexport function getAdvanceDataByNameSearch(advanceTableData, searchValue) {\r\n  return state.trip.advanceTableData.filter((record) => record.name.includes(searchValue));\r\n}\r\n\r\nexport function getUserRole(state) {\r\n  return state.user.roles.text;\r\n}\r\n\r\n\r\nexport function getMaterialHeader(state) {\r\n  return state.trip.materialHeader;\r\n}\r\n\r\n/**\r\n * ! Tìm kiến trip dựa trên ID\r\n * @param {*} state\r\n * @param {*} id\r\n */\r\nexport function getTripDetailById(state) {\r\n  const id = state.trip.tripSelectedID;\r\n  return state.trip.tripData.tableBody.record.find(\r\n    (obj) => obj.contractCode == id\r\n  );\r\n}\r\nexport function removeAdvanceRecord(state, selectedRecord) {\r\n  let newArray = [];\r\n  selectedRecord.map((selected) => {\r\n    newArray = state.trip.advanceTableData.filter(\r\n      (record) => record.name != selected\r\n    );\r\n  });\r\n  return newArray;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}