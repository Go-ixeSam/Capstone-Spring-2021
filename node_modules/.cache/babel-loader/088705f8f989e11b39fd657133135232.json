{"ast":null,"code":"import{ButtonBase,TextField}from\"@material-ui/core\";import InputAdornment from\"@material-ui/core/InputAdornment\";import{makeStyles,withStyles}from\"@material-ui/core/styles\";import*as icon from\"@material-ui/icons\";import{useFormik}from\"formik\";import React from\"react\";// import { useForm } from \"react-hook-form\";\nimport*as variable from\"../../../variables/Variables\";import SimpleSelect from\"../DropDown\";var StyledTextField=withStyles(function(theme){return{root:{\"& .MuiInputBase-root\":{fontSize:14,border:\"1px lightgrey\",\"& .MuiInputBase-formControl\":{\"& .Mui-focused\":{border:\"1px \"+variable.primaryColor}}}}};})(TextField);var useStyles=makeStyles(function(theme){return{root:{\"& > *\":{margin:theme.spacing(1),width:\"25ch\"}},around:{display:\"flex\",flexDirection:\"row\",width:\"max-content\"}};});export var SearchBar=function SearchBar(argument){var classes=useStyles();var name=argument.name,label=argument.label,searchOnChange=argument.searchOnChange,searchValue=argument.searchValue;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(StyledTextField,{type:\"text\",size:\"small\",label:label,variant:\"outlined\",InputProps:{name:name,onChange:searchOnChange,value:searchValue,endAdornment:/*#__PURE__*/React.createElement(InputAdornment,null,/*#__PURE__*/React.createElement(StyledIcontButton,{type:\"submit\"},/*#__PURE__*/React.createElement(icon.Search,null)))}}));};var StyledIcontButton=withStyles(function(theme){return{root:{\"& .MuiButtonBase-root\t\":{padding:0}}};})(ButtonBase);","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/components/FilterOption/SearchOption/Search.jsx"],"names":["ButtonBase","TextField","InputAdornment","makeStyles","withStyles","icon","useFormik","React","variable","SimpleSelect","StyledTextField","theme","root","fontSize","border","primaryColor","useStyles","margin","spacing","width","around","display","flexDirection","SearchBar","argument","classes","name","label","searchOnChange","searchValue","onChange","value","endAdornment","StyledIcontButton","padding"],"mappings":"AAAA,OAASA,UAAT,CAAqBC,SAArB,KAAsC,mBAAtC,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,OAASC,UAAT,CAAqBC,UAArB,KAAuC,0BAAvC,CACA,MAAO,GAAKC,CAAAA,IAAZ,KAAsB,oBAAtB,CACA,OAASC,SAAT,KAA0B,QAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,8BAA1B,CACA,MAAOC,CAAAA,YAAP,KAAyB,aAAzB,CACA,GAAMC,CAAAA,eAAe,CAAGN,UAAU,CAAC,SAACO,KAAD,QAAY,CAC7CC,IAAI,CAAE,CACJ,uBAAwB,CACtBC,QAAQ,CAAE,EADY,CAEtBC,MAAM,CAAE,eAFc,CAGtB,8BAA+B,CAC7B,iBAAkB,CAChBA,MAAM,CAAE,OAASN,QAAQ,CAACO,YADV,CADW,CAHT,CADpB,CADuC,CAAZ,EAAD,CAAV,CAYpBd,SAZoB,CAAxB,CAcA,GAAMe,CAAAA,SAAS,CAAGb,UAAU,CAAC,SAACQ,KAAD,QAAY,CACvCC,IAAI,CAAE,CACJ,QAAS,CACPK,MAAM,CAAEN,KAAK,CAACO,OAAN,CAAc,CAAd,CADD,CAEPC,KAAK,CAAE,MAFA,CADL,CADiC,CAOvCC,MAAM,CAAE,CACNC,OAAO,CAAE,MADH,CAENC,aAAa,CAAE,KAFT,CAGNH,KAAK,CAAE,aAHD,CAP+B,CAAZ,EAAD,CAA5B,CAaA,MAAO,IAAMI,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,QAAD,CAAc,CACrC,GAAMC,CAAAA,OAAO,CAAGT,SAAS,EAAzB,CADqC,GAE7BU,CAAAA,IAF6B,CAEgBF,QAFhB,CAE7BE,IAF6B,CAEvBC,KAFuB,CAEgBH,QAFhB,CAEvBG,KAFuB,CAEhBC,cAFgB,CAEgBJ,QAFhB,CAEhBI,cAFgB,CAEAC,WAFA,CAEgBL,QAFhB,CAEAK,WAFA,CAGrC,mBACE,4CACE,oBAAC,eAAD,EACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAEF,KAHT,CAIE,OAAO,CAAC,UAJV,CAKE,UAAU,CAAE,CACVD,IAAI,CAAEA,IADI,CAEVI,QAAQ,CAAEF,cAFA,CAGVG,KAAK,CAAEF,WAHG,CAIVG,YAAY,cACV,oBAAC,cAAD,mBACE,oBAAC,iBAAD,EAAmB,IAAI,CAAC,QAAxB,eACE,oBAAC,IAAD,CAAM,MAAN,MADF,CADF,CALQ,CALd,EADF,CADF,CAsBD,CAzBM,CA2BP,GAAMC,CAAAA,iBAAiB,CAAG7B,UAAU,CAAC,SAACO,KAAD,QAAY,CAC/CC,IAAI,CAAE,CACJ,yBAA0B,CACxBsB,OAAO,CAAE,CADe,CADtB,CADyC,CAAZ,EAAD,CAAV,CAMtBlC,UANsB,CAA1B","sourcesContent":["import { ButtonBase, TextField } from \"@material-ui/core\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport * as icon from \"@material-ui/icons\";\r\nimport { useFormik } from \"formik\";\r\nimport React from \"react\";\r\n// import { useForm } from \"react-hook-form\";\r\nimport * as variable from \"../../../variables/Variables\";\r\nimport SimpleSelect from \"../DropDown\";\r\nconst StyledTextField = withStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiInputBase-root\": {\r\n      fontSize: 14,\r\n      border: \"1px lightgrey\",\r\n      \"& .MuiInputBase-formControl\": {\r\n        \"& .Mui-focused\": {\r\n          border: \"1px \" + variable.primaryColor,\r\n        },\r\n      },\r\n    },\r\n  },\r\n}))(TextField);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  around: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    width: \"max-content\",\r\n  },\r\n}));\r\nexport const SearchBar = (argument) => {\r\n  const classes = useStyles();\r\n  const { name, label, searchOnChange, searchValue } = argument;\r\n  return (\r\n    <div>\r\n      <StyledTextField\r\n        type=\"text\"\r\n        size=\"small\"\r\n        label={label}\r\n        variant=\"outlined\"\r\n        InputProps={{\r\n          name: name,\r\n          onChange: searchOnChange,\r\n          value: searchValue,\r\n          endAdornment: (\r\n            <InputAdornment>\r\n              <StyledIcontButton type=\"submit\">\r\n                <icon.Search />\r\n              </StyledIcontButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StyledIcontButton = withStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiButtonBase-root\t\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n}))(ButtonBase);\r\n"]},"metadata":{},"sourceType":"module"}