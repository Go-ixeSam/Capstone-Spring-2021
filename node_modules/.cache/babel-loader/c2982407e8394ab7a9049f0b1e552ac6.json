{"ast":null,"code":"var _jsxFileName = \"E:\\\\light-bootstrap-dashboard-react-master\\\\src\\\\views\\\\SystemConfiguration.jsx\";\nimport React from \"react\";\nimport { CardNoFooter } from \"../components/Card/Card\";\nimport { Col, Grid, Row } from \"react-bootstrap\";\nimport { FormControll } from \"../components/Formik/FormikControl\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPercentReport } from \"../redux/Selector/Selectors\";\nimport { Form, Formik } from \"formik\";\nimport * as variable from \"../variables/Variables\";\nimport { addPercentReportName } from \"../redux/index\";\n\nfunction SystemConfiguration() {\n  const dispatch = useDispatch();\n  const systemConfigForm = useSelector(state => getPercentReport(state));\n  React.useEffect(() => {\n    dispatch(addPercentReportName());\n  }, []);\n  const initialValue = {\n    // [variable.username]: \"\",\n    [variable.percent]: \"\"\n  };\n  return /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    style: {\n      margin: 0,\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardNoFooter, {\n    title: \"\",\n    content: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: initialValue //   validationSchema={validationSchema}\n      //   onSubmit={onSubmit}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, formik => {\n      return /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }\n      }, systemConfigForm.map(rows => {\n        const columns = rows.row.cols;\n        return columns.map(column => {\n          // const controlType = column.elementType;\n          const {\n            name,\n            type,\n            labeltext,\n            placeholder //   options,\n\n          } = column.elementConfig;\n          return /*#__PURE__*/React.createElement(FormControll, Object.assign({\n            elementType: type,\n            type: type,\n            label: labeltext,\n            name: name,\n            placeholder: placeholder\n          }, column, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 27\n            }\n          }));\n        });\n      }));\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default SystemConfiguration;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/views/SystemConfiguration.jsx"],"names":["React","CardNoFooter","Col","Grid","Row","FormControll","useDispatch","useSelector","getPercentReport","Form","Formik","variable","addPercentReportName","SystemConfiguration","dispatch","systemConfigForm","state","useEffect","initialValue","percent","margin","padding","formik","map","rows","columns","row","cols","column","name","type","labeltext","placeholder","elementConfig"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,QAA+B,iBAA/B;AACA,SAASC,YAAT,QAA6B,oCAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,OAAO,KAAKC,QAAZ,MAA0B,wBAA1B;AACA,SAASC,oBAAT,QAAqC,gBAArC;;AAEA,SAASC,mBAAT,GAA+B;AAC7B,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,gBAAgB,GAAGR,WAAW,CAAES,KAAD,IAAWR,gBAAgB,CAACQ,KAAD,CAA5B,CAApC;AACAhB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpBH,IAAAA,QAAQ,CAACF,oBAAoB,EAArB,CAAR;AACD,GAFD,EAEG,EAFH;AAIA,QAAMM,YAAY,GAAG;AACnB;AACA,KAACP,QAAQ,CAACQ,OAAV,GAAoB;AAFD,GAArB;AAIA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAY,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,OAAO,EAAE;AAAtB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAC,EADR;AAEE,IAAA,OAAO,eACL,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,aAAa,EAAEH,YADjB,CAEE;AACA;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKII,MAAD,IAAY;AACX,0BACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,gBAAgB,CAACQ,GAAjB,CAAsBC,IAAD,IAAU;AAC9B,cAAMC,OAAO,GAAGD,IAAI,CAACE,GAAL,CAASC,IAAzB;AACA,eAAOF,OAAO,CAACF,GAAR,CAAaK,MAAD,IAAY;AAC7B;AACA,gBAAM;AACJC,YAAAA,IADI;AAEJC,YAAAA,IAFI;AAGJC,YAAAA,SAHI;AAIJC,YAAAA,WAJI,CAKN;;AALM,cAMFJ,MAAM,CAACK,aANX;AAQA,8BACE,oBAAC,YAAD;AACE,YAAA,WAAW,EAAEH,IADf;AAEE,YAAA,IAAI,EAAEA,IAFR;AAGE,YAAA,KAAK,EAAEC,SAHT;AAIE,YAAA,IAAI,EAAEF,IAJR;AAKE,YAAA,WAAW,EAAEG;AALf,aAMMJ,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAUD,SApBM,CAAP;AAqBD,OAvBA,CADH,CADF;AA4BD,KAlCH,CADF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AA+CD;;AAED,eAAef,mBAAf","sourcesContent":["import React from \"react\";\r\nimport { CardNoFooter } from \"../components/Card/Card\";\r\nimport { Col, Grid, Row } from \"react-bootstrap\";\r\nimport { FormControll } from \"../components/Formik/FormikControl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPercentReport } from \"../redux/Selector/Selectors\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as variable from \"../variables/Variables\";\r\nimport { addPercentReportName } from \"../redux/index\";\r\n\r\nfunction SystemConfiguration() {\r\n  const dispatch = useDispatch();\r\n  const systemConfigForm = useSelector((state) => getPercentReport(state));\r\n  React.useEffect(() => {\r\n    dispatch(addPercentReportName());\r\n  }, []);\r\n\r\n  const initialValue = {\r\n    // [variable.username]: \"\",\r\n    [variable.percent]: \"\",\r\n  };\r\n  return (\r\n    <Grid fluid style={{ margin: 0, padding: 0 }}>\r\n      <CardNoFooter\r\n        title=\"\"\r\n        content={\r\n          <React.Fragment>\r\n            <Formik\r\n              initialValues={initialValue}\r\n              //   validationSchema={validationSchema}\r\n              //   onSubmit={onSubmit}\r\n            >\r\n              {(formik) => {\r\n                return (\r\n                  <Form>\r\n                    {systemConfigForm.map((rows) => {\r\n                      const columns = rows.row.cols;\r\n                      return columns.map((column) => {\r\n                        // const controlType = column.elementType;\r\n                        const {\r\n                          name,\r\n                          type,\r\n                          labeltext,\r\n                          placeholder,\r\n                        //   options,\r\n                        } = column.elementConfig;\r\n\r\n                        return (\r\n                          <FormControll\r\n                            elementType={type}\r\n                            type={type}\r\n                            label={labeltext}\r\n                            name={name}\r\n                            placeholder={placeholder}\r\n                            {...column}\r\n                          />\r\n                        );\r\n                      });\r\n                    })}\r\n                  </Form>\r\n                );\r\n              }}\r\n            </Formik>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default SystemConfiguration;\r\n"]},"metadata":{},"sourceType":"module"}