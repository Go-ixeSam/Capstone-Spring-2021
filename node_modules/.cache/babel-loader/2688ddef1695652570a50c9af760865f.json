{"ast":null,"code":"var _jsxFileName = \"E:\\\\light-bootstrap-dashboard-react-master\\\\src\\\\layouts\\\\Admin.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\nimport { connect } from \"react-redux\";\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\nimport firebase from \"util/firebase\";\nimport { addObject } from \"redux/index\";\nimport { style } from \"variables/Variables.jsx\";\nimport routes from \"routes.js\";\nimport image from \"assets/img/sidebar-3.jpg\";\nimport { array, object } from \"yup/lib/locale\";\n\nclass Admin extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.handleNotificationClick = position => {\n      var color = Math.floor(Math.random() * 4 + 1);\n      var level;\n\n      switch (color) {\n        case 1:\n          level = \"success\";\n          break;\n\n        case 2:\n          level = \"warning\";\n          break;\n\n        case 3:\n          level = \"error\";\n          break;\n\n        case 4:\n          level = \"info\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.state._notificationSystem.addNotification({\n        title: /*#__PURE__*/React.createElement(\"span\", {\n          \"data-notify\": \"icon\",\n          className: \"pe-7s-gift\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 14\n          }\n        }),\n        message: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }\n        }, \"Welcome to \", /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 22\n          }\n        }, \"Light Bootstrap Dashboard\"), \" - a beautiful freebie for every web developer.\"),\n        level: level,\n        position: position,\n        autoDismiss: 15\n      });\n    };\n\n    this.getRoutes = routes => {\n      return routes.map((prop, key) => {\n        if (prop.layout === \"/admin\") {\n          return /*#__PURE__*/React.createElement(Route, {\n            path: prop.layout + prop.path,\n            render: props => /*#__PURE__*/React.createElement(prop.component, Object.assign({}, props, {\n              handleClick: this.handleNotificationClick,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 15\n              }\n            })),\n            key: key,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 11\n            }\n          });\n        } else {\n          return null;\n        }\n      });\n    };\n\n    this.getBrandText = path => {\n      for (let i = 0; i < routes.length; i++) {\n        if (this.props.location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n          return routes[i].name;\n        }\n      }\n\n      return \"Brand\";\n    };\n\n    this.handleImageClick = image => {\n      this.setState({\n        image: image\n      });\n    };\n\n    this.handleColorClick = color => {\n      this.setState({\n        color: color\n      });\n    };\n\n    this.handleHasImage = hasImage => {\n      this.setState({\n        hasImage: hasImage\n      });\n    };\n\n    this.handleFixedClick = () => {\n      if (this.state.fixedClasses === \"dropdown\") {\n        this.setState({\n          fixedClasses: \"dropdown show-dropdown open\"\n        });\n      } else {\n        this.setState({\n          fixedClasses: \"dropdown\"\n        });\n      }\n    };\n\n    this.notify = null;\n\n    this.setNotify = element => {\n      this.notify = element;\n    }; //! Hàm này có tác dụng là tạo ra một notification, ta sẽ dùng hàm này cứ mỗi khi firebase bắt\n    //! sự kiện\n\n\n    this.addNotify = () => {\n      var color = Math.floor(Math.random() * 4 + 1);\n      var level;\n\n      switch (color) {\n        case 1:\n          level = \"success\";\n          break;\n\n        case 2:\n          level = \"warning\";\n          break;\n\n        case 3:\n          level = \"error\";\n          break;\n\n        case 4:\n          level = \"info\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.notify.addNotification({\n        title: /*#__PURE__*/React.createElement(\"span\", {\n          \"data-notify\": \"icon\",\n          className: \"pe-7s-gift\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 16\n          }\n        }),\n        message: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }\n        }, \"Welcome to \", /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 24\n          }\n        }, \"Light Bootstrap Dashboard\"), \" - a beautiful freebie for every web developer.\"),\n        level: level,\n        position: \"tr\",\n        autoDismiss: 15\n      });\n    };\n\n    this.state = {\n      // _notificationSystem: null,\n      image: image,\n      color: \"black\",\n      hasImage: true,\n      fixedClasses: \"dropdown show-dropdown open\"\n    };\n  }\n\n  componentDidMount() {\n    this.addNotify();\n    this.firebaseListening();\n  }\n\n  componentDidUpdate(e) {\n    if (window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf(\"nav-open\") !== -1) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n\n    this.firebaseListening();\n  } // ! Lắng nghe sự thay đổi của database trên firebase\n\n\n  firebaseListening(params) {\n    var userCount = firebase.database().ref(\"users\");\n    let newArr = [];\n    userCount.on(\"value\", snapshot => {\n      const data = snapshot.val();\n      snapshot.forEach(child => {\n        console.log(\"key= \", child.key, \" value\", child.val());\n        newArr.push({\n          userId: child.key\n        }, { ...child.val()\n        });\n      }); // ? Vì snapshot sẽ chỉ trả về các obj nên ta muốn nó thành 1 array ta phải làm bằng tay\n\n      console.log(\"snapshot ở trên firebase: \", data);\n      console.log(\"Hình dáng đầy đủ: \", newArr); // console.log(\n      //   \"Keest quar= \",\n      //   data instanceof Array,\n      //   \" object= \",\n      //   data instanceof Object\n      // );\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NotificationSystem, {\n      ref: this.setNotify,\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Sidebar, Object.assign({}, this.props, {\n      routes: routes,\n      image: this.state.image,\n      color: this.state.color,\n      hasImage: this.state.hasImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main-panel\",\n      className: \"main-panel\",\n      ref: \"mainPanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AdminNavbar, Object.assign({}, this.props, {\n      brandText: this.getBrandText(this.props.location.pathname),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }, this.getRoutes(routes)), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} //Có tác dụng select ra những state cần xử lí\n\n/**\n * state này là của redux, và chữ fn đóng vai trò là 1 props\n * fn có giá trị là state.full_name của redux\n * @param {} state\n */\n\n\nconst mapStateToProps = state => {\n  return {\n    firebase: state.firebase\n  };\n}; // const mapDispatchToProps = dispatch => {\n//   return {\n//   }\n// };\n\n\nexport default connect(mapStateToProps, {\n  addObject\n})(Admin);","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/layouts/Admin.jsx"],"names":["React","Component","Route","Switch","NotificationSystem","connect","AdminNavbar","Footer","Sidebar","FixedPlugin","firebase","addObject","style","routes","image","array","object","Admin","constructor","props","handleNotificationClick","position","color","Math","floor","random","level","state","_notificationSystem","addNotification","title","message","autoDismiss","getRoutes","map","prop","key","layout","path","getBrandText","i","length","location","pathname","indexOf","name","handleImageClick","setState","handleColorClick","handleHasImage","hasImage","handleFixedClick","fixedClasses","notify","setNotify","element","addNotify","componentDidMount","firebaseListening","componentDidUpdate","e","window","innerWidth","history","document","documentElement","className","classList","toggle","action","scrollTop","scrollingElement","refs","mainPanel","params","userCount","database","ref","newArr","on","snapshot","data","val","forEach","child","console","log","push","userId","render","mapStateToProps"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\nimport { connect } from \"react-redux\";\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\nimport firebase from \"util/firebase\";\nimport { addObject } from \"redux/index\";\n\nimport { style } from \"variables/Variables.jsx\";\n\nimport routes from \"routes.js\";\n\nimport image from \"assets/img/sidebar-3.jpg\";\nimport { array, object } from \"yup/lib/locale\";\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.notify = null;\n\n    this.setNotify = (element) => {\n      this.notify = element;\n    };\n\n    //! Hàm này có tác dụng là tạo ra một notification, ta sẽ dùng hàm này cứ mỗi khi firebase bắt\n    //! sự kiện\n    this.addNotify = () => {\n      var color = Math.floor(Math.random() * 4 + 1);\n      var level;\n      switch (color) {\n        case 1:\n          level = \"success\";\n          break;\n        case 2:\n          level = \"warning\";\n          break;\n        case 3:\n          level = \"error\";\n          break;\n        case 4:\n          level = \"info\";\n          break;\n        default:\n          break;\n      }\n      this.notify.addNotification({\n        title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n        message: (\n          <div>\n            Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie\n            for every web developer.\n          </div>\n        ),\n        level: level,\n        position: \"tr\",\n        autoDismiss: 15,\n      });\n    };\n    this.state = {\n      // _notificationSystem: null,\n      image: image,\n      color: \"black\",\n      hasImage: true,\n      fixedClasses: \"dropdown show-dropdown open\",\n    };\n  }\n  handleNotificationClick = (position) => {\n    var color = Math.floor(Math.random() * 4 + 1);\n    var level;\n    switch (color) {\n      case 1:\n        level = \"success\";\n        break;\n      case 2:\n        level = \"warning\";\n        break;\n      case 3:\n        level = \"error\";\n        break;\n      case 4:\n        level = \"info\";\n        break;\n      default:\n        break;\n    }\n    this.state._notificationSystem.addNotification({\n      title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n      message: (\n        <div>\n          Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n          every web developer.\n        </div>\n      ),\n      level: level,\n      position: position,\n      autoDismiss: 15,\n    });\n  };\n  getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            render={(props) => (\n              <prop.component\n                {...props}\n                handleClick={this.handleNotificationClick}\n              />\n            )}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  handleImageClick = (image) => {\n    this.setState({ image: image });\n  };\n  handleColorClick = (color) => {\n    this.setState({ color: color });\n  };\n  handleHasImage = (hasImage) => {\n    this.setState({ hasImage: hasImage });\n  };\n  handleFixedClick = () => {\n    if (this.state.fixedClasses === \"dropdown\") {\n      this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\n    } else {\n      this.setState({ fixedClasses: \"dropdown\" });\n    }\n  };\n  componentDidMount() {\n    this.addNotify();\n    this.firebaseListening();\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n    this.firebaseListening();\n  }\n\n  // ! Lắng nghe sự thay đổi của database trên firebase\n  firebaseListening(params) {\n    var userCount = firebase.database().ref(\"users\");\n    let newArr = [];\n    userCount.on(\"value\", (snapshot) => {\n      const data = snapshot.val();\n      snapshot.forEach((child) => {\n        console.log(\"key= \", child.key, \" value\", child.val());\n        newArr.push(\n          {\n            userId: child.key,\n          },\n          { ...child.val() }\n        );\n      });\n      // ? Vì snapshot sẽ chỉ trả về các obj nên ta muốn nó thành 1 array ta phải làm bằng tay\n\n      console.log(\"snapshot ở trên firebase: \", data);\n      console.log(\"Hình dáng đầy đủ: \",newArr)\n      // console.log(\n      //   \"Keest quar= \",\n      //   data instanceof Array,\n      //   \" object= \",\n      //   data instanceof Object\n      // );\n    });\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <NotificationSystem ref={this.setNotify} style={style} />\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          image={this.state.image}\n          color={this.state.color}\n          hasImage={this.state.hasImage}\n        />\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>{this.getRoutes(routes)}</Switch>\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\n//Có tác dụng select ra những state cần xử lí\n/**\n * state này là của redux, và chữ fn đóng vai trò là 1 props\n * fn có giá trị là state.full_name của redux\n * @param {} state\n */\nconst mapStateToProps = (state) => {\n  return {\n    firebase: state.firebase,\n  };\n};\n// const mapDispatchToProps = dispatch => {\n//   return {\n\n//   }\n// };\n\nexport default connect(mapStateToProps, { addObject })(Admin);\n"]},"metadata":{},"sourceType":"module"}