{"ast":null,"code":"// api/productApi.js\nimport React from \"react\";\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\nimport axiosClient from \"api/axiosClient\";\nimport * as variable from \"../variables/Variables\"; // import { useAxios, axiosWithoutToken, axiosTeamClient } from \"api/axiosClient\";\n\nimport { AxiosCalling, axiosWithoutToken, axiosTeamClient } from \"api/axiosClient\";\nimport { getToken } from \"redux/Selector/Selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst axios = require('axios').default;\n\nconst JsonPlaceHolderApi = {\n  getAll: params => {\n    const url = \"/posts\";\n    return axiosClient.get(url, {\n      params\n    });\n  },\n  getPlantInfo: params => {\n    const url = \"/LeakInfoFromWiki\";\n    return axiosTeamClient.get(url, {\n      params\n    });\n  },\n  login: params => {\n    const url = \"/api/Login/WebLogin\";\n    return axiosWithoutToken.post(url, params);\n  },\n  shareDetail: params => {\n    const url = \"/api/ShareDetail\";\n    return axiosTeamClient.post(url, params);\n  },\n  getDashboard: params => {\n    const url = \"/api/Dashboard/GetDashboard\";\n    return axiosTeamClient.get(url, params);\n  },\n  isAccept: params => {\n    const url = \"/api/Vegetable/IsAccept\"; //! kiểu put ở dưới là cách để thiết lập đối với những api mà sử dụng query param\n    // return axiosTeamClient.put(url, {}, { params: params });\n\n    return axiosTeamClient.put(url, params);\n  },\n  getAllVegetableUnapproved: params => {\n    const url = \"/api/Vegetable/GetAllVegetableUnapproved\"; //! kiểu put ở dưới là cách để thiết lập đối với những api mà param nằm ở body\n\n    return axiosTeamClient.get(url, params);\n  },\n  //* APi trả về cho ta 1 danh sách mà thể hiện số ngưỡng mà nếu vượt quá thì sẽ khóa account\n  getAllPercent: params => {\n    const url = \"/api/PrecentReport/GetAll\";\n    return axiosTeamClient.get(url, {\n      params: params\n    });\n  },\n  //* api giúp ta chỉnh lại cái ngưỡng bị khóa\n  editPrecentReport: params => {\n    const url = \"/api/PrecentReport\";\n    return axiosTeamClient.put(url, params);\n  },\n  //* Lấy danh sách top 10 để hiện lên dashboard\n  getTop10: params => {\n    const url = \"/api/Dashboard/Top10\"; // return axiosTeamClient.get(url, {}, { params: params });\n\n    return axios.get(variable.teamBaseURL + url + `?Status=${params}`);\n  },\n  //* laay thong tin de so sanh giua exchange va share cho dashboard\n  getShareAndExchangeCompare: params => {\n    const url = \"/api/Dashboard/ShowDashBoardAboutShareAndExchange\";\n    return axiosTeamClient.get(url, {}, {\n      params: params\n    });\n  },\n  //* Lấy html string của rau cần tìm\n  wikiSearch: params => {\n    const url = \"/GetHTMLWiki\";\n    return axios.get(variable.wikiSearchBaseUrl + url + `?title=${params}`);\n  },\n  // * tìm kiếm rau tren wiki\n  wikiVegetableSearch: params => {\n    const url = \"/LeakInfoFromWiki\";\n    return axios.get(variable.wikiSearchBaseUrl + url + `?title=${params}`);\n  }\n};\nexport default JsonPlaceHolderApi;","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/api/JSONPLACEHOLDERApi.js"],"names":["React","config","axiosClient","variable","AxiosCalling","axiosWithoutToken","axiosTeamClient","getToken","useDispatch","useSelector","axios","require","default","JsonPlaceHolderApi","getAll","params","url","get","getPlantInfo","login","post","shareDetail","getDashboard","isAccept","put","getAllVegetableUnapproved","getAllPercent","editPrecentReport","getTop10","teamBaseURL","getShareAndExchangeCompare","wikiSearch","wikiSearchBaseUrl","wikiVegetableSearch"],"mappings":"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","sourcesContent":["// api/productApi.js\r\nimport React from \"react\";\r\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\r\nimport axiosClient from \"api/axiosClient\";\r\n\r\nimport * as variable from \"../variables/Variables\"\r\n// import { useAxios, axiosWithoutToken, axiosTeamClient } from \"api/axiosClient\";\r\nimport {\r\n  AxiosCalling,\r\n  axiosWithoutToken,\r\n  axiosTeamClient,\r\n} from \"api/axiosClient\";\r\nimport { getToken } from \"redux/Selector/Selectors\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst axios = require('axios').default;\r\nconst JsonPlaceHolderApi = {\r\n  getAll: (params) => {\r\n    const url = \"/posts\";\r\n    return axiosClient.get(url, { params });\r\n  },\r\n  getPlantInfo: (params) => {\r\n    const url = \"/LeakInfoFromWiki\";\r\n    return axiosTeamClient.get(url, { params });\r\n  },\r\n  login: (params) => {\r\n    const url = \"/api/Login/WebLogin\";\r\n    return axiosWithoutToken.post(url, params);\r\n  },\r\n  shareDetail: (params) => {\r\n    const url = \"/api/ShareDetail\";\r\n    return axiosTeamClient.post(url, params);\r\n  },\r\n  getDashboard: (params) => {\r\n    const url = \"/api/Dashboard/GetDashboard\";\r\n    return axiosTeamClient.get(url, params);\r\n  },\r\n  isAccept: (params) => {\r\n    const url = \"/api/Vegetable/IsAccept\";\r\n\r\n    //! kiểu put ở dưới là cách để thiết lập đối với những api mà sử dụng query param\r\n    // return axiosTeamClient.put(url, {}, { params: params });\r\n    return axiosTeamClient.put(url, params);\r\n  },\r\n  getAllVegetableUnapproved: (params) => {\r\n    const url = \"/api/Vegetable/GetAllVegetableUnapproved\";\r\n\r\n    //! kiểu put ở dưới là cách để thiết lập đối với những api mà param nằm ở body\r\n    return axiosTeamClient.get(url, params);\r\n  },\r\n\r\n  //* APi trả về cho ta 1 danh sách mà thể hiện số ngưỡng mà nếu vượt quá thì sẽ khóa account\r\n  getAllPercent: (params) => {\r\n    const url = \"/api/PrecentReport/GetAll\";\r\n    return axiosTeamClient.get(url, { params: params });\r\n  },\r\n\r\n  //* api giúp ta chỉnh lại cái ngưỡng bị khóa\r\n  editPrecentReport: (params) => {\r\n    const url = \"/api/PrecentReport\";\r\n    return axiosTeamClient.put(url, params);\r\n  },\r\n\r\n  //* Lấy danh sách top 10 để hiện lên dashboard\r\n  getTop10: (params) => {\r\n    const url = \"/api/Dashboard/Top10\";\r\n    // return axiosTeamClient.get(url, {}, { params: params });\r\n    return axios.get(variable.teamBaseURL+url+`?Status=${params}`);\r\n  },\r\n\r\n  //* laay thong tin de so sanh giua exchange va share cho dashboard\r\n  getShareAndExchangeCompare: (params) => {\r\n    const url = \"/api/Dashboard/ShowDashBoardAboutShareAndExchange\";\r\n    return axiosTeamClient.get(url, {}, { params: params });\r\n  },\r\n\r\n  //* Lấy html string của rau cần tìm\r\n  wikiSearch:(params)=>{\r\n    const url=\"/GetHTMLWiki\";\r\n    return axios.get(variable.wikiSearchBaseUrl+url+`?title=${params}`)\r\n  },\r\n\r\n  // * tìm kiếm rau tren wiki\r\n  wikiVegetableSearch:(params)=>{\r\n    const url=\"/LeakInfoFromWiki\";\r\n    return axios.get(variable.wikiSearchBaseUrl+url+`?title=${params}`)\r\n  }\r\n};\r\nexport default JsonPlaceHolderApi;\r\n"]},"metadata":{},"sourceType":"module"}