{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sam\\\\Documents\\\\GitHub\\\\Capstone-Spring-2021\\\\src\\\\views\\\\White.jsx\";\nimport { LoadingPopUp } from \"components/Modal/Modal\";\nimport NormalTable from \"components/SuperTable/NormalTable\";\nimport React, { useState } from \"react\";\nimport { Grid } from \"react-bootstrap\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllVegetableUnapproved, setNotificationCount } from \"redux/index\";\nimport { prepareVegetableData } from \"util/Helper\";\nimport { CardNoFooter } from \"../components/Card/Card\";\nimport { MaterialButton } from \"../components/CustomButton/MaterialButton\";\nimport { getPostTableHeader, getVegetableAPIloadingTime } from \"../redux/Selector/Selectors\";\nimport * as variable from \"../variables/Variables\";\n\nfunction White() {\n  let materialHeader = useSelector(state => getPostTableHeader(state));\n  let loading = useSelector(state => getVegetableAPIloadingTime(state));\n  const [tableBodyData, setTableBodyData] = useState([]);\n  let dispatch = useDispatch(); //! function sẽ load những rau trồng đc gửi lên để admin duyệt\n\n  function updateVegetableData() {\n    let hava = [];\n    dispatch(getAllVegetableUnapproved()).then(response => {\n      if (Object.keys(response.payload.data).length !== 0) {\n        hava = [...prepareVegetableData(response.payload.data)];\n        console.log(\"table đây ngày29/01= \", hava);\n        dispatch(setNotificationCount(hava.length));\n        setTableBodyData(hava);\n      } else {\n        hava = [...prepareVegetableData(response.payload.data)];\n        console.log(\"table đây= \", hava);\n        dispatch(setNotificationCount(0));\n        setTableBodyData(hava);\n      }\n    });\n  }\n\n  React.useEffect(() => {\n    updateVegetableData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LoadingPopUp, {\n    visible: loading,\n    length: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    variant: \"contained\",\n    color: \"info\",\n    size: \"large\",\n    style: {\n      marginRight: 5\n    },\n    onClick: () => {\n      updateVegetableData();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"C\\u1EADp nh\\u1EADt\"), /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    style: {\n      margin: 0,\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardNoFooter, {\n    titlet: \"Account list\",\n    content: /*#__PURE__*/React.createElement(NormalTable, {\n      headCells: materialHeader,\n      bodyData: tableBodyData,\n      notShowing: [variable.islock],\n      actionbuttonlist: [\"remove\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default White;","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/views/White.jsx"],"names":["LoadingPopUp","NormalTable","React","useState","Grid","useDispatch","useSelector","getAllVegetableUnapproved","setNotificationCount","prepareVegetableData","CardNoFooter","MaterialButton","getPostTableHeader","getVegetableAPIloadingTime","variable","White","materialHeader","state","loading","tableBodyData","setTableBodyData","dispatch","updateVegetableData","hava","then","response","Object","keys","payload","data","length","console","log","useEffect","marginRight","margin","padding","islock"],"mappings":"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","sourcesContent":["import { LoadingPopUp } from \"components/Modal/Modal\";\r\nimport NormalTable from \"components/SuperTable/NormalTable\";\r\nimport React, { useState } from \"react\";\r\nimport { Grid } from \"react-bootstrap\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    getAllVegetableUnapproved,\r\n    setNotificationCount\r\n} from \"redux/index\";\r\nimport { prepareVegetableData } from \"util/Helper\";\r\nimport { CardNoFooter } from \"../components/Card/Card\";\r\nimport { MaterialButton } from \"../components/CustomButton/MaterialButton\";\r\nimport {\r\n    getPostTableHeader,\r\n    getVegetableAPIloadingTime\r\n} from \"../redux/Selector/Selectors\";\r\nimport * as variable from \"../variables/Variables\";\r\nfunction White() {\r\n  let materialHeader = useSelector((state) => getPostTableHeader(state));\r\n  let loading = useSelector((state) => getVegetableAPIloadingTime(state));\r\n  const [tableBodyData, setTableBodyData] = useState([]);\r\n  let dispatch = useDispatch();\r\n  //! function sẽ load những rau trồng đc gửi lên để admin duyệt\r\n  function updateVegetableData() {\r\n    let hava = [];\r\n    dispatch(getAllVegetableUnapproved()).then((response) => {\r\n      if (Object.keys(response.payload.data).length !== 0) {\r\n        hava = [...prepareVegetableData(response.payload.data)];\r\n        console.log(\"table đây ngày29/01= \", hava);\r\n        dispatch(setNotificationCount(hava.length));\r\n        setTableBodyData(hava);\r\n      } else {\r\n        hava = [...prepareVegetableData(response.payload.data)];\r\n        console.log(\"table đây= \", hava);\r\n        dispatch(setNotificationCount(0));\r\n        setTableBodyData(hava);\r\n      }\r\n    });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    updateVegetableData();\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <LoadingPopUp visible={loading} length=\"200px\" />\r\n      <div className=\"content\">\r\n        <MaterialButton\r\n          variant=\"contained\"\r\n          color=\"info\"\r\n          size=\"large\"\r\n          style={{ marginRight: 5 }}\r\n          onClick={() => {\r\n            updateVegetableData();\r\n          }}\r\n        >\r\n          Cập nhật\r\n        </MaterialButton>\r\n        <Grid fluid style={{ margin: 0, padding: 0 }}>\r\n          <CardNoFooter\r\n            titlet=\"Account list\"\r\n            content={\r\n              <NormalTable\r\n                headCells={materialHeader}\r\n                bodyData={tableBodyData}\r\n                notShowing={[variable.islock]}\r\n                actionbuttonlist={[\"remove\"]}\r\n              />\r\n            }\r\n          />\r\n        </Grid>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default White;\r\n"]},"metadata":{},"sourceType":"module"}