{"ast":null,"code":"var _jsxFileName = \"E:\\\\light-bootstrap-dashboard-react-master\\\\src\\\\api\\\\APICall.js\";\nimport { getALL } from \"redux/index\";\nimport * as variable from \"variables/Variables\";\nimport { SuccessPopUp, FailPopUp } from \"components/Modal/Modal\";\nimport React from \"react\";\n\nfunction autoCloseSuccessModal(successVisible) {\n  successVisible = true;\n  setTimeout(function () {\n    successVisible = false;\n  }, 2000);\n}\n\nexport const fetchPostList = async dispatch => {\n  let response; // * Bắt try catch ở đây là để tránh lỗi crash ứng dụng lỡ như trong quá trình dispatch đến getAll bị lỗi\n\n  try {\n    response = await dispatch(getALL()); // console.log(\"result= \", response);\n    // * Nếu có sử dụng gì ở local này thì ta cứ lấy response ra mà dùng\n  } catch (errpr) {\n    console.log(\"Failed to fetch product list: \", errpr);\n  }\n\n  return response;\n};\nexport const HandleResult = props => {\n  console.log(\"ket qua\", props.result);\n  const requestStatus = props.result.meta.requestStatus;\n  console.log(\"status\", requestStatus);\n  const successVisible = false;\n  const failVisible = false;\n  var success = /*#__PURE__*/React.createElement(SuccessPopUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  });\n\n  switch (requestStatus) {\n    case variable.fulfilled:\n      autoCloseSuccessModal();\n      success = /*#__PURE__*/React.createElement(SuccessPopUp, {\n        visible: true,\n        length: \"200px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      });\n      break;\n\n    case variable.error:\n      break;\n\n    case variable.pending:\n      break;\n  }\n\n  return success;\n};","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/api/APICall.js"],"names":["getALL","variable","SuccessPopUp","FailPopUp","React","autoCloseSuccessModal","successVisible","setTimeout","fetchPostList","dispatch","response","errpr","console","log","HandleResult","props","result","requestStatus","meta","failVisible","success","fulfilled","error","pending"],"mappings":";AAAA,SAASA,MAAT,QAAuB,aAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,qBAA1B;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,wBAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,qBAAT,CAA+BC,cAA/B,EAA+C;AAC3CA,EAAAA,cAAc,GAAC,IAAf;AACFC,EAAAA,UAAU,CAAC,YAAY;AACrBD,IAAAA,cAAc,GAAC,KAAf;AACD,GAFS,EAEP,IAFO,CAAV;AAGD;;AACD,OAAO,MAAME,aAAa,GAAG,MAAOC,QAAP,IAAoB;AAC/C,MAAIC,QAAJ,CAD+C,CAE/C;;AACA,MAAI;AACFA,IAAAA,QAAQ,GAAG,MAAMD,QAAQ,CAACT,MAAM,EAAP,CAAzB,CADE,CAEF;AAEA;AACD,GALD,CAKE,OAAOW,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,KAA9C;AACD;;AACD,SAAOD,QAAP;AACD,CAZM;AAcP,OAAO,MAAMI,YAAY,GAAIC,KAAD,IAAW;AACrCH,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,KAAK,CAACC,MAA7B;AACA,QAAMC,aAAa,GAAGF,KAAK,CAACC,MAAN,CAAaE,IAAb,CAAkBD,aAAxC;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,aAAtB;AACA,QAAMX,cAAc,GAAG,KAAvB;AACA,QAAMa,WAAW,GAAG,KAApB;AACA,MAAIC,OAAO,gBAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd;;AACA,UAAQH,aAAR;AACE,SAAKhB,QAAQ,CAACoB,SAAd;AACEhB,MAAAA,qBAAqB;AACrBe,MAAAA,OAAO,gBAAG,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,IAAvB;AAA6B,QAAA,MAAM,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACA;;AACF,SAAKnB,QAAQ,CAACqB,KAAd;AACE;;AACF,SAAKrB,QAAQ,CAACsB,OAAd;AACE;AARJ;;AAUA,SAAOH,OAAP;AACD,CAlBM","sourcesContent":["import { getALL } from \"redux/index\";\r\nimport * as variable from \"variables/Variables\";\r\nimport { SuccessPopUp, FailPopUp } from \"components/Modal/Modal\";\r\nimport React from \"react\";\r\n\r\nfunction autoCloseSuccessModal(successVisible) {\r\n    successVisible=true;\r\n  setTimeout(function () {\r\n    successVisible=false;\r\n  }, 2000);\r\n}\r\nexport const fetchPostList = async (dispatch) => {\r\n  let response;\r\n  // * Bắt try catch ở đây là để tránh lỗi crash ứng dụng lỡ như trong quá trình dispatch đến getAll bị lỗi\r\n  try {\r\n    response = await dispatch(getALL());\r\n    // console.log(\"result= \", response);\r\n\r\n    // * Nếu có sử dụng gì ở local này thì ta cứ lấy response ra mà dùng\r\n  } catch (errpr) {\r\n    console.log(\"Failed to fetch product list: \", errpr);\r\n  }\r\n  return response;\r\n};\r\n\r\nexport const HandleResult = (props) => {\r\n  console.log(\"ket qua\", props.result);\r\n  const requestStatus = props.result.meta.requestStatus;\r\n  console.log(\"status\", requestStatus);\r\n  const successVisible = false;\r\n  const failVisible = false;\r\n  var success = <SuccessPopUp />;\r\n  switch (requestStatus) {\r\n    case variable.fulfilled:\r\n      autoCloseSuccessModal()\r\n      success = <SuccessPopUp visible={true} length=\"200px\" />;\r\n      break;\r\n    case variable.error:\r\n      break;\r\n    case variable.pending:\r\n      break;\r\n  }\r\n  return success;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}