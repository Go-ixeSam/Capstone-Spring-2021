{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sam\\\\Documents\\\\GitHub\\\\Capstone-Spring-2021\\\\src\\\\views\\\\White.jsx\";\nimport { LoadingPopUp, SuccessPopUp } from \"components/Modal/Modal\";\nimport NormalTable from \"components/SuperTable/NormalTable\";\nimport React, { useState } from \"react\";\nimport { Grid, Col, Row } from \"react-bootstrap\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllVegetableUnapproved, setNotificationCount, setVisible } from \"redux/index\";\nimport * as variable from \"variables/Variables\";\nimport { FormControll } from \"components/Formik/FormikControl\";\nimport EnhancedTable from \"components/SuperTable/NoCustomeTable\";\nimport { prepareVegetableData } from \"util/Helper\";\nimport { CardNoFooter, Card } from \"../components/Card/Card\";\nimport { MaterialButton } from \"../components/CustomButton/MaterialButton\";\nimport { getPostTableHeader, getVegetableAPIloadingTime, getTestTable, getShowDetail, getSeletedVegetable } from \"../redux/Selector/Selectors\";\nimport { ControlLabel, FormControl, FormGroup, HelpBlock } from \"react-bootstrap\";\nimport { setSelectedVegetable } from \"redux/Vegetable/VegetableSlice\";\n\nfunction White() {\n  let loading = useSelector(state => getVegetableAPIloadingTime(state));\n  const seletedVegetable = useSelector(state => getSeletedVegetable(state));\n  let [usesInfo, setUses] = React.useState(seletedVegetable[variable.uses]);\n  let [desInfo, setDes] = React.useState(seletedVegetable[variable.description]);\n  let [successVisible, setSuccessVisible] = React.useState(false); // dùng để hiện succes popup\n\n  const [tableBodyData, setTableBodyData] = useState([]);\n  let dispatch = useDispatch();\n  const titleStyle = {\n    fontWeight: \"bold\",\n    marginTop: 10\n  };\n\n  const submitUpdate = event => {\n    event.preventDefault(); // console.log(\"new value= \", values);\n\n    autoCloseSuccessModal();\n  };\n\n  function autoCloseSuccessModal() {\n    setSuccessVisible(true);\n    setTimeout(function () {\n      setSuccessVisible(false);\n    }, 2000);\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      uses: seletedVegetable[variable.uses],\n      des: seletedVegetable[variable.description]\n    },\n    validationSchema: {},\n    enableReinitialize: true,\n    onSubmit: (values, action) => {\n      console.log(\"new value= \", values);\n      autoCloseSuccessModal();\n    }\n  }); //! function sẽ load những rau trồng đc gửi lên để admin duyệt\n\n  function updateVegetableData() {\n    let hava = [];\n    dispatch(getAllVegetableUnapproved()).then(response => {\n      if (Object.keys(response.payload.data).length !== 0) {\n        hava = [...prepareVegetableData(response.payload.data)];\n        console.log(\"table đây ngày29/01= \", hava);\n        dispatch(setNotificationCount(hava.length));\n        setTableBodyData(hava);\n      } else {\n        hava = [...prepareVegetableData(response.payload.data)];\n        console.log(\"table đây= \", hava);\n        dispatch(setNotificationCount(0));\n        setTableBodyData(hava);\n      }\n    });\n  } //   React.useEffect(() => {\n  // updateVegetableData();\n  //   }, []);\n\n\n  const handleChange = event => {\n    console.log(event);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LoadingPopUp, {\n    visible: loading,\n    length: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SuccessPopUp, {\n    visible: successVisible,\n    length: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    variant: \"contained\",\n    color: \"info\",\n    size: \"large\",\n    style: {\n      marginRight: 5\n    },\n    onClick: () => {\n      updateVegetableData();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"C\\u1EADp nh\\u1EADt\"), /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    style: {\n      margin: 0,\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardNoFooter, {\n    titlet: \"Vegetable list\",\n    content: /*#__PURE__*/React.createElement(EnhancedTable, {\n      actionbuttonlist: [\"read\", \"remove\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Th\\xF4ng tin chi ti\\u1EBFt\",\n    content:\n    /*#__PURE__*/\n    // <div style={{visibility:showDetail}}>\n    React.createElement(\"div\", {\n      style: {\n        visibility: \"visible\",\n        margin: 0,\n        padding: 0,\n        boxSizing: \"border-box\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        border: \"1px solid grey\",\n        padding: 5\n      },\n      width: 200,\n      src: seletedVegetable[variable.vegetableImage],\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: titleStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, \"T\\xEAn rau\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: () => submitUpdate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: titleStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 23\n      }\n    }, \"C\\xF4ng d\\u1EE5ng\"), /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"formControlUese\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      style: {\n        height: 100\n      },\n      name: \"uses\",\n      componentClass: \"textarea\",\n      onChange: event => handleChange(event),\n      value: \"usesInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      style: titleStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }\n    }, \"M\\xF4 t\\u1EA3\"), /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"formControlDes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      style: {\n        height: 150\n      },\n      name: \"des\",\n      componentClass: \"textarea\",\n      onChange: event => handleChange(event) // value={seletedVegetable[variable.description]}\n      ,\n      value: desInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(MaterialButton, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"info\",\n      size: \"large\" // click={()=>submitUpdate()}\n      ,\n      style: {\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 23\n      }\n    }, \"C\\u1EADp nh\\u1EADt th\\xF4ng tin\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default White;","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/views/White.jsx"],"names":["LoadingPopUp","SuccessPopUp","NormalTable","React","useState","Grid","Col","Row","useFormik","useDispatch","useSelector","getAllVegetableUnapproved","setNotificationCount","setVisible","variable","FormControll","EnhancedTable","prepareVegetableData","CardNoFooter","Card","MaterialButton","getPostTableHeader","getVegetableAPIloadingTime","getTestTable","getShowDetail","getSeletedVegetable","ControlLabel","FormControl","FormGroup","HelpBlock","setSelectedVegetable","White","loading","state","seletedVegetable","usesInfo","setUses","uses","desInfo","setDes","description","successVisible","setSuccessVisible","tableBodyData","setTableBodyData","dispatch","titleStyle","fontWeight","marginTop","submitUpdate","event","preventDefault","autoCloseSuccessModal","setTimeout","formik","initialValues","des","validationSchema","enableReinitialize","onSubmit","values","action","console","log","updateVegetableData","hava","then","response","Object","keys","payload","data","length","handleChange","marginRight","margin","padding","visibility","boxSizing","border","vegetableImage","color","height"],"mappings":"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","sourcesContent":["import { LoadingPopUp, SuccessPopUp } from \"components/Modal/Modal\";\r\nimport NormalTable from \"components/SuperTable/NormalTable\";\r\nimport React, { useState } from \"react\";\r\nimport { Grid, Col, Row } from \"react-bootstrap\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport { useFormik } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getAllVegetableUnapproved,\r\n  setNotificationCount,\r\n  setVisible,\r\n} from \"redux/index\";\r\nimport * as variable from \"variables/Variables\";\r\n\r\nimport { FormControll } from \"components/Formik/FormikControl\";\r\nimport EnhancedTable from \"components/SuperTable/NoCustomeTable\";\r\nimport { prepareVegetableData } from \"util/Helper\";\r\nimport { CardNoFooter, Card } from \"../components/Card/Card\";\r\nimport { MaterialButton } from \"../components/CustomButton/MaterialButton\";\r\nimport {\r\n  getPostTableHeader,\r\n  getVegetableAPIloadingTime,\r\n  getTestTable,\r\n  getShowDetail,\r\n  getSeletedVegetable,\r\n} from \"../redux/Selector/Selectors\";\r\nimport {\r\n  ControlLabel,\r\n  FormControl,\r\n  FormGroup,\r\n  HelpBlock,\r\n} from \"react-bootstrap\";\r\nimport { setSelectedVegetable } from \"redux/Vegetable/VegetableSlice\";\r\n\r\nfunction White() {\r\n  let loading = useSelector((state) => getVegetableAPIloadingTime(state));\r\n  const seletedVegetable = useSelector((state) => getSeletedVegetable(state));\r\n  let [usesInfo, setUses] = React.useState(seletedVegetable[variable.uses]);\r\n  let [desInfo, setDes] = React.useState(\r\n    seletedVegetable[variable.description]\r\n  );\r\n  let [successVisible, setSuccessVisible] = React.useState(false); // dùng để hiện succes popup\r\n  const [tableBodyData, setTableBodyData] = useState([]);\r\n  let dispatch = useDispatch();\r\n  const titleStyle = { fontWeight: \"bold\", marginTop: 10 };\r\n\r\n  const submitUpdate = (event) => {\r\n    event.preventDefault();\r\n    // console.log(\"new value= \", values);\r\n    autoCloseSuccessModal();\r\n  };\r\n  function autoCloseSuccessModal() {\r\n    setSuccessVisible(true);\r\n    setTimeout(function () {\r\n      setSuccessVisible(false);\r\n    }, 2000);\r\n  }\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      uses: seletedVegetable[variable.uses],\r\n      des: seletedVegetable[variable.description],\r\n    },\r\n    validationSchema: {},\r\n    enableReinitialize: true,\r\n    onSubmit: (values, action) => {\r\n      console.log(\"new value= \", values);\r\n      autoCloseSuccessModal();\r\n    },\r\n  });\r\n\r\n  //! function sẽ load những rau trồng đc gửi lên để admin duyệt\r\n  function updateVegetableData() {\r\n    let hava = [];\r\n    dispatch(getAllVegetableUnapproved()).then((response) => {\r\n      if (Object.keys(response.payload.data).length !== 0) {\r\n        hava = [...prepareVegetableData(response.payload.data)];\r\n        console.log(\"table đây ngày29/01= \", hava);\r\n        dispatch(setNotificationCount(hava.length));\r\n        setTableBodyData(hava);\r\n      } else {\r\n        hava = [...prepareVegetableData(response.payload.data)];\r\n        console.log(\"table đây= \", hava);\r\n        dispatch(setNotificationCount(0));\r\n        setTableBodyData(hava);\r\n      }\r\n    });\r\n  }\r\n\r\n  //   React.useEffect(() => {\r\n  // updateVegetableData();\r\n  //   }, []);\r\n  const handleChange = (event) => {\r\n    console.log(event);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <LoadingPopUp visible={loading} length=\"200px\" />\r\n      <SuccessPopUp visible={successVisible} length=\"200px\" />\r\n      <div className=\"content\">\r\n        <MaterialButton\r\n          variant=\"contained\"\r\n          color=\"info\"\r\n          size=\"large\"\r\n          style={{ marginRight: 5 }}\r\n          onClick={() => {\r\n            updateVegetableData();\r\n          }}\r\n        >\r\n          Cập nhật\r\n        </MaterialButton>\r\n        <Grid fluid style={{ margin: 0, padding: 0 }}>\r\n          <Row>\r\n            <Col md={6}>\r\n              <CardNoFooter\r\n                titlet=\"Vegetable list\"\r\n                content={\r\n                  <EnhancedTable actionbuttonlist={[\"read\", \"remove\"]} />\r\n                }\r\n              />\r\n            </Col>\r\n            <Col md={6}>\r\n              <Card\r\n                title=\"Thông tin chi tiết\"\r\n                content={\r\n                  // <div style={{visibility:showDetail}}>\r\n                  <div\r\n                    style={{\r\n                      visibility: \"visible\",\r\n                      margin: 0,\r\n                      padding: 0,\r\n                      boxSizing: \"border-box\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      style={{ border: \"1px solid grey\", padding: 5 }}\r\n                      width={200}\r\n                      src={seletedVegetable[variable.vegetableImage]}\r\n                      height={200}\r\n                    />\r\n                    <p style={titleStyle}>Tên rau</p>\r\n                    <p style={{ color: \"green\" }}></p>\r\n                    <form onSubmit={() => submitUpdate()}>\r\n                      <p style={titleStyle}>Công dụng</p>\r\n                      <FormGroup controlId=\"formControlUese\">\r\n                        <FormControl\r\n                          style={{ height: 100 }}\r\n                          name=\"uses\"\r\n                          componentClass=\"textarea\"\r\n                          onChange={(event) => handleChange(event)}\r\n                          value={\"usesInfo\"}\r\n                        />\r\n                      </FormGroup>\r\n                      <p style={titleStyle}>Mô tả</p>\r\n                      <FormGroup controlId=\"formControlDes\">\r\n                        <FormControl\r\n                          style={{ height: 150 }}\r\n                          name={\"des\"}\r\n                          componentClass=\"textarea\"\r\n                          onChange={(event) => handleChange(event)}\r\n                          // value={seletedVegetable[variable.description]}\r\n                          value={desInfo}\r\n                        />\r\n                      </FormGroup>\r\n                      <MaterialButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"info\"\r\n                        size=\"large\"\r\n                        // click={()=>submitUpdate()}\r\n                        style={{ marginRight: 5 }}\r\n                      >\r\n                        Cập nhật thông tin\r\n                      </MaterialButton>\r\n                    </form>\r\n                  </div>\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default White;\r\n"]},"metadata":{},"sourceType":"module"}