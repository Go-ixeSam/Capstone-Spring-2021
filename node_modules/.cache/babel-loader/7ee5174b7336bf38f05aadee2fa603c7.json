{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sam\\\\Documents\\\\GitHub\\\\Capstone-Spring-2021\\\\src\\\\views\\\\White.jsx\";\nimport { LoadingPopUp } from \"components/Modal/Modal\";\nimport NormalTable from \"components/SuperTable/NormalTable\";\nimport React, { useState } from \"react\";\nimport { Grid, Col, Row } from \"react-bootstrap\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllVegetableUnapproved, setNotificationCount, setVisible } from \"redux/index\";\nimport { FormControll } from \"components/Formik/FormikControl\";\nimport EnhancedTable from \"components/SuperTable/NoCustomeTable\";\nimport { prepareVegetableData } from \"util/Helper\";\nimport { CardNoFooter, Card } from \"../components/Card/Card\";\nimport { MaterialButton } from \"../components/CustomButton/MaterialButton\";\nimport { getPostTableHeader, getVegetableAPIloadingTime, getTestTable, getShowDetail } from \"../redux/Selector/Selectors\";\nimport * as variable from \"../variables/Variables\";\n\nfunction White() {\n  let materialHeader = useSelector(state => getPostTableHeader(state));\n  let testHeader = useSelector(state => getTestTable(state));\n  let loading = useSelector(state => getVegetableAPIloadingTime(state));\n  const [tableBodyData, setTableBodyData] = useState([]);\n  const showDetail = useSelector(state => getShowDetail(state));\n  let dispatch = useDispatch();\n  const titleStyle = {\n    color: \"green\",\n    fontWeight: \"bold\",\n    marginTop: 10\n  };\n\n  const submitUpdate = () => {};\n\n  const formik = useFormik({\n    initialValues: {\n      uses: \"\",\n      des: \"\"\n    },\n    validationSchema: {},\n    onSubmit: submitUpdate\n  }); //! function sẽ load những rau trồng đc gửi lên để admin duyệt\n\n  function updateVegetableData() {\n    let hava = [];\n    dispatch(getAllVegetableUnapproved()).then(response => {\n      if (Object.keys(response.payload.data).length !== 0) {\n        hava = [...prepareVegetableData(response.payload.data)];\n        console.log(\"table đây ngày29/01= \", hava);\n        dispatch(setNotificationCount(hava.length));\n        setTableBodyData(hava);\n      } else {\n        hava = [...prepareVegetableData(response.payload.data)];\n        console.log(\"table đây= \", hava);\n        dispatch(setNotificationCount(0));\n        setTableBodyData(hava);\n      }\n    });\n  } //   React.useEffect(() => {\n  // updateVegetableData();\n  //   }, []);\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LoadingPopUp, {\n    visible: loading,\n    length: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    variant: \"contained\",\n    color: \"info\",\n    size: \"large\",\n    style: {\n      marginRight: 5\n    },\n    onClick: () => {\n      updateVegetableData();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"C\\u1EADp nh\\u1EADt\"), /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    style: {\n      margin: 0,\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardNoFooter, {\n    titlet: \"Vegetable list\",\n    content: /*#__PURE__*/React.createElement(EnhancedTable, {\n      actionbuttonlist: [\"read\", \"remove\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Th\\xF4ng tin chi ti\\u1EBFt\",\n    content:\n    /*#__PURE__*/\n    // <div style={{visibility:showDetail}}>\n    React.createElement(\"div\", {\n      style: {\n        visibility: \"visible\",\n        margin: 0,\n        padding: 0,\n        boxSizing: \"border-box\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        border: \"1px solid grey\",\n        padding: 5\n      },\n      width: 200,\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: titleStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, \"T\\xEAn rau\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, \"H\\xFAng qu\\u1EBF\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: formik.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: titleStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 23\n      }\n    }, \"C\\xF4ng d\\u1EE5ng\"), /*#__PURE__*/React.createElement(FormControll, {\n      control: \"textarea\" // label={labeltext}\n      ,\n      name: \"uses\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: titleStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 23\n      }\n    }, \"M\\xF4 t\\u1EA3\"), /*#__PURE__*/React.createElement(FormControll, {\n      control: \"textarea\",\n      name: \"des\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 23\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default White;","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/views/White.jsx"],"names":["LoadingPopUp","NormalTable","React","useState","Grid","Col","Row","useFormik","useDispatch","useSelector","getAllVegetableUnapproved","setNotificationCount","setVisible","FormControll","EnhancedTable","prepareVegetableData","CardNoFooter","Card","MaterialButton","getPostTableHeader","getVegetableAPIloadingTime","getTestTable","getShowDetail","variable","White","materialHeader","state","testHeader","loading","tableBodyData","setTableBodyData","showDetail","dispatch","titleStyle","color","fontWeight","marginTop","submitUpdate","formik","initialValues","uses","des","validationSchema","onSubmit","updateVegetableData","hava","then","response","Object","keys","payload","data","length","console","log","marginRight","margin","padding","visibility","boxSizing","border","handleSubmit"],"mappings":"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","sourcesContent":["import { LoadingPopUp } from \"components/Modal/Modal\";\r\nimport NormalTable from \"components/SuperTable/NormalTable\";\r\nimport React, { useState } from \"react\";\r\nimport { Grid, Col, Row } from \"react-bootstrap\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport { useFormik } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getAllVegetableUnapproved,\r\n  setNotificationCount,\r\n  setVisible,\r\n} from \"redux/index\";\r\nimport { FormControll } from \"components/Formik/FormikControl\";\r\nimport EnhancedTable from \"components/SuperTable/NoCustomeTable\";\r\nimport { prepareVegetableData } from \"util/Helper\";\r\nimport { CardNoFooter, Card } from \"../components/Card/Card\";\r\nimport { MaterialButton } from \"../components/CustomButton/MaterialButton\";\r\nimport {\r\n  getPostTableHeader,\r\n  getVegetableAPIloadingTime,\r\n  getTestTable,\r\n  getShowDetail,\r\n} from \"../redux/Selector/Selectors\";\r\nimport * as variable from \"../variables/Variables\";\r\n\r\nfunction White() {\r\n  let materialHeader = useSelector((state) => getPostTableHeader(state));\r\n  let testHeader = useSelector((state) => getTestTable(state));\r\n  let loading = useSelector((state) => getVegetableAPIloadingTime(state));\r\n  const [tableBodyData, setTableBodyData] = useState([]);\r\n  const showDetail = useSelector((state) => getShowDetail(state));\r\n  let dispatch = useDispatch();\r\n  const titleStyle = { color: \"green\", fontWeight: \"bold\", marginTop: 10 };\r\n  const submitUpdate = () => {};\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      uses: \"\",\r\n      des: \"\",\r\n    },\r\n    validationSchema: {},\r\n    onSubmit: submitUpdate,\r\n  });\r\n\r\n  //! function sẽ load những rau trồng đc gửi lên để admin duyệt\r\n  function updateVegetableData() {\r\n    let hava = [];\r\n    dispatch(getAllVegetableUnapproved()).then((response) => {\r\n      if (Object.keys(response.payload.data).length !== 0) {\r\n        hava = [...prepareVegetableData(response.payload.data)];\r\n        console.log(\"table đây ngày29/01= \", hava);\r\n        dispatch(setNotificationCount(hava.length));\r\n        setTableBodyData(hava);\r\n      } else {\r\n        hava = [...prepareVegetableData(response.payload.data)];\r\n        console.log(\"table đây= \", hava);\r\n        dispatch(setNotificationCount(0));\r\n        setTableBodyData(hava);\r\n      }\r\n    });\r\n  }\r\n\r\n  //   React.useEffect(() => {\r\n  // updateVegetableData();\r\n  //   }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <LoadingPopUp visible={loading} length=\"200px\" />\r\n      <div className=\"content\">\r\n        <MaterialButton\r\n          variant=\"contained\"\r\n          color=\"info\"\r\n          size=\"large\"\r\n          style={{ marginRight: 5 }}\r\n          onClick={() => {\r\n            updateVegetableData();\r\n          }}\r\n        >\r\n          Cập nhật\r\n        </MaterialButton>\r\n        <Grid fluid style={{ margin: 0, padding: 0 }}>\r\n          <Row>\r\n            <Col md={6}>\r\n              <CardNoFooter\r\n                titlet=\"Vegetable list\"\r\n                content={\r\n                  <EnhancedTable actionbuttonlist={[\"read\", \"remove\"]} />\r\n                }\r\n              />\r\n            </Col>\r\n            <Col md={6}>\r\n              <Card\r\n                title=\"Thông tin chi tiết\"\r\n                content={\r\n                  // <div style={{visibility:showDetail}}>\r\n                  <div\r\n                    style={{\r\n                      visibility: \"visible\",\r\n                      margin: 0,\r\n                      padding: 0,\r\n                      boxSizing: \"border-box\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      style={{ border: \"1px solid grey\", padding: 5 }}\r\n                      width={200}\r\n                      height={200}\r\n                    />\r\n                    <p style={titleStyle}>Tên rau</p>\r\n                    <p>Húng quế</p>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                      <p style={titleStyle}>Công dụng</p>\r\n                      <FormControll\r\n                        control={\"textarea\"}\r\n                        // label={labeltext}\r\n                        name={\"uses\"}\r\n                      />\r\n                      <p style={titleStyle}>Mô tả</p>\r\n                      <FormControll control={\"textarea\"} name={\"des\"} />\r\n                    </form>\r\n                  </div>\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default White;\r\n"]},"metadata":{},"sourceType":"module"}