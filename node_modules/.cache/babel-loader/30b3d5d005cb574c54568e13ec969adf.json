{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sam\\\\Documents\\\\GitHub\\\\Capstone-Spring-2021\\\\src\\\\views\\\\Wikipedia.jsx\";\nimport React from \"react\";\nimport { isTemplateMiddleOrTemplateTail } from \"typescript\";\nimport useForceUpdate from \"use-force-update\";\nimport \"./Wiki.css\";\n\nfunction Wikipedia() {\n  // constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //       wikiSearchReturnValues: [],\n  //       wikiSearchTerms: ''\n  //     }\n  //   }\n  const [wikiSearchReturnValues, setWikiSearchReturnValues] = React.useState([]);\n  const [wikiSearchTerms, setWikiSearchTerms] = React.useState(\"\");\n  const forceUpdate = useForceUpdate();\n\n  const useWikiSearchEngine = e => {\n    e.preventDefault(); // this.setState({\n    //   wikiSearchReturnValues: []\n    // });\n\n    setWikiSearchReturnValues([]); // const pointerToThis = this;\n\n    var url = \"https://en.wikipedia.org/w/api.php\";\n    var params = {\n      action: \"query\",\n      list: \"search\",\n      srsearch: wikiSearchTerms,\n      format: \"json\"\n    };\n    url = url + \"?origin=*\";\n    Object.keys(params).forEach(key => {\n      url += \"&\" + key + \"=\" + params[key];\n    });\n    fetch(url).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      // console.log(response);\n      const tmp = [];\n\n      for (var key in response.query.search) {\n        tmp.push({\n          queryResultPageFullURL: \"no link\",\n          queryResultPageID: response.query.search[key].pageid,\n          queryResultPageTitle: response.query.search[key].title,\n          queryResultPageSnippet: response.query.search[key].snippet\n        });\n      }\n\n      setWikiSearchReturnValues(tmp);\n    }).then(function (response) {\n      for (var key2 in wikiSearchReturnValues) {\n        console.log(\"array\", wikiSearchReturnValues);\n        console.log(\"key 2, \", key2); // let page = pointerToThis.state.wikiSearchReturnValues[key2];\n\n        setWikiSearchReturnValues(wikiSearchReturnValues[key2]);\n        let page = wikiSearchReturnValues;\n        let pageID = page.queryResultPageID;\n        let urlForRetrievingPageURLByPageID = `https://en.wikipedia.org/w/api.php?origin=*&action=query&prop=info&pageids=${pageID}&inprop=url&format=json`;\n        fetch(urlForRetrievingPageURLByPageID).then(function (response) {\n          return response.json();\n        }).then(function (response) {\n          page.queryResultPageFullURL = response.query.pages[pageID].fullurl; //   pointerToThis.forceUpdate();\n\n          forceUpdate();\n        });\n      }\n    });\n  };\n\n  const changeWikiSearchTerms = e => {\n    // this.setState({\n    //   WikiSearchTerms: e.target.value,\n    // });\n    setWikiSearchTerms(e.target.value);\n  };\n\n  let wikiSearchResults = []; // console.log(this.state.wikiSearchReturnValues);\n\n  for (var key3 in wikiSearchReturnValues) {\n    wikiSearchResults.push( /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchResultDiv\",\n      key: key3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: wikiSearchReturnValues[key3].queryResultPageFullURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, wikiSearchReturnValues[key3].queryResultPageTitle)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"description\",\n      dangerouslySetInnerHTML: {\n        __html: wikiSearchReturnValues[key3].queryResultPageSnippet\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    })));\n  }\n\n  console.log(wikiSearchResults);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, \"Wikipedia Search Engine\"), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: wikiSearchTerms || \"\",\n    onChange: changeWikiSearchTerms,\n    placeholder: \"Search Wikipedia Articles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: useWikiSearchEngine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Search\")), wikiSearchResults);\n}\n\nexport default Wikipedia;","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/views/Wikipedia.jsx"],"names":["React","isTemplateMiddleOrTemplateTail","useForceUpdate","Wikipedia","wikiSearchReturnValues","setWikiSearchReturnValues","useState","wikiSearchTerms","setWikiSearchTerms","forceUpdate","useWikiSearchEngine","e","preventDefault","url","params","action","list","srsearch","format","Object","keys","forEach","key","fetch","then","response","json","tmp","query","search","push","queryResultPageFullURL","queryResultPageID","pageid","queryResultPageTitle","title","queryResultPageSnippet","snippet","key2","console","log","page","pageID","urlForRetrievingPageURLByPageID","pages","fullurl","changeWikiSearchTerms","target","value","wikiSearchResults","key3","__html"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { isTemplateMiddleOrTemplateTail } from \"typescript\";\r\nimport useForceUpdate from \"use-force-update\";\r\nimport \"./Wiki.css\";\r\n\r\nfunction Wikipedia() {\r\n  // constructor(props) {\r\n  //     super(props);\r\n  //     this.state = {\r\n  //       wikiSearchReturnValues: [],\r\n  //       wikiSearchTerms: ''\r\n  //     }\r\n  //   }\r\n  const [wikiSearchReturnValues, setWikiSearchReturnValues] = React.useState(\r\n    []\r\n  );\r\n  const [wikiSearchTerms, setWikiSearchTerms] = React.useState(\"\");\r\n  const forceUpdate = useForceUpdate();\r\n  const useWikiSearchEngine = (e) => {\r\n    e.preventDefault();\r\n\r\n    // this.setState({\r\n    //   wikiSearchReturnValues: []\r\n    // });\r\n    setWikiSearchReturnValues([]);\r\n\r\n    // const pointerToThis = this;\r\n\r\n    var url = \"https://en.wikipedia.org/w/api.php\";\r\n\r\n    var params = {\r\n      action: \"query\",\r\n      list: \"search\",\r\n      srsearch: wikiSearchTerms,\r\n      format: \"json\",\r\n    };\r\n\r\n    url = url + \"?origin=*\";\r\n    Object.keys(params).forEach((key) => {\r\n      url += \"&\" + key + \"=\" + params[key];\r\n    });\r\n\r\n    fetch(url)\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(function (response) {\r\n        // console.log(response);\r\n        const tmp=[]\r\n        for (var key in response.query.search) {\r\n          tmp.push({\r\n            queryResultPageFullURL: \"no link\",\r\n            queryResultPageID: response.query.search[key].pageid,\r\n            queryResultPageTitle: response.query.search[key].title,\r\n            queryResultPageSnippet: response.query.search[key].snippet,\r\n          });\r\n        }\r\n        setWikiSearchReturnValues(tmp)\r\n      })\r\n      .then(function (response) {\r\n        for (var key2 in wikiSearchReturnValues) {\r\n          console.log(\"array\",wikiSearchReturnValues);\r\n          console.log(\"key 2, \",key2)\r\n          // let page = pointerToThis.state.wikiSearchReturnValues[key2];\r\n          setWikiSearchReturnValues(wikiSearchReturnValues[key2])\r\n          let page = wikiSearchReturnValues;\r\n          let pageID = page.queryResultPageID;\r\n          let urlForRetrievingPageURLByPageID = `https://en.wikipedia.org/w/api.php?origin=*&action=query&prop=info&pageids=${pageID}&inprop=url&format=json`;\r\n\r\n          fetch(urlForRetrievingPageURLByPageID)\r\n            .then(function (response) {\r\n              return response.json();\r\n            })\r\n            .then(function (response) {\r\n              page.queryResultPageFullURL =\r\n                response.query.pages[pageID].fullurl;\r\n\r\n              //   pointerToThis.forceUpdate();\r\n              forceUpdate();\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  const changeWikiSearchTerms = (e) => {\r\n    // this.setState({\r\n    //   WikiSearchTerms: e.target.value,\r\n    // });\r\n    setWikiSearchTerms(e.target.value);\r\n  };\r\n\r\n  let wikiSearchResults = [];\r\n  // console.log(this.state.wikiSearchReturnValues);\r\n\r\n  for (var key3 in wikiSearchReturnValues) {\r\n    wikiSearchResults.push(\r\n      <div className=\"searchResultDiv\" key={key3}>\r\n        <h3>\r\n          <a href={wikiSearchReturnValues[key3].queryResultPageFullURL}>\r\n            {wikiSearchReturnValues[key3].queryResultPageTitle}\r\n          </a>\r\n        </h3>\r\n        {/* <span className='link'><a href={.wikiSearchReturnValues[key3].queryResultPageFullURL}>{this.state.wikiSearchReturnValues[key3].queryResultPageFullURL}</a></span> */}\r\n        <p\r\n          className=\"description\"\r\n          dangerouslySetInnerHTML={{\r\n            __html: wikiSearchReturnValues[key3].queryResultPageSnippet,\r\n          }}\r\n        ></p>\r\n      </div>\r\n    );\r\n  }\r\n  console.log(wikiSearchResults);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Wikipedia Search Engine</h1>\r\n      <form action=\"\">\r\n        <input\r\n          type=\"text\"\r\n          value={wikiSearchTerms || \"\"}\r\n          onChange={changeWikiSearchTerms}\r\n          placeholder=\"Search Wikipedia Articles\"\r\n        />\r\n        <button type=\"submit\" onClick={useWikiSearchEngine}>\r\n          Search\r\n        </button>\r\n      </form>\r\n      {wikiSearchResults}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wikipedia;\r\n"]},"metadata":{},"sourceType":"module"}