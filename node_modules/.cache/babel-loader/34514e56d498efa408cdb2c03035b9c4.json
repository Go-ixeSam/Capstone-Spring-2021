{"ast":null,"code":"var _jsxFileName = \"E:\\\\light-bootstrap-dashboard-react-master\\\\src\\\\components\\\\SuperTable\\\\NormalTable.js\";\nimport { faLock, faLockOpen } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Box, TableFooter, Checkbox } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport { ShowPopUp, SuccessPopUp, LoadingPopUp } from \"components/Modal/Modal\";\nimport { Col, Grid, Row } from \"react-bootstrap\";\nimport { CardNoFooter } from \"components/Card/Card\";\nimport { MaterialButton } from \"components/CustomButton/MaterialButton\";\nimport { prepareVegetableData } from \"util/Helper\";\nimport { setVisible, isAccept, getAllVegetableUnapproved, decreaseNotificationCount, setSelectedItem } from \"redux/index\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport clsx from \"clsx\";\nimport { useFormik } from \"formik\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { DeleteButton, CheckCircleButton, CancelButton } from \"../../components/CustomButton/CustomButton\";\nimport SearchOption from \"../../components/FilterOption/SearchOption/SearchBar\";\nimport { getLocked, removeAdvanceRecordSelected } from \"../../redux\";\nimport { getAdvanceData, getAdvanceDataByNameSearch, removeAdvanceRecord, getSelectedItem, getModalVisible } from \"../../redux/Selector/Selectors\";\nimport * as variable from \"../../variables/Variables\";\nimport EnhancedTableHead from \"../SuperTable/Header/AdvanceHeader\";\nimport { StyledTableCell, StyledTableCell17px } from \"./StyledCell\";\nimport { StyledTableRow } from \"./StyledRow\";\nimport ActionButton from \"components/SuperTable/ActionButton\";\nconst normalPElement = {\n  fontSize: 14,\n  margin: 0\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === \"light\" ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: \"1 1 100%\"\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const {\n    numSelected\n  } = props;\n  return /*#__PURE__*/React.createElement(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, numSelected > 0 ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, numSelected, \" selected\") : /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    id: \"tableTitle\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"Nutrition\"), numSelected > 0 ? /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }))) : /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Filter list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"filter list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FilterListIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    \"& .MuiSelect-root\": {\n      fontSize: 14,\n      margin: 0\n    }\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    // fontSize:14,\n    minWidth: 750,\n    borderCollapse: \"collapse\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  }\n}));\nexport default function NormalTable(props) {\n  const classes = useStyles();\n  let visible = useSelector(state => getModalVisible(state)); // ! row này sẽ đại diện cho dữ liệu lấy trực tiếp từ store (global)\n\n  const actionButtonList = props.actionbuttonlist; // * cái row ở bên store truyền từ bên component vào\n\n  let [rows, setRows] = useState(props.bodyData);\n  const dispatch = useDispatch();\n  let history = useHistory(); // ! history object\n  // * Dùng để đánh dấu account đang bị lock\n\n  const [isLock, setIsLock] = React.useState(0);\n  React.useEffect(() => {\n    setRows(props.bodyData);\n  }, [props.bodyData]); //* Dùng để thông báo rằng những field ko cần phải show ở table\n\n  const {\n    headCells\n  } = props;\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState([variable.negativeCommendCount]);\n  const [selected, setSelected] = React.useState([]);\n  const [selectedForStore, setSelectedForStore] = React.useState([]); // const selectedForStore = useSelector((state) => getSelectedItem(state));\n\n  const removeRows = useSelector(state => removeAdvanceRecord(state, selected));\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  }; //! tam thoi chua dung den all click\n\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      return;\n    }\n  }; // ! Hàm này sẽ nhận name của cái row đc click và truyền đến trang edit\n  // const handleEdit = (selectedRowName) => {\n  //   console.log(\"user role=\", userRole);\n  //   if (userRole == variable.fleetManagerRole) {\n  //     history.push(variable.fleetmanager + `/truckform/:name${selectedRowName}`);\n  //     history.push({\n  //       pathname: variable.fleetmanager + \"/truckform\",\n  //       search: `?name=${selectedRowName}`,\n  //     });\n  //   }\n  // };\n\n  /**\r\n   * ! row sẽ tượng trưng cái row đc click\r\n   * * Cái này chỉ là chọn đc những cái row đc click thôi,\r\n   * * Muốn nó hiện màu ở checkbox còn phải, thay đổi ở chỗ\r\n   * * này nữa: const isItemSelected = isSelected(row.ID);\r\n   * @param {*} event\r\n   * @param {*} row\r\n   */\n\n\n  const handleClick = (event, row) => {\n    //* row đc click sẽ dựa theo ID của nó\n    const {\n      ID,\n      vegetableName,\n      vegetableImage\n    } = row;\n    const item = {\n      id: ID,\n      image: vegetableImage,\n      name: vegetableName\n    }; // ! index của cái item đc chọn\n\n    const selectedIndex = selected.indexOf(ID);\n    let newSelected = [];\n    let newSelectedForStore = []; //! list dành riêng cho store\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, ID);\n      newSelectedForStore = newSelectedForStore.concat(selectedForStore, item);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n      newSelectedForStore = newSelectedForStore.concat(selectedForStore.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n      newSelectedForStore = newSelectedForStore.concat(selectedForStore.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      newSelectedForStore = newSelectedForStore.concat(selectedForStore.concat(selectedForStore.slice(0, selectedIndex), selectedForStore.slice(selectedIndex + 1)));\n    } // ! Ở chỗ này là ta sẽ có đc 1 list những item đc check\n\n\n    setSelected(newSelected); //! tạo 1 list những item dc chọn ở store để hiện lên popup\n\n    setSelectedForStore(newSelectedForStore);\n    console.log(newSelected, \" Đây là selected for store: \", newSelectedForStore);\n  };\n\n  const deleteRow = () => {\n    console.log(\"Những row đc lựa chọn: \", selected);\n    dispatch(removeAdvanceRecordSelected(selected)); //! tìm ra những row đc lựa chọng\n  }; //* Hàm hiện cái popup confirm lựa chọn\n\n\n  const showConfirmDialog = () => {\n    dispatch(setVisible(true));\n  };\n  /**\r\n   ** Hàm dùng để duyệt những rau đúng thông tin\r\n   */\n\n\n  const passTest = () => {\n    let tmp = [];\n    console.log(\"Những row đc lựa chọn: \", selected);\n    selected.map(item => {\n      dispatch(isAccept({\n        Id: item,\n        Status: 2\n      })).then(() => {\n        dispatch(getAllVegetableUnapproved()).then(res => {\n          tmp = [...prepareVegetableData(res.payload.data)];\n          setRows(tmp);\n          setSelected([]);\n        });\n      });\n    });\n    dispatch(decreaseNotificationCount(selected.length)); //! sau khi submit thành công thì cập nhật row và load lại list\n  };\n  /**\r\n   ** Hàm dùng để từ chối những rau sai thông tin\r\n   */\n\n\n  const failTest = () => {\n    let tmp = [];\n    console.log(\"Những row đc lựa chọn: \", selected);\n    selected.map(item => {\n      dispatch(isAccept({\n        Id: item,\n        Status: 3\n      })).then(() => {\n        dispatch(getAllVegetableUnapproved()).then(res => {\n          tmp = [...prepareVegetableData(res.payload.data)];\n          setRows(tmp);\n          setSelected([]);\n        });\n      });\n    });\n    dispatch(decreaseNotificationCount(selected.length));\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  const formik = useFormik({\n    initialValues: {\n      searchvalue: \"\",\n      filtervalue: \"Name\"\n    },\n    onSubmit: values => {\n      console.log(\"search value\", values);\n\n      switch (values[\"filtervalue\"]) {\n        case \"Name\":\n          console.log // setRows(getAdvanceDataByNameSearch(rows, values[\"searchvalue\"]))\n          (); // setRows(getAdvanceDataByNameSearch(rows, values[\"searchvalue\"]));\n\n          break;\n\n        case \" Age\":\n          console.log(\"result\", values[\"filtervalue\"]);\n          break;\n      }\n    }\n  });\n\n  const closeModal = () => {\n    dispatch(setVisible(false));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ShowPopUp, {\n    visible: visible,\n    length: \"50%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    style: {\n      margin: 0,\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardNoFooter, {\n    title: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 20\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-background-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"post-text-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 23\n      }\n    }, \"X\\xE1c nh\\u1EADn l\\u1EF1a ch\\u1ECDn\"), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      style: {\n        height: \"max-content\",\n        width: 300\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 25\n      }\n    }, selectedForStore.map(selected => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"flex-end\",\n          margin: \"100\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: selected.image,\n        height: \"50\",\n        width: \"50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          marginLeft: \"20\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 33\n        }\n      }, selected.name));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MaterialButton, {\n      variant: \"contained\",\n      color: \"error\",\n      size: \"large\",\n      style: {\n        marginRight: 5\n      },\n      click: () => closeModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 27\n      }\n    }, \"\\u0110\\xF3ng\"), /*#__PURE__*/React.createElement(MaterialButton, {\n      variant: \"contained\",\n      color: \"success\",\n      size: \"large\",\n      style: {\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 27\n      }\n    }, \"X\\xE1c nh\\u1EADn\"))))))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    height: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: dense ? \"small\" : \"medium\",\n    \"aria-label\": \"enhanced table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    headCells: headCells,\n    actionButtonList: actionButtonList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 15\n    }\n  }, stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row.ID);\n    const labelId = `enhanced-table-checkbox-${index}`;\n    const objectInArr = []; //! cái array này sẽ chứa\n\n    const finalArray = []; //! cái array sau khi đã đc xử lí để hiển thị\n\n    for (const key in row) {\n      objectInArr.push({\n        key: key,\n        value: row[key]\n      });\n    }\n    /**\r\n     * * Phần này giúp cho dữ liệu body luôn hiển thị đúng với header\r\n     */\n\n\n    headCells.map(obj => {\n      objectInArr.map(cell => {\n        if (obj.id == cell.key) {\n          // console.log(\"cell\", cell.key, \" obj\", obj.id);\n          //! phần tử trong mảng final có 2 cái, đặc biệt là numeric giúp cho việc hiển thị giữa dữ liệu chữ và số đẹp hơn ở mỗi row của table\n          finalArray.push({\n            value: cell.value,\n            numeric: obj.numeric,\n            key: cell.key\n          });\n        }\n      });\n    }); // //* kết thúc\n\n    return /*#__PURE__*/React.createElement(StyledTableRow, {\n      hover: true,\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row.Dessert,\n      selected: isItemSelected,\n      onClick: event => handleClick(event, row),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 23\n      }\n    }, actionButtonList.map(obj => {\n      if (obj == \"remove\") {\n        return /*#__PURE__*/React.createElement(StyledTableCell, {\n          padding: \"checkbox\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          checked: isItemSelected,\n          inputProps: {\n            \"aria-labelledby\": labelId\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 33\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(ActionButton, {\n        name: obj,\n        row: row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 34\n        }\n      });\n    }), finalArray.map((obj, index) => {\n      // console.log(\"value\", obj.value);\n      //  ! Nếu value là ảnh thì sẽ  thêm 1 component image và để hiển thị\n      if (obj.key == \"vegetableImage\") {\n        if (obj.numeric == false) {\n          return /*#__PURE__*/React.createElement(StyledTableCell, {\n            component: \"th\",\n            id: labelId,\n            scope: \"row\",\n            padding: \"none\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: obj.value,\n            height: \"80\",\n            width: \"80\",\n            style: {\n              margin: 10\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 35\n            }\n          }));\n        }\n      }\n\n      if (obj.key == \"description\" || obj.key == \"uses\") {\n        return /*#__PURE__*/React.createElement(StyledTableCell, {\n          component: \"th\",\n          id: labelId,\n          scope: \"row\",\n          padding: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n          style: {\n            height: 100,\n            width: 200,\n            padding: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 33\n          }\n        }, obj.value));\n      }\n\n      if (obj.numeric == false) {\n        return /*#__PURE__*/React.createElement(StyledTableCell17px, {\n          component: \"th\",\n          id: labelId,\n          scope: \"row\",\n          padding: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 31\n          }\n        }, obj.value);\n      } else {\n        return /*#__PURE__*/React.createElement(StyledTableCell, {\n          align: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 31\n          }\n        }, obj.value);\n      }\n    }));\n  }), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: (dense ? 33 : 53) * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 3,\n    size: \"small\",\n    style: {\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 21\n    }\n  }, selected.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: 14,\n      margin: 0,\n      paddingLeft: 10,\n      color: variable.materialSecondaryColorMain\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 27\n    }\n  }, selected.length, \" \\u0111\\u01B0\\u1EE3c ch\\u1ECDn\"), /*#__PURE__*/React.createElement(CheckCircleButton, {\n    click: showConfirmDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(CancelButton, {\n    click: showConfirmDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 27\n    }\n  })) : /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      flex: \"1 1 100%\"\n    },\n    variant: \"h6\",\n    id: \"tableTitle\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 27\n    }\n  })))), /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 4,\n    size: \"small\",\n    style: {\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    style: {\n      fontSize: 14\n    },\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows.length,\n    labelRowsPerPage: /*#__PURE__*/React.createElement(\"p\", {\n      style: normalPElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 25\n      }\n    }, \"S\\u1ED1 l\\u01B0\\u1EE3ng rau m\\u1ED7i trang:\"),\n    labelDisplayedRows: ({\n      from,\n      to,\n      count\n    }) => /*#__PURE__*/React.createElement(\"p\", {\n      style: normalPElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 25\n      }\n    }, from, \"-\", to, \" trong \", count !== -1 ? count : \"more than\" + to),\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 21\n    }\n  })))))))));\n}","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/components/SuperTable/NormalTable.js"],"names":["faLock","faLockOpen","FontAwesomeIcon","Box","TableFooter","Checkbox","IconButton","Paper","lighten","makeStyles","Table","ShowPopUp","SuccessPopUp","LoadingPopUp","Col","Grid","Row","CardNoFooter","MaterialButton","prepareVegetableData","setVisible","isAccept","getAllVegetableUnapproved","decreaseNotificationCount","setSelectedItem","TableBody","TableCell","TableContainer","TablePagination","TableRow","Toolbar","Tooltip","Typography","DeleteIcon","FilterListIcon","clsx","useFormik","PerfectScrollbar","PropTypes","React","useState","useDispatch","useSelector","useHistory","styled","DeleteButton","CheckCircleButton","CancelButton","SearchOption","getLocked","removeAdvanceRecordSelected","getAdvanceData","getAdvanceDataByNameSearch","removeAdvanceRecord","getSelectedItem","getModalVisible","variable","EnhancedTableHead","StyledTableCell","StyledTableCell17px","StyledTableRow","ActionButton","normalPElement","fontSize","margin","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","EnhancedTableToolbar","props","classes","numSelected","propTypes","number","isRequired","useStyles","width","paper","marginBottom","table","minWidth","borderCollapse","visuallyHidden","border","clip","height","overflow","padding","position","top","NormalTable","visible","state","actionButtonList","actionbuttonlist","rows","setRows","bodyData","dispatch","history","isLock","setIsLock","useEffect","headCells","setOrder","setOrderBy","negativeCommendCount","selected","setSelected","selectedForStore","setSelectedForStore","removeRows","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","event","property","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","name","handleClick","row","ID","vegetableName","vegetableImage","item","id","image","selectedIndex","indexOf","newSelected","newSelectedForStore","concat","slice","length","console","log","deleteRow","showConfirmDialog","passTest","tmp","Id","Status","then","res","payload","data","failTest","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","handleChangeDense","isSelected","emptyRows","Math","min","formik","initialValues","searchvalue","filtervalue","onSubmit","values","closeModal","display","flexDirection","alignItems","marginLeft","marginTop","marginRight","isItemSelected","labelId","objectInArr","finalArray","key","push","obj","cell","numeric","Dessert","materialSecondaryColorMain","from","to","count"],"mappings":"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","sourcesContent":["import { faLock, faLockOpen } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, TableFooter, Checkbox } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport { ShowPopUp, SuccessPopUp, LoadingPopUp } from \"components/Modal/Modal\";\r\nimport { Col, Grid, Row } from \"react-bootstrap\";\r\nimport { CardNoFooter } from \"components/Card/Card\";\r\nimport { MaterialButton } from \"components/CustomButton/MaterialButton\";\r\n\r\nimport { prepareVegetableData } from \"util/Helper\";\r\nimport {\r\n  setVisible,\r\n  isAccept,\r\n  getAllVegetableUnapproved,\r\n  decreaseNotificationCount,\r\n  setSelectedItem,\r\n} from \"redux/index\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport clsx from \"clsx\";\r\nimport { useFormik } from \"formik\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  DeleteButton,\r\n  CheckCircleButton,\r\n  CancelButton,\r\n} from \"../../components/CustomButton/CustomButton\";\r\nimport SearchOption from \"../../components/FilterOption/SearchOption/SearchBar\";\r\nimport { getLocked, removeAdvanceRecordSelected } from \"../../redux\";\r\nimport {\r\n  getAdvanceData,\r\n  getAdvanceDataByNameSearch,\r\n  removeAdvanceRecord,\r\n  getSelectedItem,\r\n  getModalVisible,\r\n} from \"../../redux/Selector/Selectors\";\r\nimport * as variable from \"../../variables/Variables\";\r\nimport EnhancedTableHead from \"../SuperTable/Header/AdvanceHeader\";\r\nimport { StyledTableCell, StyledTableCell17px } from \"./StyledCell\";\r\nimport { StyledTableRow } from \"./StyledRow\";\r\nimport ActionButton from \"components/SuperTable/ActionButton\";\r\n\r\nconst normalPElement = {\r\n  fontSize: 14,\r\n  margin: 0,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& .MuiSelect-root\": {\r\n      fontSize: 14,\r\n      margin: 0,\r\n    },\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    // fontSize:14,\r\n    minWidth: 750,\r\n    borderCollapse: \"collapse\",\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function NormalTable(props) {\r\n  const classes = useStyles();\r\n  let visible = useSelector((state) => getModalVisible(state));\r\n  // ! row này sẽ đại diện cho dữ liệu lấy trực tiếp từ store (global)\r\n  const actionButtonList = props.actionbuttonlist;\r\n\r\n  // * cái row ở bên store truyền từ bên component vào\r\n  let [rows, setRows] = useState(props.bodyData);\r\n\r\n  const dispatch = useDispatch();\r\n  let history = useHistory(); // ! history object\r\n\r\n  // * Dùng để đánh dấu account đang bị lock\r\n  const [isLock, setIsLock] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    setRows(props.bodyData);\r\n  }, [props.bodyData]);\r\n\r\n  //* Dùng để thông báo rằng những field ko cần phải show ở table\r\n  const { headCells } = props;\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState([variable.negativeCommendCount]);\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [selectedForStore, setSelectedForStore] = React.useState([]);\r\n  // const selectedForStore = useSelector((state) => getSelectedItem(state));\r\n  const removeRows = useSelector((state) =>\r\n    removeAdvanceRecord(state, selected)\r\n  );\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  //! tam thoi chua dung den all click\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      return;\r\n    }\r\n  };\r\n\r\n  // ! Hàm này sẽ nhận name của cái row đc click và truyền đến trang edit\r\n  // const handleEdit = (selectedRowName) => {\r\n  //   console.log(\"user role=\", userRole);\r\n  //   if (userRole == variable.fleetManagerRole) {\r\n  //     history.push(variable.fleetmanager + `/truckform/:name${selectedRowName}`);\r\n  //     history.push({\r\n  //       pathname: variable.fleetmanager + \"/truckform\",\r\n  //       search: `?name=${selectedRowName}`,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  /**\r\n   * ! row sẽ tượng trưng cái row đc click\r\n   * * Cái này chỉ là chọn đc những cái row đc click thôi,\r\n   * * Muốn nó hiện màu ở checkbox còn phải, thay đổi ở chỗ\r\n   * * này nữa: const isItemSelected = isSelected(row.ID);\r\n   * @param {*} event\r\n   * @param {*} row\r\n   */\r\n  const handleClick = (event, row) => {\r\n    //* row đc click sẽ dựa theo ID của nó\r\n    const { ID, vegetableName, vegetableImage } = row;\r\n    const item = {\r\n      id: ID,\r\n      image: vegetableImage,\r\n      name: vegetableName,\r\n    };\r\n\r\n    // ! index của cái item đc chọn\r\n    const selectedIndex = selected.indexOf(ID);\r\n    let newSelected = [];\r\n    let newSelectedForStore = []; //! list dành riêng cho store\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, ID);\r\n      newSelectedForStore = newSelectedForStore.concat(selectedForStore, item);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n      newSelectedForStore = newSelectedForStore.concat(\r\n        selectedForStore.slice(1)\r\n      );\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n      newSelectedForStore = newSelectedForStore.concat(\r\n        selectedForStore.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n      newSelectedForStore = newSelectedForStore.concat(\r\n        selectedForStore.concat(\r\n          selectedForStore.slice(0, selectedIndex),\r\n          selectedForStore.slice(selectedIndex + 1)\r\n        )\r\n      );\r\n    }\r\n\r\n    // ! Ở chỗ này là ta sẽ có đc 1 list những item đc check\r\n    setSelected(newSelected);\r\n\r\n    //! tạo 1 list những item dc chọn ở store để hiện lên popup\r\n    setSelectedForStore(newSelectedForStore);\r\n\r\n    console.log(\r\n      newSelected,\r\n      \" Đây là selected for store: \",\r\n      newSelectedForStore\r\n    );\r\n  };\r\n\r\n  const deleteRow = () => {\r\n    console.log(\"Những row đc lựa chọn: \", selected);\r\n    dispatch(removeAdvanceRecordSelected(selected));\r\n    //! tìm ra những row đc lựa chọng\r\n  };\r\n\r\n  //* Hàm hiện cái popup confirm lựa chọn\r\n  const showConfirmDialog = () => {\r\n    dispatch(setVisible(true));\r\n  };\r\n\r\n  /**\r\n   ** Hàm dùng để duyệt những rau đúng thông tin\r\n   */\r\n  const passTest = () => {\r\n    let tmp = [];\r\n    console.log(\"Những row đc lựa chọn: \", selected);\r\n    selected.map((item) => {\r\n      dispatch(\r\n        isAccept({\r\n          Id: item,\r\n          Status: 2,\r\n        })\r\n      ).then(() => {\r\n        dispatch(getAllVegetableUnapproved()).then((res) => {\r\n          tmp = [...prepareVegetableData(res.payload.data)];\r\n          setRows(tmp);\r\n          setSelected([]);\r\n        });\r\n      });\r\n    });\r\n    dispatch(decreaseNotificationCount(selected.length));\r\n    //! sau khi submit thành công thì cập nhật row và load lại list\r\n  };\r\n\r\n  /**\r\n   ** Hàm dùng để từ chối những rau sai thông tin\r\n   */\r\n  const failTest = () => {\r\n    let tmp = [];\r\n    console.log(\"Những row đc lựa chọn: \", selected);\r\n    selected.map((item) => {\r\n      dispatch(\r\n        isAccept({\r\n          Id: item,\r\n          Status: 3,\r\n        })\r\n      ).then(() => {\r\n        dispatch(getAllVegetableUnapproved()).then((res) => {\r\n          tmp = [...prepareVegetableData(res.payload.data)];\r\n          setRows(tmp);\r\n          setSelected([]);\r\n        });\r\n      });\r\n    });\r\n    dispatch(decreaseNotificationCount(selected.length));\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      searchvalue: \"\",\r\n      filtervalue: \"Name\",\r\n    },\r\n    onSubmit: (values) => {\r\n      console.log(\"search value\", values);\r\n      switch (values[\"filtervalue\"]) {\r\n        case \"Name\":\r\n          console\r\n            .log\r\n            // setRows(getAdvanceDataByNameSearch(rows, values[\"searchvalue\"]))\r\n            ();\r\n          // setRows(getAdvanceDataByNameSearch(rows, values[\"searchvalue\"]));\r\n          break;\r\n        case \" Age\":\r\n          console.log(\"result\", values[\"filtervalue\"]);\r\n          break;\r\n      }\r\n    },\r\n  });\r\n  const closeModal = () => {\r\n    dispatch(setVisible(false));\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <ShowPopUp visible={visible} length=\"50%\">\r\n        <Grid fluid style={{ margin: 0, padding: 0 }}>\r\n          <CardNoFooter\r\n            title={<React.Fragment></React.Fragment>}\r\n            content={\r\n              <React.Fragment>\r\n                <Row>\r\n                  <Col xs={7}>\r\n                    <div className=\"post-background-content\">\r\n                      <p className=\"post-text-header\">Xác nhận lựa chọn</p>\r\n                      <PerfectScrollbar style={{ height: \"max-content\", width: 300 }}>\r\n                        <div\r\n                          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                        >\r\n                          {selectedForStore.map((selected) => {\r\n                            return (\r\n                              <div style={{ display: \"flex\" ,alignItems:\"flex-end\",margin:\"100\"}}>\r\n                                <img src={selected.image} height=\"50\" width=\"50\" />\r\n                                <p style={{marginLeft:\"20\"}}>{selected.name}</p>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </PerfectScrollbar>\r\n                      <div>\r\n                        <div style={{ display: \"flex\", marginTop: 10 }}>\r\n                          <MaterialButton\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            size=\"large\"\r\n                            style={{ marginRight: 5 }}\r\n                            click={() => closeModal()}\r\n                          >\r\n                            Đóng\r\n                          </MaterialButton>\r\n                          <MaterialButton\r\n                            variant=\"contained\"\r\n                            color=\"success\"\r\n                            size=\"large\"\r\n                            style={{ marginRight: 5 }}\r\n                          >\r\n                            Xác nhận\r\n                          </MaterialButton>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </Grid>\r\n      </ShowPopUp>\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <Box height={10} />\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={rows.length}\r\n                headCells={headCells}\r\n                actionButtonList={actionButtonList}\r\n              />\r\n              <TableBody>\r\n                {stableSort(rows, getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const isItemSelected = isSelected(row.ID);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    const objectInArr = []; //! cái array này sẽ chứa\r\n                    const finalArray = []; //! cái array sau khi đã đc xử lí để hiển thị\r\n                    for (const key in row) {\r\n                      objectInArr.push({\r\n                        key: key,\r\n                        value: row[key],\r\n                      });\r\n                    }\r\n                    /**\r\n                     * * Phần này giúp cho dữ liệu body luôn hiển thị đúng với header\r\n                     */\r\n                    headCells.map((obj) => {\r\n                      objectInArr.map((cell) => {\r\n                        if (obj.id == cell.key) {\r\n                          // console.log(\"cell\", cell.key, \" obj\", obj.id);\r\n                          //! phần tử trong mảng final có 2 cái, đặc biệt là numeric giúp cho việc hiển thị giữa dữ liệu chữ và số đẹp hơn ở mỗi row của table\r\n                          finalArray.push({\r\n                            value: cell.value,\r\n                            numeric: obj.numeric,\r\n                            key: cell.key,\r\n                          });\r\n                        }\r\n                      });\r\n                    });\r\n                    // //* kết thúc\r\n\r\n                    return (\r\n                      <StyledTableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={row.Dessert}\r\n                        selected={isItemSelected}\r\n                        onClick={(event) => handleClick(event, row)}\r\n                      >\r\n                        {actionButtonList.map((obj) => {\r\n                          if (obj == \"remove\") {\r\n                            return (\r\n                              <StyledTableCell padding=\"checkbox\">\r\n                                <Checkbox\r\n                                  checked={isItemSelected}\r\n                                  inputProps={{ \"aria-labelledby\": labelId }}\r\n                                />\r\n                              </StyledTableCell>\r\n                            );\r\n                          }\r\n                          return <ActionButton name={obj} row={row} />;\r\n                        })}\r\n\r\n                        {finalArray.map((obj, index) => {\r\n                          // console.log(\"value\", obj.value);\r\n                          //  ! Nếu value là ảnh thì sẽ  thêm 1 component image và để hiển thị\r\n                          if (obj.key == \"vegetableImage\") {\r\n                            if (obj.numeric == false) {\r\n                              return (\r\n                                <StyledTableCell\r\n                                  component=\"th\"\r\n                                  id={labelId}\r\n                                  scope=\"row\"\r\n                                  padding=\"none\"\r\n                                >\r\n                                  <img\r\n                                    src={obj.value}\r\n                                    height=\"80\"\r\n                                    width=\"80\"\r\n                                    style={{ margin: 10 }}\r\n                                  />\r\n                                </StyledTableCell>\r\n                              );\r\n                            }\r\n                          }\r\n                          if (obj.key == \"description\" || obj.key == \"uses\") {\r\n                            return (\r\n                              <StyledTableCell\r\n                                component=\"th\"\r\n                                id={labelId}\r\n                                scope=\"row\"\r\n                                padding=\"none\"\r\n                              >\r\n                                <PerfectScrollbar\r\n                                  style={{\r\n                                    height: 100,\r\n                                    width: 200,\r\n                                    padding: 10,\r\n                                  }}\r\n                                >\r\n                                  {obj.value}\r\n                                </PerfectScrollbar>\r\n                              </StyledTableCell>\r\n                            );\r\n                          }\r\n                          if (obj.numeric == false) {\r\n                            return (\r\n                              <StyledTableCell17px\r\n                                component=\"th\"\r\n                                id={labelId}\r\n                                scope=\"row\"\r\n                                padding=\"none\"\r\n                              >\r\n                                {obj.value}\r\n                              </StyledTableCell17px>\r\n                            );\r\n                          } else {\r\n                            return (\r\n                              <StyledTableCell align=\"right\">\r\n                                {obj.value}\r\n                              </StyledTableCell>\r\n                            );\r\n                          }\r\n                        })}\r\n                      </StyledTableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                    <TableCell colSpan={7} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n              <TableFooter>\r\n                <TableRow style={{ border: \"none\" }}>\r\n                  <TableCell colSpan={3} size=\"small\" style={{ padding: 0 }}>\r\n                    <div>\r\n                      {selected.length > 0 ? (\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          <p\r\n                            style={{\r\n                              fontSize: 14,\r\n                              margin: 0,\r\n                              paddingLeft: 10,\r\n                              color: variable.materialSecondaryColorMain,\r\n                            }}\r\n                          >\r\n                            {selected.length} được chọn\r\n                          </p>\r\n                          <CheckCircleButton click={showConfirmDialog} />\r\n                          <CancelButton click={showConfirmDialog} />\r\n                        </div>\r\n                      ) : (\r\n                        <Typography\r\n                          style={{ flex: \"1 1 100%\" }}\r\n                          variant=\"h6\"\r\n                          id=\"tableTitle\"\r\n                          component=\"div\"\r\n                        >\r\n                          <p></p>\r\n                        </Typography>\r\n                      )}\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell colSpan={4} size={\"small\"} style={{ padding: 0 }}>\r\n                    <TablePagination\r\n                      style={{ fontSize: 14 }}\r\n                      rowsPerPageOptions={[5, 10, 25]}\r\n                      component=\"div\"\r\n                      count={rows.length}\r\n                      labelRowsPerPage={\r\n                        <p style={normalPElement}>Số lượng rau mỗi trang:</p>\r\n                      }\r\n                      labelDisplayedRows={({ from, to, count }) => (\r\n                        <p style={normalPElement}>\r\n                          {from}-{to}\r\n                          {\" trong \"}\r\n                          {count !== -1 ? count : \"more than\" + to}\r\n                        </p>\r\n                      )}\r\n                      rowsPerPage={rowsPerPage}\r\n                      page={page}\r\n                      onChangePage={handleChangePage}\r\n                      onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableFooter>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}