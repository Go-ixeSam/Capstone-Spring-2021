{"ast":null,"code":"import _defineProperty from\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";var _extraReducers;// import ContractType from \"./contractType\";\nimport*as variable from\"../../variables/Variables\";import JSONPLACEHOLDERApi from\"api/JSONPLACEHOLDERApi\";import{createPostData,convertDateToString,createAccountData,createHeader}from\"util/ContructorCreation\";var _require=require(\"@reduxjs/toolkit\"),createSlice=_require.createSlice,createAsyncThunk=_require.createAsyncThunk;/**\r\n * * Có một chút khác biệt khi ta tạo async action,\r\n * * thay vì hồi trước slice mà ta tạo ra sẽ cho ta 2 biến là reducer và actions thì\r\n * * bây h ta ko để actions tổn ngổn vậy nữa mà sẽ export ra thằng cái async action nào cần luônluôn\r\n */ /**\r\n * * tham số đầu sẽ là param mà ta muốn pass vào cái hàm này\r\n * * cái tiếp theo là một thứ mà hàm 'createAsyncThunk' cung cấp cho phép ta đc dispatch những\r\n * * action ở các nơi khác để dùng trong hàm này: thunkAPI.dispatch()\r\n */export var getALL=createAsyncThunk(\"account/getFakeAPI\",/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(params,thunkAPI){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return JSONPLACEHOLDERApi.getAll(null);case 2:result=_context.sent;return _context.abrupt(\"return\",result);case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}());export var sharingDetail=createAsyncThunk(\"account/sharingDetail\",/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params,thunkAPI){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return JSONPLACEHOLDERApi.shareDetail(params);case 2:result=_context2.sent;return _context2.abrupt(\"return\",result);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref2.apply(this,arguments);};}());/**\r\n * * api trả về thông tin của cây dựa trên tên\r\n */export var getPlantInfo=createAsyncThunk(\"account/getPlantInfo\",/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params,thunkAPI){var result;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return JSONPLACEHOLDERApi.getPlantInfo(params);case 2:result=_context3.sent;return _context3.abrupt(\"return\",result);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x5,_x6){return _ref3.apply(this,arguments);};}());export var login=createAsyncThunk(\"account/login\",/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(params,thunkAPI){var result;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return JSONPLACEHOLDERApi.getPlantInfo(params);case 2:result=_context4.sent;return _context4.abrupt(\"return\",result);case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x7,_x8){return _ref4.apply(this,arguments);};}());var account=createSlice({name:\"account\",initialState:{token:\"\",accountData:[//  createAccountData(1,\"alive\",\"Khá bảnh\",\"samxxx@gmail.com\",\"08/17/1998\",\"Nam\",\"02/23/2021\",\"08081501\"),\n//  createAccountData(2,\"dead\",\"Khong bảnh lắm\",\"samxxx@gmail.com\",\"02/17/1990\",\"Nam\",\"02/23/2021\",\"08081501\"),\n//  createAccountData(3,\"alive\",\"Okiem \",\"samxxx@gmail.com\",\"01/17/1991\",\"Nữ\",\"02/23/2021\",\"08081501\"),\ncreateAccountData(\"1\",\"a live\",\"Khá bảnh\",\"02/23/2021\",\"12\",\"samxxx@gmail.com\",\"08/17/1998\",\"Nam\",\"090242342\"),createAccountData(\"2\",\"dead\",\"Khong bảnh lắm\",\"02/23/2021\",\"23\",\"samxxx@gmail.com\",\"02/17/1990\",\"Nam\",\"042342334\"),createAccountData(\"3\",\"alive\",\"Okiem \",\"02/23/2021\",\"5\",\"samxxx@gmail.com\",\"01/17/1991\",\"Nữ\",\"0774342234\")],accountTableHeader:[createHeader(\"Người dùng\",false,true,variable.userName),createHeader(\"Ngày tạo\",false,true,variable.createDate),createHeader(\"Email\",false,true,variable.email),createHeader(\"Ngày sinh\",false,true,variable.birthDate),createHeader(\"Giới tính\",false,true,variable.sex),createHeader(\"Trạng thái\",false,true,variable.accoutStatus),createHeader(\"Số điện thoại\",true,false,variable.phone),createHeader(\"Số lượng bài bị báo cáo\",true,false,variable.numberOfReport)],current:{},loading:false,// * trường này dùng để hiển thị pop up loading trong lúc dợi API trả về response\nsuccess:false,// * trường này dùng để hiển thị pop up success nếu như gọi API thành công\nfail:false,//* trường này dùng để hiển thị pop up fail nếu như gọi API thất bại\nerror:\"\",signInForm:[{row:{cols:[{elementType:variable.input,elementConfig:{name:variable.username,type:variable.text,labeltext:\"User name\",placeholder:\"Username\",value:\"\"},validation:[],valid:{}}]}},{row:{cols:[{elementType:variable.input,elementConfig:{name:variable.password,type:variable.password,labeltext:\"\",placeholder:\"Password\",value:\"\"},validation:[],valid:{}}]}}]},reducers:{addContract:function addContract(state,action){/**\r\n       * ! reduxtoolkit đã tích hợp sẵn bộ immer cho phép ta mutate state trực tiếp\r\n       * * Ở trước giao diện ta viết mutate trực tiếp nhưng thật ra behind the sence\r\n       * * immer vẫn sẽ clone ra một object mới và chỉnh sửa rồi return như ta hay làm\r\n       * *\r\n       */state.contracts.record.push(action.payload);},modifyContract:function modifyContract(state,action){state.contracts.record=action.payload;},ModifyContractFomr:function ModifyContractFomr(state,action){state.contractForm=action.payload;}},// ! Với kết quả trả về đều sẽ có 3 trường là meta,data và error, ta viết ở dưới này để coi sẽ phải làm những gì cho từng loại kêt quả\nextraReducers:(_extraReducers={},_defineProperty(_extraReducers,getALL.pending,function(state){state.loading=true;state.success=false;state.fail=false;}),_defineProperty(_extraReducers,getALL.rejected,function(state,action){// * Thực hiện hành động gì đó ở store khi kết quả trả về không có dữ liệu như mong muốn\nstate.error=action.error;state.loading=false;state.success=true;state.fail=false;state.current=action.payload;}),_defineProperty(_extraReducers,getALL.fulfilled,function(state,action){// * Thực hiện hành động gì dó ở store khi kết quả có dữ liệu trả về thành công\nstate.loading=false;state.success=true;state.fail=false;state.current=action.payload;}),_defineProperty(_extraReducers,getPlantInfo.pending,function(state){}),_defineProperty(_extraReducers,getPlantInfo.rejected,function(state,action){}),_defineProperty(_extraReducers,getPlantInfo.fulfilled,function(state,action){}),_extraReducers)});var accountReducer=account.reducer,actions=account.actions;//createSlice sẽ trả về cho ta 2 biến là reducer và action\nvar addContract=actions.addContract,modifyContract=actions.modifyContract,ModifyContractFomr=actions.ModifyContractFomr;export{addContract,modifyContract,ModifyContractFomr};export default accountReducer;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/redux/Account/AccountSlice.jsx"],"names":["variable","JSONPLACEHOLDERApi","createPostData","convertDateToString","createAccountData","createHeader","require","createSlice","createAsyncThunk","getALL","params","thunkAPI","getAll","result","sharingDetail","shareDetail","getPlantInfo","login","account","name","initialState","token","accountData","accountTableHeader","userName","createDate","email","birthDate","sex","accoutStatus","phone","numberOfReport","current","loading","success","fail","error","signInForm","row","cols","elementType","input","elementConfig","username","type","text","labeltext","placeholder","value","validation","valid","password","reducers","addContract","state","action","contracts","record","push","payload","modifyContract","ModifyContractFomr","contractForm","extraReducers","pending","rejected","fulfilled","accountReducer","reducer","actions"],"mappings":"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","sourcesContent":["// import ContractType from \"./contractType\";\r\nimport * as variable from \"../../variables/Variables\";\r\nimport JSONPLACEHOLDERApi from \"api/JSONPLACEHOLDERApi\";\r\nimport {\r\n  createPostData,\r\n  convertDateToString,\r\n  createAccountData,\r\n  createHeader,\r\n} from \"util/ContructorCreation\";\r\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\n\r\n/**\r\n * * Có một chút khác biệt khi ta tạo async action,\r\n * * thay vì hồi trước slice mà ta tạo ra sẽ cho ta 2 biến là reducer và actions thì\r\n * * bây h ta ko để actions tổn ngổn vậy nữa mà sẽ export ra thằng cái async action nào cần luônluôn\r\n */\r\n\r\n/**\r\n * * tham số đầu sẽ là param mà ta muốn pass vào cái hàm này\r\n * * cái tiếp theo là một thứ mà hàm 'createAsyncThunk' cung cấp cho phép ta đc dispatch những\r\n * * action ở các nơi khác để dùng trong hàm này: thunkAPI.dispatch()\r\n */\r\nexport const getALL = createAsyncThunk(\r\n  \"account/getFakeAPI\",\r\n  async (params, thunkAPI) => {\r\n    const result = await JSONPLACEHOLDERApi.getAll(null);\r\n    return result;\r\n  }\r\n);\r\n\r\nexport const sharingDetail = createAsyncThunk(\r\n  \"account/sharingDetail\",\r\n  async (params, thunkAPI) => {\r\n    const result = await JSONPLACEHOLDERApi.shareDetail(params);\r\n    return result;\r\n  }\r\n);\r\n\r\n/**\r\n * * api trả về thông tin của cây dựa trên tên\r\n */\r\nexport const getPlantInfo = createAsyncThunk(\r\n  \"account/getPlantInfo\",\r\n  async (params, thunkAPI) => {\r\n    const result = await JSONPLACEHOLDERApi.getPlantInfo(params);\r\n    return result;\r\n  }\r\n);\r\nexport const login = createAsyncThunk(\r\n  \"account/login\",\r\n  async (params, thunkAPI) => {\r\n    const result = await JSONPLACEHOLDERApi.getPlantInfo(params);\r\n    return result;\r\n  }\r\n);\r\n\r\nconst account = createSlice({\r\n  name: \"account\",\r\n  initialState: {\r\n    token: \"\",\r\n    accountData: [\r\n      //  createAccountData(1,\"alive\",\"Khá bảnh\",\"samxxx@gmail.com\",\"08/17/1998\",\"Nam\",\"02/23/2021\",\"08081501\"),\r\n      //  createAccountData(2,\"dead\",\"Khong bảnh lắm\",\"samxxx@gmail.com\",\"02/17/1990\",\"Nam\",\"02/23/2021\",\"08081501\"),\r\n      //  createAccountData(3,\"alive\",\"Okiem \",\"samxxx@gmail.com\",\"01/17/1991\",\"Nữ\",\"02/23/2021\",\"08081501\"),\r\n      createAccountData(\r\n        \"1\",\r\n        \"a live\",\r\n        \"Khá bảnh\",\r\n        \"02/23/2021\",\r\n        \"12\",\r\n        \"samxxx@gmail.com\",\r\n        \"08/17/1998\",\r\n        \"Nam\",\r\n        \"090242342\"\r\n      ),\r\n      createAccountData(\r\n        \"2\",\r\n        \"dead\",\r\n        \"Khong bảnh lắm\",\r\n        \"02/23/2021\",\r\n        \"23\",\r\n        \"samxxx@gmail.com\",\r\n        \"02/17/1990\",\r\n        \"Nam\",\r\n        \"042342334\"\r\n      ),\r\n      createAccountData(\r\n        \"3\",\r\n        \"alive\",\r\n        \"Okiem \",\r\n        \"02/23/2021\",\r\n        \"5\",\r\n        \"samxxx@gmail.com\",\r\n        \"01/17/1991\",\r\n        \"Nữ\",\r\n        \"0774342234\"\r\n      ),\r\n    ],\r\n    accountTableHeader: [\r\n      createHeader(\"Người dùng\", false, true, variable.userName),\r\n      createHeader(\"Ngày tạo\", false, true, variable.createDate),\r\n      createHeader(\"Email\", false, true, variable.email),\r\n      createHeader(\"Ngày sinh\", false, true, variable.birthDate),\r\n      createHeader(\"Giới tính\", false, true, variable.sex),\r\n      createHeader(\"Trạng thái\", false, true, variable.accoutStatus),\r\n      createHeader(\"Số điện thoại\", true, false, variable.phone),\r\n      createHeader(\r\n        \"Số lượng bài bị báo cáo\",\r\n        true,\r\n        false,\r\n        variable.numberOfReport\r\n      ),\r\n    ],\r\n    current: {},\r\n    loading: false, // * trường này dùng để hiển thị pop up loading trong lúc dợi API trả về response\r\n    success: false, // * trường này dùng để hiển thị pop up success nếu như gọi API thành công\r\n    fail: false, //* trường này dùng để hiển thị pop up fail nếu như gọi API thất bại\r\n    error: \"\",\r\n    signInForm: [\r\n      {\r\n        row: {\r\n          cols: [\r\n            {\r\n              elementType: variable.input,\r\n              elementConfig: {\r\n                name: variable.username,\r\n                type: variable.text,\r\n                labeltext: \"User name\",\r\n                placeholder: \"Username\",\r\n                value: \"\",\r\n              },\r\n              validation: [],\r\n              valid: {},\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      {\r\n        row: {\r\n          cols: [\r\n            {\r\n              elementType: variable.input,\r\n              elementConfig: {\r\n                name: variable.password,\r\n                type: variable.password,\r\n                labeltext: \"\",\r\n                placeholder: \"Password\",\r\n                value: \"\",\r\n              },\r\n              validation: [],\r\n              valid: {},\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  reducers: {\r\n    addContract: (state, action) => {\r\n      /**\r\n       * ! reduxtoolkit đã tích hợp sẵn bộ immer cho phép ta mutate state trực tiếp\r\n       * * Ở trước giao diện ta viết mutate trực tiếp nhưng thật ra behind the sence\r\n       * * immer vẫn sẽ clone ra một object mới và chỉnh sửa rồi return như ta hay làm\r\n       * *\r\n       */\r\n      state.contracts.record.push(action.payload);\r\n    },\r\n    modifyContract: (state, action) => {\r\n      state.contracts.record = action.payload;\r\n    },\r\n    ModifyContractFomr: (state, action) => {\r\n      state.contractForm = action.payload;\r\n    },\r\n  },\r\n\r\n  // ! Với kết quả trả về đều sẽ có 3 trường là meta,data và error, ta viết ở dưới này để coi sẽ phải làm những gì cho từng loại kêt quả\r\n  extraReducers: {\r\n    [getALL.pending]: (state) => {\r\n      state.loading = true;\r\n      state.success = false;\r\n      state.fail = false;\r\n    },\r\n    [getALL.rejected]: (state, action) => {\r\n      // * Thực hiện hành động gì đó ở store khi kết quả trả về không có dữ liệu như mong muốn\r\n      state.error = action.error;\r\n      state.loading = false;\r\n      state.success = true;\r\n      state.fail = false;\r\n      state.current = action.payload;\r\n    },\r\n    [getALL.fulfilled]: (state, action) => {\r\n      // * Thực hiện hành động gì dó ở store khi kết quả có dữ liệu trả về thành công\r\n      state.loading = false;\r\n      state.success = true;\r\n      state.fail = false;\r\n      state.current = action.payload;\r\n    },\r\n    [getPlantInfo.pending]: (state) => {},\r\n    [getPlantInfo.rejected]: (state, action) => {},\r\n    [getPlantInfo.fulfilled]: (state, action) => {},\r\n  },\r\n});\r\n\r\nconst { reducer: accountReducer, actions } = account; //createSlice sẽ trả về cho ta 2 biến là reducer và action\r\nexport const { addContract, modifyContract, ModifyContractFomr } = actions;\r\nexport default accountReducer;\r\n"]},"metadata":{},"sourceType":"module"}