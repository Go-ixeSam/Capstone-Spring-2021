{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sam\\\\Documents\\\\GitHub\\\\Capstone-Spring-2021\\\\src\\\\views\\\\Wikipedia.jsx\";\nimport React from \"react\";\nimport { isTemplateMiddleOrTemplateTail } from \"typescript\";\nimport useForceUpdate from \"use-force-update\";\nimport \"./Wiki.css\";\nimport { wikiVegetableSearch } from \"redux/index\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getWikiResult } from \"redux/Selector/Selectors\";\n\nfunction Wikipedia() {\n  const [wikiSearchReturnValues, setWikiSearchReturnValues] = React.useState([]);\n  const [wikiSearchTerms, setWikiSearchTerms] = React.useState(\"\");\n  const forceUpdate = useForceUpdate();\n  const dispatch = useDispatch();\n  const vegetableList = useSelector(state => getWikiResult(state));\n\n  const useWikiSearchEngine = e => {\n    e.preventDefault();\n    console.log(\"hiện tại= \", wikiSearchTerms);\n    setWikiSearchReturnValues([]);\n\n    const search = async () => {\n      await dispatch(wikiVegetableSearch(wikiSearchTerms));\n      console.log(\"leak wiki= \", result);\n      const tmp = [];\n\n      for (let key in vegetableList) {\n        tmp.push({\n          title: vegetableList[key].title,\n          image: vegetableList[key].image\n        });\n      }\n\n      setWikiSearchReturnValues(tmp);\n      forceUpdate(); //   for (var key in ) {\n      //     tmp.push({\n      //       queryResultPageFullURL: \"no link\",\n      //       queryResultPageID: response.query.search[key].pageid,\n      //       queryResultPageTitle: response.query.search[key].title,\n      //       queryResultPageSnippet: response.query.search[key].snippet,\n      //     });\n      //   }\n      //   setWikiSearchReturnValues(tmp)\n      // }\n      // fetch(url)\n      //   .then(function (response) {\n      //     return response.json();\n      //   })\n      //   .then(function (response) {\n      //     // console.log(response);\n      //   })\n      //   .then(function (response) {\n      //     for (var key2 in wikiSearchReturnValues) {\n      //       console.log(\"array\",wikiSearchReturnValues);\n      //       console.log(\"key 2, \",key2)\n      //       // let page = pointerToThis.state.wikiSearchReturnValues[key2];\n      //       setWikiSearchReturnValues(wikiSearchReturnValues[key2])\n      //       let page = wikiSearchReturnValues;\n      //       let pageID = page.queryResultPageID;\n      //       let urlForRetrievingPageURLByPageID = `https://en.wikipedia.org/w/api.php?origin=*&action=query&prop=info&pageids=${pageID}&inprop=url&format=json`;\n      //       fetch(urlForRetrievingPageURLByPageID)\n      //         .then(function (response) {\n      //           return response.json();\n      //         })\n      //         .then(function (response) {\n      //           page.queryResultPageFullURL =\n      //             response.query.pages[pageID].fullurl;\n      //           //   pointerToThis.forceUpdate();\n      //           forceUpdate();\n      //         });\n      //     }\n      //   });\n    };\n\n    search();\n  };\n\n  const changeWikiSearchTerms = e => {\n    console.log(\"value search= \", e.target.value);\n    setWikiSearchTerms(e.target.value);\n  };\n\n  let wikiSearchResults = [];\n\n  for (var key in wikiSearchReturnValues) {\n    wikiSearchResults.push( /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchResultDiv\",\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, wikiSearchReturnValues[key].title)));\n  }\n\n  console.log(wikiSearchResults);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"Wikipedia Search Engine\"), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: wikiSearchTerms || \"\",\n    onChange: changeWikiSearchTerms,\n    placeholder: \"Search Wikipedia Articles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: useWikiSearchEngine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Search\")));\n}\n\nexport default Wikipedia;","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/views/Wikipedia.jsx"],"names":["React","isTemplateMiddleOrTemplateTail","useForceUpdate","wikiVegetableSearch","useDispatch","useSelector","getWikiResult","Wikipedia","wikiSearchReturnValues","setWikiSearchReturnValues","useState","wikiSearchTerms","setWikiSearchTerms","forceUpdate","dispatch","vegetableList","state","useWikiSearchEngine","e","preventDefault","console","log","search","result","tmp","key","push","title","image","changeWikiSearchTerms","target","value","wikiSearchResults"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { isTemplateMiddleOrTemplateTail } from \"typescript\";\r\nimport useForceUpdate from \"use-force-update\";\r\nimport \"./Wiki.css\";\r\nimport { wikiVegetableSearch } from \"redux/index\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getWikiResult } from \"redux/Selector/Selectors\";\r\nfunction Wikipedia() {\r\n  const [wikiSearchReturnValues, setWikiSearchReturnValues] = React.useState(\r\n    []\r\n  );\r\n  const [wikiSearchTerms, setWikiSearchTerms] = React.useState(\"\");\r\n  const forceUpdate = useForceUpdate();\r\n  const dispatch = useDispatch();\r\n  const vegetableList = useSelector((state) => getWikiResult(state));\r\n\r\n  const useWikiSearchEngine = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"hiện tại= \", wikiSearchTerms);\r\n    setWikiSearchReturnValues([]);\r\n    const search = async () => {\r\n      await dispatch(wikiVegetableSearch(wikiSearchTerms));\r\n      console.log(\"leak wiki= \", result);\r\n      const tmp = [];\r\n      for (let key in vegetableList) {\r\n        tmp.push({\r\n          title: vegetableList[key].title,\r\n          image: vegetableList[key].image,\r\n        });\r\n      }\r\n      setWikiSearchReturnValues(tmp);\r\n      forceUpdate();\r\n      //   for (var key in ) {\r\n      //     tmp.push({\r\n      //       queryResultPageFullURL: \"no link\",\r\n      //       queryResultPageID: response.query.search[key].pageid,\r\n      //       queryResultPageTitle: response.query.search[key].title,\r\n      //       queryResultPageSnippet: response.query.search[key].snippet,\r\n      //     });\r\n      //   }\r\n      //   setWikiSearchReturnValues(tmp)\r\n      // }\r\n      // fetch(url)\r\n      //   .then(function (response) {\r\n      //     return response.json();\r\n      //   })\r\n      //   .then(function (response) {\r\n      //     // console.log(response);\r\n\r\n      //   })\r\n      //   .then(function (response) {\r\n      //     for (var key2 in wikiSearchReturnValues) {\r\n      //       console.log(\"array\",wikiSearchReturnValues);\r\n      //       console.log(\"key 2, \",key2)\r\n      //       // let page = pointerToThis.state.wikiSearchReturnValues[key2];\r\n      //       setWikiSearchReturnValues(wikiSearchReturnValues[key2])\r\n      //       let page = wikiSearchReturnValues;\r\n      //       let pageID = page.queryResultPageID;\r\n      //       let urlForRetrievingPageURLByPageID = `https://en.wikipedia.org/w/api.php?origin=*&action=query&prop=info&pageids=${pageID}&inprop=url&format=json`;\r\n\r\n      //       fetch(urlForRetrievingPageURLByPageID)\r\n      //         .then(function (response) {\r\n      //           return response.json();\r\n      //         })\r\n      //         .then(function (response) {\r\n      //           page.queryResultPageFullURL =\r\n      //             response.query.pages[pageID].fullurl;\r\n\r\n      //           //   pointerToThis.forceUpdate();\r\n      //           forceUpdate();\r\n      //         });\r\n      //     }\r\n      //   });\r\n    };\r\n    search();\r\n  };\r\n  const changeWikiSearchTerms = (e) => {\r\n    console.log(\"value search= \", e.target.value);\r\n    setWikiSearchTerms(e.target.value);\r\n  };\r\n\r\n  let wikiSearchResults = [];\r\n  for (var key in wikiSearchReturnValues) {\r\n    wikiSearchResults.push(\r\n      <div className=\"searchResultDiv\" key={key}>\r\n        <h3>{wikiSearchReturnValues[key].title}</h3>\r\n        {/* <p\r\n          className=\"description\"\r\n          dangerouslySetInnerHTML={{\r\n            __html: wikiSearchReturnValues[key3].queryResultPageSnippet,\r\n          }}\r\n        ></p> */}\r\n      </div>\r\n    );\r\n  }\r\n  console.log(wikiSearchResults);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Wikipedia Search Engine</h1>\r\n      <form action=\"\">\r\n        <input\r\n          type=\"text\"\r\n          value={wikiSearchTerms || \"\"}\r\n          onChange={changeWikiSearchTerms}\r\n          placeholder=\"Search Wikipedia Articles\"\r\n        />\r\n        <button type=\"submit\" onClick={useWikiSearchEngine}>\r\n          Search\r\n        </button>\r\n      </form>\r\n      {/* {wikiSearchResults} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wikipedia;\r\n"]},"metadata":{},"sourceType":"module"}