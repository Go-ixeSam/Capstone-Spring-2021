{"ast":null,"code":"import _objectSpread from\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import*as variable from\"variables/Variables\";import{getDates,removeDuplicateDate}from\"util/Helper\";export function getList(state){return state.contract.listTestSelectorstSelector;}export function getTrip(state){return state.trip.tripData;}export function getAdvanceData(state){return state.account.accountData;}export function getAdvanceSelectedData(state){return state.trip.advanceTableDataSelected;}export function getAdvanceDataByNameSearch(advanceTableData,searchValue){return advanceTableData.filter(function(record){return record.Dessert.includes(searchValue);});}export function getUserRole(state){return state.user.roles.text;}export function getModalVisible(state){return state.post.userPostVisible;}export function getToken(state){return state.login.token;}/**\r\n * * Hàm sẽ trả về 1 mảng chứa những ngày tạo bài đã loại bỏ trùng nhau từ account id\r\n */export function getDateListByAccountId(state){var object={accountID:\"\",posts:[]};state.post.reportedPosts.map(function(obj){if(obj.accountID==state.post.selectedAccountId){object=_objectSpread(_objectSpread({},obj),{},{accountID:obj.accountID,posts:obj.posts});}});return removeDuplicateDate(getDates(object.posts));}/**\r\n * * Hàm sẽ trả về cái object mà có account id giống với selected ID\r\n */export function getReportedListByAccountId(state){var object={accountID:\"\",posts:[]};state.post.reportedPosts.map(function(obj){if(obj.accountID==state.post.selectedAccountId){object=obj;console.log(\"obj \",object);}});return object;}export function getMaterialHeader(state){return state.account.accountTableHeader;}export function getReportedPost(state){return state.post.reportedPosts;}export function getSignInForm(state){return state.login.signInForm;}export function getFirebase(state){return state.firebase;}export function getPostTableHeader(state){return state.post.tableHeader;}export function getPostTableBodyData(state){return state.post.advanceTableData;}export function getLoadingStatus(state){return state.account.loading;}export function getSuccessStatus(state){return state.account.success;}export function getFailStatus(state){return state.account.fail;}/**\r\n * ! Tìm kiến trip dựa trên ID\r\n * @param {*} state\r\n * @param {*} id\r\n */export function getTripDetailById(state){var id=state.trip.tripSelectedID;return state.trip.tripData.tableBody.record.find(function(obj){return obj.contractCode==id;});}export function removeAdvanceRecord(state,selectedRecord){var newArray=[];selectedRecord.map(function(selected){newArray=state.trip.advanceTableData.filter(function(record){return record.name!=selected;});});return newArray;}","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/redux/Selector/Selectors.js"],"names":["variable","getDates","removeDuplicateDate","getList","state","contract","listTestSelectorstSelector","getTrip","trip","tripData","getAdvanceData","account","accountData","getAdvanceSelectedData","advanceTableDataSelected","getAdvanceDataByNameSearch","advanceTableData","searchValue","filter","record","Dessert","includes","getUserRole","user","roles","text","getModalVisible","post","userPostVisible","getToken","login","token","getDateListByAccountId","object","accountID","posts","reportedPosts","map","obj","selectedAccountId","getReportedListByAccountId","console","log","getMaterialHeader","accountTableHeader","getReportedPost","getSignInForm","signInForm","getFirebase","firebase","getPostTableHeader","tableHeader","getPostTableBodyData","getLoadingStatus","loading","getSuccessStatus","success","getFailStatus","fail","getTripDetailById","id","tripSelectedID","tableBody","find","contractCode","removeAdvanceRecord","selectedRecord","newArray","selected","name"],"mappings":"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","sourcesContent":["import * as variable from \"variables/Variables\";\r\nimport { getDates, removeDuplicateDate } from \"util/Helper\";\r\n\r\nexport function getList(state) {\r\n  return state.contract.listTestSelectorstSelector;\r\n}\r\n\r\nexport function getTrip(state) {\r\n  return state.trip.tripData;\r\n}\r\n\r\nexport function getAdvanceData(state) {\r\n  return state.account.accountData;\r\n}\r\n\r\nexport function getAdvanceSelectedData(state) {\r\n  return state.trip.advanceTableDataSelected;\r\n}\r\n\r\nexport function getAdvanceDataByNameSearch(advanceTableData, searchValue) {\r\n  return advanceTableData.filter((record) =>\r\n    record.Dessert.includes(searchValue)\r\n  );\r\n}\r\n\r\nexport function getUserRole(state) {\r\n  return state.user.roles.text;\r\n}\r\nexport function getModalVisible(state) {\r\n  return state.post.userPostVisible;\r\n}\r\nexport function getToken(state) {\r\n  return state.login.token;\r\n}\r\n/**\r\n * * Hàm sẽ trả về 1 mảng chứa những ngày tạo bài đã loại bỏ trùng nhau từ account id\r\n */\r\nexport function getDateListByAccountId(state) {\r\n  let object = { accountID: \"\", posts: [] };\r\n  state.post.reportedPosts.map((obj) => {\r\n    if (obj.accountID == state.post.selectedAccountId) {\r\n      object = { ...obj, accountID: obj.accountID, posts: obj.posts };\r\n    }\r\n  });\r\n  return removeDuplicateDate(getDates(object.posts));\r\n}\r\n/**\r\n * * Hàm sẽ trả về cái object mà có account id giống với selected ID\r\n */\r\nexport function getReportedListByAccountId(state) {\r\n  let object = { accountID: \"\", posts: [] };\r\n  state.post.reportedPosts.map((obj) => {\r\n    if (obj.accountID == state.post.selectedAccountId) {\r\n      object = obj;\r\n      console.log(\"obj \", object);\r\n    }\r\n  });\r\n  return object;\r\n}\r\nexport function getMaterialHeader(state) {\r\n  return state.account.accountTableHeader;\r\n}\r\nexport function getReportedPost(state) {\r\n  return state.post.reportedPosts;\r\n}\r\n\r\nexport function getSignInForm(state) {\r\n  return state.login.signInForm;\r\n}\r\n\r\nexport function getFirebase(state) {\r\n  return state.firebase;\r\n}\r\n\r\nexport function getPostTableHeader(state) {\r\n  return state.post.tableHeader;\r\n}\r\n\r\nexport function getPostTableBodyData(state) {\r\n  return state.post.advanceTableData;\r\n}\r\nexport function getLoadingStatus(state) {\r\n  return state.account.loading;\r\n}\r\nexport function getSuccessStatus(state) {\r\n  return state.account.success;\r\n}\r\nexport function getFailStatus(state) {\r\n  return state.account.fail;\r\n}\r\n/**\r\n * ! Tìm kiến trip dựa trên ID\r\n * @param {*} state\r\n * @param {*} id\r\n */\r\nexport function getTripDetailById(state) {\r\n  const id = state.trip.tripSelectedID;\r\n  return state.trip.tripData.tableBody.record.find(\r\n    (obj) => obj.contractCode == id\r\n  );\r\n}\r\nexport function removeAdvanceRecord(state, selectedRecord) {\r\n  let newArray = [];\r\n  selectedRecord.map((selected) => {\r\n    newArray = state.trip.advanceTableData.filter(\r\n      (record) => record.name != selected\r\n    );\r\n  });\r\n  return newArray;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}