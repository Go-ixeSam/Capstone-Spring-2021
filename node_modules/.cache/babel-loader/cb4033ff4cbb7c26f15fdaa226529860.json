{"ast":null,"code":"var _jsxFileName = \"E:\\\\light-bootstrap-dashboard-react-master\\\\src\\\\views\\\\Dashboard.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport ChartistTooltip from \"chartist-plugin-tooltips-updated\";\nimport { Card, CardNoFooter } from \"components/Card/Card.jsx\";\nimport Chartist from \"chartist\";\nimport { StatsCard, MiniChartCard } from \"components/StatsCard/StatsCard.jsx\";\nimport { Tasks } from \"components/Tasks/Tasks.jsx\";\nimport { dataPie, legendPie, dataSales, optionsSales, responsiveSales, legendSales, dataBar, optionsBar, responsiveBar, legendBar } from \"variables/Variables.jsx\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FormControll } from \"components/Formik/FormikControl\";\nimport { MaterialButton } from \"components/CustomButton/MaterialButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDashboardUpdate } from \"redux/Selector/Selectors\";\n\nrequire(\"chartist-plugin-legend\");\n\nfunction Dashboard() {\n  const updateButtonForm = useSelector(state => getDashboardUpdate(state));\n  const options = {\n    plugins: [ChartistTooltip()]\n  };\n  console.log(updateButtonForm);\n  const initialValues = {\n    updateTime: \"\"\n  };\n\n  const onSubmit = values => {};\n\n  const dropdownOptions = [{\n    key: \"Tháng này\",\n    value: \"thismonth\"\n  }, {\n    key: \"Hôm nay\",\n    value: \"today\"\n  }, {\n    key: \"7 ngày trước\",\n    value: \"last7days\"\n  }];\n\n  function createLegend(json) {\n    var legend = [];\n\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push( /*#__PURE__*/React.createElement(\"i\", {\n        className: type,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }\n      }));\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n\n    return legend;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, formik => {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, updateButtonForm.map(item => {\n      item.row.cols.map(col => {\n        const {\n          name,\n          type,\n          placeholder,\n          labeltext\n        } = col.elementConfig;\n        return /*#__PURE__*/React.createElement(FormControll, {\n          control: \"select\",\n          label: labeltext,\n          name: name,\n          options: dropdownOptions,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }\n        });\n      });\n    }), /*#__PURE__*/React.createElement(MaterialButton, {\n      variant: \"contained\",\n      color: \"info\",\n      size: \"large\",\n      style: {\n        marginRight: 5\n      } // click={() => autoCloseSuccessModal()}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, \"C\\u1EADp nh\\u1EADt\"));\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card // statsIcon=\"fa fa-history\"\n  , {\n    id: \"chartHours\",\n    title: \"Ho\\u1EA1t \\u0111\\u1ED9ng c\\u1EE7a ng\\u01B0\\u1EDDi  d\\xF9ng\" // category=\"24 Hours performance\"\n    // stats=\"Updated 3 minutes ago\"\n    ,\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ct-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ChartistGraph, {\n      data: dataSales,\n      type: \"Line\",\n      options: optionsSales // options={options}\n      ,\n      responsiveOptions: responsiveSales,\n      plugins: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    })),\n    legend: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 23\n      }\n    }, createLegend(legendSales)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card // statsIcon=\"fa fa-clock-o\"\n  , {\n    title: \"Email Statistics\",\n    category: \"Last Campaign Performance\" // stats=\"Campaign sent 2 days ago\"\n    ,\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chartPreferences\",\n      className: \"ct-chart ct-perfect-fourth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ChartistGraph, {\n      data: dataPie,\n      type: \"Pie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 19\n      }\n    })),\n    legend: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 23\n      }\n    }, createLegend(legendPie)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    id: \"chartActivity\",\n    title: \"2014 Sales\",\n    category: \"All products including Taxes\" // stats=\"Data information certified\"\n    // statsIcon=\"fa fa-check\"\n    ,\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ct-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ChartistGraph, {\n      data: dataBar,\n      type: \"Bar\",\n      options: optionsBar,\n      responsiveOptions: responsiveBar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 19\n      }\n    })),\n    legend: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 23\n      }\n    }, createLegend(legendBar)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/views/Dashboard.jsx"],"names":["React","Component","ChartistGraph","Grid","Row","Col","ChartistTooltip","Card","CardNoFooter","Chartist","StatsCard","MiniChartCard","Tasks","dataPie","legendPie","dataSales","optionsSales","responsiveSales","legendSales","dataBar","optionsBar","responsiveBar","legendBar","Formik","Form","Yup","FormControll","MaterialButton","useDispatch","useSelector","getDashboardUpdate","require","Dashboard","updateButtonForm","state","options","plugins","console","log","initialValues","updateTime","onSubmit","values","dropdownOptions","key","value","createLegend","json","legend","i","length","type","push","formik","map","item","row","cols","col","name","placeholder","labeltext","elementConfig","marginRight"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport ChartistTooltip from \"chartist-plugin-tooltips-updated\";\nimport { Card, CardNoFooter } from \"components/Card/Card.jsx\";\nimport Chartist from \"chartist\";\nimport { StatsCard, MiniChartCard } from \"components/StatsCard/StatsCard.jsx\";\nimport { Tasks } from \"components/Tasks/Tasks.jsx\";\nimport {\n  dataPie,\n  legendPie,\n  dataSales,\n  optionsSales,\n  responsiveSales,\n  legendSales,\n  dataBar,\n  optionsBar,\n  responsiveBar,\n  legendBar,\n} from \"variables/Variables.jsx\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FormControll } from \"components/Formik/FormikControl\";\nimport { MaterialButton } from \"components/CustomButton/MaterialButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDashboardUpdate } from \"redux/Selector/Selectors\";\nrequire(\"chartist-plugin-legend\");\n\nfunction Dashboard() {\n  const updateButtonForm = useSelector((state) => getDashboardUpdate(state));\n  const options = {\n    plugins: [ChartistTooltip()],\n  };\n  console.log(updateButtonForm);\n  const initialValues = {\n    updateTime: \"\",\n  };\n  const onSubmit = (values) => {};\n  const dropdownOptions = [\n    { key: \"Tháng này\", value: \"thismonth\" },\n    { key: \"Hôm nay\", value: \"today\" },\n    { key: \"7 ngày trước\", value: \"last7days\" },\n  ];\n  function createLegend(json) {\n    var legend = [];\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(<i className={type} key={i} />);\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n    return legend;\n  }\n  return (\n    <div className=\"content\">\n      <Grid fluid>\n        <Row>\n          <Formik initialValues={initialValues} onSubmit={onSubmit}>\n            {(formik) => {\n              return (\n                <Form>\n                  {updateButtonForm.map((item) => {\n                    item.row.cols.map((col) => {\n                      const {\n                        name,\n                        type,\n                        placeholder,\n                        labeltext,\n                      } = col.elementConfig;\n                      return (\n                        <FormControll\n                          control={\"select\"}\n                          label={labeltext}\n                          name={name}\n                          options={dropdownOptions}\n                        />\n                      );\n                    });\n                  })}\n                  <MaterialButton\n                    variant=\"contained\"\n                    color=\"info\"\n                    size=\"large\"\n                    style={{ marginRight: 5 }}\n                    // click={() => autoCloseSuccessModal()}\n                  >\n                    Cập nhật\n                  </MaterialButton>\n                </Form>\n              );\n            }}\n          </Formik>\n          {/* <Col lg={3} sm={6}>\n              <Card\n                statsIcon=\"fa fa-history\"\n                id=\"chartHours\"\n                title=\"Hoạt động của người  dùng\"\n                category=\"24 Hours performance\"\n                stats=\"Updated 3 minutes ago\"\n                content={\n                  <div className=\"ct-chart\">\n                    <ChartistGraph\n                      data={dataSales}\n                      type=\"Line\"\n                      options={optionsSales}\n                      responsiveOptions={responsiveSales}\n                    />\n                  </div>\n                }\n              />\n            </Col> */}\n          {/* <Col lg={3} sm={6}>\n              <MiniChartCard\n                content={\n                  <ChartistGraph\n                    className={\"ct-chart\"}\n                    data={dataSales}\n                    type=\"Line\"\n                    options={optionsSales}\n                    responsiveOptions={responsiveSales}\n                  />\n                }\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText=\"Updated now\"\n              />\n            </Col> */}\n          {/* <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"pe-7s-wallet text-success\" />}\n                statsText=\"Revenue\"\n                statsValue=\"$1,345\"\n                statsIcon={<i className=\"fa fa-calendar-o\" />}\n                statsIconText=\"Last day\"\n              />\n            </Col> */}\n          {/* <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\n                statsText=\"Errors\"\n                statsValue=\"23\"\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText=\"In the last hour\"\n              />\n            </Col> */}\n          {/* <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"fa fa-twitter text-info\" />}\n                statsText=\"Followers\"\n                statsValue=\"+45\"\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText=\"Updated now\"\n              />\n            </Col> */}\n        </Row>\n        <Row>\n          <Col md={8}>\n            <Card\n              // statsIcon=\"fa fa-history\"\n              id=\"chartHours\"\n              title=\"Hoạt động của người  dùng\"\n              // category=\"24 Hours performance\"\n              // stats=\"Updated 3 minutes ago\"\n              content={\n                <div className=\"ct-chart\">\n                  <ChartistGraph\n                    data={dataSales}\n                    type=\"Line\"\n                    options={optionsSales}\n                    // options={options}\n                    responsiveOptions={responsiveSales}\n                    plugins={options}\n                  />\n                </div>\n              }\n              legend={<div className=\"legend\">{createLegend(legendSales)}</div>}\n            />\n          </Col>\n          <Col md={4}>\n            <Card\n              // statsIcon=\"fa fa-clock-o\"\n              title=\"Email Statistics\"\n              category=\"Last Campaign Performance\"\n              // stats=\"Campaign sent 2 days ago\"\n              content={\n                <div\n                  id=\"chartPreferences\"\n                  className=\"ct-chart ct-perfect-fourth\"\n                >\n                  <ChartistGraph data={dataPie} type=\"Pie\" />\n                </div>\n              }\n              legend={<div className=\"legend\">{createLegend(legendPie)}</div>}\n            />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={6}>\n            <Card\n              id=\"chartActivity\"\n              title=\"2014 Sales\"\n              category=\"All products including Taxes\"\n              // stats=\"Data information certified\"\n              // statsIcon=\"fa fa-check\"\n              content={\n                <div className=\"ct-chart\">\n                  <ChartistGraph\n                    data={dataBar}\n                    type=\"Bar\"\n                    options={optionsBar}\n                    responsiveOptions={responsiveBar}\n                  />\n                </div>\n              }\n              legend={<div className=\"legend\">{createLegend(legendBar)}</div>}\n            />\n          </Col>\n\n          {/* <Col md={6}>\n              <Card\n                title=\"Tasks\"\n                category=\"Backend development\"\n                stats=\"Updated 3 minutes ago\"\n                statsIcon=\"fa fa-history\"\n                content={\n                  <div className=\"table-full-width\">\n                    <table className=\"table\">\n                      <Tasks />\n                    </table>\n                  </div>\n                }\n              />\n            </Col> */}\n        </Row>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}