{"ast":null,"code":"// api/productApi.js\nimport React from \"react\";\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\nimport axiosClient from \"api/axiosClient\"; // import { useAxios, axiosWithoutToken, axiosTeamClient } from \"api/axiosClient\";\n\nimport { AxiosCalling, axiosWithoutToken, axiosTeamClient } from \"api/axiosClient\";\nimport { getToken } from \"redux/Selector/Selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst JsonPlaceHolderApi = {\n  getAll: params => {\n    const url = \"/posts\";\n    return axiosClient.get(url, {\n      params\n    });\n  },\n  getPlantInfo: params => {\n    const url = \"/LeakInfoFromWiki\";\n    return axiosTeamClient.get(url, {\n      params\n    });\n  },\n  login: params => {\n    const url = \"/api/Login/WebLogin\";\n    return axiosWithoutToken.post(url, params);\n  },\n  shareDetail: params => {\n    const url = \"/api/ShareDetail\";\n    return axiosTeamClient.post(url, params);\n  },\n  getDashboard: params => {\n    const url = \"/api/Dashboard/GetDashboard\";\n    return axiosTeamClient.get(url, params);\n  },\n  isAccept: params => {\n    const url = \"/api/Vegetable/IsAccept\"; //! kiểu put ở dưới là cách để thiết lập đối với những api mà sử dụng query param\n\n    return axiosTeamClient.put(url, {}, {\n      params: params\n    });\n  },\n  getAllVegetableUnapproved: params => {\n    const url = \"/api/Vegetable/GetAllVegetableUnapproved\"; //! kiểu put ở dưới là cách để thiết lập đối với những api mà param nằm ở body\n\n    return axiosTeamClient.get(url, params);\n  },\n  //* APi trả về cho ta 1 danh sách mà thể hiện số ngưỡng mà nếu vượt quá thì sẽ khóa account\n  getAllPercent: params => {\n    const url = \"/api/PrecentReport/GetAll\";\n    return axiosTeamClient.get(url, {\n      params: params\n    });\n  },\n  //* api giúp ta chỉnh lại cái ngưỡng bị khóa\n  editPrecentReport: params => {\n    const url = \"/api/PrecentReport\";\n    return axiosTeamClient.put(url, params);\n  },\n  //* Lấy danh sách top 10 để hiện lên dashboard\n  getTop10: params => {\n    const url = \"/api/Dashboard/Top10?Status\";\n    return axiosTeamClient.get(url, {}, {\n      params: params\n    });\n  },\n  //* laay thong tin de so sanh giua exchange va share cho dashboard\n  getShareAndExchangeCompare: params => {\n    const url = \"/api/Dashboard/ShowDashBoardAboutShareAndExchange\";\n    return axiosTeamClient.get(url, {}, {\n      params: params\n    });\n  }\n};\nexport default JsonPlaceHolderApi;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/api/JSONPLACEHOLDERApi.js"],"names":["React","config","axiosClient","AxiosCalling","axiosWithoutToken","axiosTeamClient","getToken","useDispatch","useSelector","JsonPlaceHolderApi","getAll","params","url","get","getPlantInfo","login","post","shareDetail","getDashboard","isAccept","put","getAllVegetableUnapproved","getAllPercent","editPrecentReport","getTop10","getShareAndExchangeCompare"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,OAAOC,WAAP,MAAwB,iBAAxB,C,CACA;;AACA,SACEC,YADF,EAEEC,iBAFF,EAGEC,eAHF,QAIO,iBAJP;AAKA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,MAAM,EAAGC,MAAD,IAAY;AAClB,UAAMC,GAAG,GAAG,QAAZ;AACA,WAAOV,WAAW,CAACW,GAAZ,CAAgBD,GAAhB,EAAqB;AAAED,MAAAA;AAAF,KAArB,CAAP;AACD,GAJwB;AAKzBG,EAAAA,YAAY,EAAGH,MAAD,IAAY;AACxB,UAAMC,GAAG,GAAG,mBAAZ;AACA,WAAOP,eAAe,CAACQ,GAAhB,CAAoBD,GAApB,EAAyB;AAAED,MAAAA;AAAF,KAAzB,CAAP;AACD,GARwB;AASzBI,EAAAA,KAAK,EAAGJ,MAAD,IAAY;AACjB,UAAMC,GAAG,GAAG,qBAAZ;AACA,WAAOR,iBAAiB,CAACY,IAAlB,CAAuBJ,GAAvB,EAA4BD,MAA5B,CAAP;AACD,GAZwB;AAazBM,EAAAA,WAAW,EAAGN,MAAD,IAAY;AACvB,UAAMC,GAAG,GAAG,kBAAZ;AACA,WAAOP,eAAe,CAACW,IAAhB,CAAqBJ,GAArB,EAA0BD,MAA1B,CAAP;AACD,GAhBwB;AAiBzBO,EAAAA,YAAY,EAAGP,MAAD,IAAY;AACxB,UAAMC,GAAG,GAAG,6BAAZ;AACA,WAAOP,eAAe,CAACQ,GAAhB,CAAoBD,GAApB,EAAyBD,MAAzB,CAAP;AACD,GApBwB;AAqBzBQ,EAAAA,QAAQ,EAAGR,MAAD,IAAY;AACpB,UAAMC,GAAG,GAAG,yBAAZ,CADoB,CAGpB;;AACA,WAAOP,eAAe,CAACe,GAAhB,CAAoBR,GAApB,EAAyB,EAAzB,EAA6B;AAAED,MAAAA,MAAM,EAAEA;AAAV,KAA7B,CAAP;AACD,GA1BwB;AA2BzBU,EAAAA,yBAAyB,EAAGV,MAAD,IAAY;AACrC,UAAMC,GAAG,GAAG,0CAAZ,CADqC,CAGrC;;AACA,WAAOP,eAAe,CAACQ,GAAhB,CAAoBD,GAApB,EAAyBD,MAAzB,CAAP;AACD,GAhCwB;AAkCzB;AACAW,EAAAA,aAAa,EAAGX,MAAD,IAAY;AACzB,UAAMC,GAAG,GAAG,2BAAZ;AACA,WAAOP,eAAe,CAACQ,GAAhB,CAAoBD,GAApB,EAAyB;AAAED,MAAAA,MAAM,EAAEA;AAAV,KAAzB,CAAP;AACD,GAtCwB;AAwCzB;AACAY,EAAAA,iBAAiB,EAAGZ,MAAD,IAAY;AAC7B,UAAMC,GAAG,GAAG,oBAAZ;AACA,WAAOP,eAAe,CAACe,GAAhB,CAAoBR,GAApB,EAAyBD,MAAzB,CAAP;AACD,GA5CwB;AA8CzB;AACAa,EAAAA,QAAQ,EAAGb,MAAD,IAAY;AACpB,UAAMC,GAAG,GAAG,6BAAZ;AACA,WAAOP,eAAe,CAACQ,GAAhB,CAAoBD,GAApB,EAAyB,EAAzB,EAA6B;AAAED,MAAAA,MAAM,EAAEA;AAAV,KAA7B,CAAP;AACD,GAlDwB;AAoDzB;AACAc,EAAAA,0BAA0B,EAAGd,MAAD,IAAY;AACtC,UAAMC,GAAG,GAAG,mDAAZ;AACA,WAAOP,eAAe,CAACQ,GAAhB,CAAoBD,GAApB,EAAyB,EAAzB,EAA6B;AAAED,MAAAA,MAAM,EAAEA;AAAV,KAA7B,CAAP;AACD;AAxDwB,CAA3B;AA0DA,eAAeF,kBAAf","sourcesContent":["// api/productApi.js\r\nimport React from \"react\";\r\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\r\nimport axiosClient from \"api/axiosClient\";\r\n// import { useAxios, axiosWithoutToken, axiosTeamClient } from \"api/axiosClient\";\r\nimport {\r\n  AxiosCalling,\r\n  axiosWithoutToken,\r\n  axiosTeamClient,\r\n} from \"api/axiosClient\";\r\nimport { getToken } from \"redux/Selector/Selectors\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst JsonPlaceHolderApi = {\r\n  getAll: (params) => {\r\n    const url = \"/posts\";\r\n    return axiosClient.get(url, { params });\r\n  },\r\n  getPlantInfo: (params) => {\r\n    const url = \"/LeakInfoFromWiki\";\r\n    return axiosTeamClient.get(url, { params });\r\n  },\r\n  login: (params) => {\r\n    const url = \"/api/Login/WebLogin\";\r\n    return axiosWithoutToken.post(url, params);\r\n  },\r\n  shareDetail: (params) => {\r\n    const url = \"/api/ShareDetail\";\r\n    return axiosTeamClient.post(url, params);\r\n  },\r\n  getDashboard: (params) => {\r\n    const url = \"/api/Dashboard/GetDashboard\";\r\n    return axiosTeamClient.get(url, params);\r\n  },\r\n  isAccept: (params) => {\r\n    const url = \"/api/Vegetable/IsAccept\";\r\n\r\n    //! kiểu put ở dưới là cách để thiết lập đối với những api mà sử dụng query param\r\n    return axiosTeamClient.put(url, {}, { params: params });\r\n  },\r\n  getAllVegetableUnapproved: (params) => {\r\n    const url = \"/api/Vegetable/GetAllVegetableUnapproved\";\r\n\r\n    //! kiểu put ở dưới là cách để thiết lập đối với những api mà param nằm ở body\r\n    return axiosTeamClient.get(url, params);\r\n  },\r\n\r\n  //* APi trả về cho ta 1 danh sách mà thể hiện số ngưỡng mà nếu vượt quá thì sẽ khóa account\r\n  getAllPercent: (params) => {\r\n    const url = \"/api/PrecentReport/GetAll\";\r\n    return axiosTeamClient.get(url, { params: params });\r\n  },\r\n\r\n  //* api giúp ta chỉnh lại cái ngưỡng bị khóa\r\n  editPrecentReport: (params) => {\r\n    const url = \"/api/PrecentReport\";\r\n    return axiosTeamClient.put(url, params);\r\n  },\r\n\r\n  //* Lấy danh sách top 10 để hiện lên dashboard\r\n  getTop10: (params) => {\r\n    const url = \"/api/Dashboard/Top10?Status\";\r\n    return axiosTeamClient.get(url, {}, { params: params });\r\n  },\r\n\r\n  //* laay thong tin de so sanh giua exchange va share cho dashboard\r\n  getShareAndExchangeCompare: (params) => {\r\n    const url = \"/api/Dashboard/ShowDashBoardAboutShareAndExchange\";\r\n    return axiosTeamClient.get(url, {}, { params: params });\r\n  },\r\n};\r\nexport default JsonPlaceHolderApi;\r\n"]},"metadata":{},"sourceType":"module"}