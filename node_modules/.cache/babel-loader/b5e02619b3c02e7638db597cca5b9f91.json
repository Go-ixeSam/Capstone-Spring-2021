{"ast":null,"code":"// import ContractType from \"./contractType\";\n// import * as variable from \"../../variables/Variables\";\nimport JSONPLACEHOLDERApi from \"api/JSONPLACEHOLDERApi\";\nimport { createPostData, convertDateToString, createHeader } from \"util/ContructorCreation\";\nimport * as variable from \"variables/Variables\";\n\nconst {\n  createSlice,\n  createAsyncThunk\n} = require(\"@reduxjs/toolkit\");\n\nconst currentDate = new Date();\n/**\r\n * * Hàm có mục đích cho việc test\r\n * ! trả về ngày tiếp theo\r\n */\n\nfunction getNextDate(currentDate) {\n  return currentDate.setDate(new Date().getDate() + 1);\n}\n\nfunction createDateForTest() {\n  // var currentDate = new Date();\n  var data = [];\n\n  for (var i = 0; i >= 5; i++) {\n    data.push(createPostData(i, \"sam\", currentDate, 3, 12));\n    currentDate = getNextDate(currentDate);\n  }\n\n  return data;\n}\n\nconst post = createSlice({\n  name: \"post\",\n  initialState: {\n    [variable.advanceTableData]: [createPostData(1, \"sam\", \"03/05/2021\", 3, 14), createPostData(2, \"sam\", \"06/07/2021\", 5, 24), createPostData(3, \"sam\", \"23/12/2021\", 7, 4), createPostData(4, \"sam\", \"18/02/2021\", 12, 3)],\n    tableHeader: [createHeader(\"ID\", true, true, [variable.id]), createHeader(\"Creator\", false, false, [variable.creator]), createHeader(\"Date submitted\", false, false, [variable.dateSubmitted]), createHeader(\"Report\", true, false, [variable.reportCount]), createHeader(\"Negative commend\", true, false, [variable.negativeCommendCount])],\n    current: {},\n    loadingL: false,\n    error: \"\",\n    userPostVisible: false\n  },\n  reducers: {\n    setVisible: (state, action) => {\n      state.userPostVisible = action.payload;\n    }\n  } //   extraReducers: {\n  //     [getALL.pending]: (state) => {},\n  //     [getALL.rejected]: (state, action) => {\n  //       state.error = action.error;\n  //     },\n  //     [getALL.fulfilled]: (state, action) => {\n  //       state.current = action.payload;\n  //     },\n  //   },\n\n});\nconst {\n  reducer: postReducer,\n  actions\n} = post; //createSlice sẽ trả về cho ta 2 biến là reducer và action\n\nexport const {\n  setVisible\n} = actions;\nexport default postReducer;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/redux/Post/PostSlice.jsx"],"names":["JSONPLACEHOLDERApi","createPostData","convertDateToString","createHeader","variable","createSlice","createAsyncThunk","require","currentDate","Date","getNextDate","setDate","getDate","createDateForTest","data","i","push","post","name","initialState","advanceTableData","tableHeader","id","creator","dateSubmitted","reportCount","negativeCommendCount","current","loadingL","error","userPostVisible","reducers","setVisible","state","action","payload","reducer","postReducer","actions"],"mappings":"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","sourcesContent":["// import ContractType from \"./contractType\";\r\n// import * as variable from \"../../variables/Variables\";\r\nimport JSONPLACEHOLDERApi from \"api/JSONPLACEHOLDERApi\";\r\nimport {\r\n  createPostData,\r\n  convertDateToString,\r\n  createHeader,\r\n} from \"util/ContructorCreation\";\r\nimport * as variable from \"variables/Variables\";\r\n\r\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\nconst currentDate = new Date();\r\n/**\r\n * * Hàm có mục đích cho việc test\r\n * ! trả về ngày tiếp theo\r\n */\r\nfunction getNextDate(currentDate) {\r\n  return currentDate.setDate(new Date().getDate() + 1);\r\n}\r\n\r\nfunction createDateForTest() {\r\n  // var currentDate = new Date();\r\n  var data = [];\r\n  for (var i = 0; i >= 5; i++) {\r\n    data.push(createPostData(i, \"sam\", currentDate, 3, 12));\r\n    currentDate = getNextDate(currentDate);\r\n  }\r\n  return data;\r\n}\r\n\r\nconst post = createSlice({\r\n  name: \"post\",\r\n  initialState: {\r\n    [variable.advanceTableData]: [\r\n      createPostData(1, \"sam\", \"03/05/2021\", 3, 14),\r\n      createPostData(2, \"sam\", \"06/07/2021\", 5, 24),\r\n      createPostData(3, \"sam\", \"23/12/2021\", 7, 4),\r\n      createPostData(4, \"sam\", \"18/02/2021\", 12, 3),\r\n    ],\r\n    tableHeader: [\r\n      createHeader(\"ID\", true, true, [variable.id]),\r\n      createHeader(\"Creator\", false, false, [variable.creator]),\r\n      createHeader(\"Date submitted\", false, false, [variable.dateSubmitted]),\r\n      createHeader(\"Report\", true, false, [variable.reportCount]),\r\n      createHeader(\"Negative commend\", true, false, [\r\n        variable.negativeCommendCount,\r\n      ]),\r\n    ],\r\n    current: {},\r\n    loadingL: false,\r\n    error: \"\",\r\n    userPostVisible: false,\r\n  },\r\n  reducers: {\r\n    setVisible: (state, action) => {\r\n      state.userPostVisible = action.payload;\r\n    },\r\n  },\r\n  //   extraReducers: {\r\n  //     [getALL.pending]: (state) => {},\r\n  //     [getALL.rejected]: (state, action) => {\r\n  //       state.error = action.error;\r\n  //     },\r\n  //     [getALL.fulfilled]: (state, action) => {\r\n  //       state.current = action.payload;\r\n  //     },\r\n  //   },\r\n});\r\n\r\nconst { reducer: postReducer, actions } = post; //createSlice sẽ trả về cho ta 2 biến là reducer và action\r\nexport const { setVisible } = actions;\r\nexport default postReducer;\r\n"]},"metadata":{},"sourceType":"module"}