{"ast":null,"code":"var _jsxFileName = \"E:\\\\light-bootstrap-dashboard-react-master\\\\src\\\\views\\\\Signin.jsx\";\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\nimport { faPhoneAlt, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Box } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React from \"react\";\nimport \"../components/SignIn/style.scss\";\nimport { FormControll } from \"components/Formik/FormikControl\";\nimport { Formik, Form } from \"formik\";\nimport * as variable from \"variables/Variables\";\nimport * as Yup from \"yup\";\nimport { useSelector } from \"react-redux\";\nimport { getSignInForm } from \"redux/Selector/Selectors\";\nlet width = 240;\nlet marginBottom = 5;\nlet headeFontSize = 20;\nlet choseSignInTypeHeight = 30;\nlet choseSignInTypeWidth = \"80%\";\nlet startIcon = 15;\nlet chooseSignInPadding = 20;\nlet attensionPadding = 10; // * Style cho may cai nut chon loai dang nhap\n\nlet choseStyle = {\n  height: choseSignInTypeHeight,\n  padding: 0,\n  marginBottom: 10,\n  width: choseSignInTypeWidth,\n  fontSize: 12\n};\nconst initialValue = {\n  [variable.username]: \"\",\n  [variable.password]: \"\"\n};\n\nconst onSubmit = (value, onSubmitProps) => {\n  console.log(\"submit value: \", value);\n};\n\nconst validationSchema = Yup.object({\n  [variable.password]: Yup.string().required([variable.wrongpassword]) // [variable.password]: Yup.string().ph([variable.wrongpassword]),\n\n});\n\nfunction handleSubmit() {}\n\nfunction Signin() {\n  const signInForm = useSelector(state => getSignInForm(state));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValue,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      paddingLeft: 15,\n      fontFamily: \"Roboto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"grey\",\n      fontSize: headeFontSize\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, \"\\u0110\\u0103ng nh\\u1EADp\"), /*#__PURE__*/React.createElement(Box, {\n    width: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: \"bold\",\n      fontSize: headeFontSize\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, \"Web Admin\")), signInForm.map(rows => {\n    const columns = rows.row.cols;\n    return columns.map(column => {\n      const controlType = column.elementType;\n      const {\n        name,\n        type,\n        placeholder,\n        labeltext\n      } = column.elementConfig;\n      return /*#__PURE__*/React.createElement(FormControll, Object.assign({\n        elementType: \"input\" // label={labeltext}\n        ,\n        type: type,\n        name: name,\n        placeholder: placeholder\n      }, column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }\n      }));\n    });\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"attensin\",\n    style: {\n      visibility: \"hidden\",\n      textAlign: \"right\",\n      paddingRight: attensionPadding,\n      marginTop: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: 12,\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, \"Qu\\xEAn m\\u1EADt kh\\u1EA9u?\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, \"\\u0110\\u0103ng nh\\u1EADp\"))))));\n}\n\nexport default Signin;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/views/Signin.jsx"],"names":["faGoogle","faPhoneAlt","faUser","FontAwesomeIcon","Box","Button","TextField","React","FormControll","Formik","Form","variable","Yup","useSelector","getSignInForm","width","marginBottom","headeFontSize","choseSignInTypeHeight","choseSignInTypeWidth","startIcon","chooseSignInPadding","attensionPadding","choseStyle","height","padding","fontSize","initialValue","username","password","onSubmit","value","onSubmitProps","console","log","validationSchema","object","string","required","wrongpassword","handleSubmit","Signin","signInForm","state","display","flexDirection","alignItems","paddingLeft","fontFamily","color","fontWeight","map","rows","columns","row","cols","column","controlType","elementType","name","type","placeholder","labeltext","elementConfig","visibility","textAlign","paddingRight","marginTop"],"mappings":"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","sourcesContent":["import { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faPhoneAlt, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React from \"react\";\r\nimport \"../components/SignIn/style.scss\";\r\nimport { FormControll } from \"components/Formik/FormikControl\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as variable from \"variables/Variables\";\r\nimport * as Yup from \"yup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getSignInForm } from \"redux/Selector/Selectors\";\r\n\r\nlet width = 240;\r\nlet marginBottom = 5;\r\nlet headeFontSize = 20;\r\nlet choseSignInTypeHeight = 30;\r\nlet choseSignInTypeWidth = \"80%\";\r\nlet startIcon = 15;\r\nlet chooseSignInPadding = 20;\r\nlet attensionPadding = 10;\r\n// * Style cho may cai nut chon loai dang nhap\r\nlet choseStyle = {\r\n  height: choseSignInTypeHeight,\r\n  padding: 0,\r\n  marginBottom: 10,\r\n  width: choseSignInTypeWidth,\r\n  fontSize: 12,\r\n};\r\n\r\nconst initialValue = {\r\n  [variable.username]: \"\",\r\n  [variable.password]: \"\",\r\n};\r\nconst onSubmit = (value, onSubmitProps) => {\r\n  console.log(\"submit value: \", value);\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  [variable.password]: Yup.string().required([variable.wrongpassword]),\r\n  // [variable.password]: Yup.string().ph([variable.wrongpassword]),\r\n});\r\nfunction handleSubmit() {}\r\n\r\nfunction Signin() {\r\n  const signInForm = useSelector((state) => getSignInForm(state));\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}\r\n    >\r\n      {/* <div className=\"login-page\">\r\n        <div className=\"form\">\r\n          <Button\r\n            style={{\r\n              height: choseSignInTypeHeight,\r\n              padding: chooseSignInPadding,\r\n              marginBottom: 10,\r\n              width: choseSignInTypeWidth,\r\n              fontSize: 12,\r\n            }}\r\n            type=\"submit\"\r\n            startIcon={\r\n              <FontAwesomeIcon\r\n                icon={faUser}\r\n                width={startIcon}\r\n                height={startIcon}\r\n              />\r\n            }\r\n          >\r\n            Tên và mật khẩu\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            style={{\r\n              height: choseSignInTypeHeight,\r\n              padding: chooseSignInPadding,\r\n              marginBottom: 10,\r\n              width: choseSignInTypeWidth,\r\n              fontSize: 12,\r\n              backgroundColor: \"#e82e1e\",\r\n            }}\r\n            startIcon={\r\n              <FontAwesomeIcon\r\n                icon={faGoogle}\r\n                width={startIcon}\r\n                height={startIcon}\r\n              />\r\n            }\r\n          >\r\n            Google\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            style={{\r\n              height: choseSignInTypeHeight,\r\n              padding: chooseSignInPadding,\r\n              marginBottom: 10,\r\n              width: choseSignInTypeWidth,\r\n              fontSize: 12,\r\n              backgroundColor: \"#c57a09\",\r\n            }}\r\n            startIcon={\r\n              <FontAwesomeIcon\r\n                icon={faPhoneAlt}\r\n                width={startIcon}\r\n                height={startIcon}\r\n              />\r\n            }\r\n          >\r\n            Số điện thoại\r\n          </Button>\r\n        </div>\r\n      </div> */}\r\n      {/* <div style={{ fontSize: 25 }}>- -</div> */}\r\n\r\n      {/* ! Phần div dùng để thay đổi mật khẩu */}\r\n\r\n      {/* <div className=\"login-page\">\r\n        <div className=\"form\">\r\n          <form className=\"login-form\" onSubmit={(e) => handleSubmit(e)}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                paddingLeft: 15,\r\n                fontFamily: \"Roboto\",\r\n              }}\r\n            >\r\n              <p style={{ color: \"grey\", fontSize: headeFontSize }}>\r\n                Thay đổi mật khẩu\r\n              </p>\r\n            </div>\r\n            <TextField\r\n              style={{ width: width, marginBottom: marginBottom }}\r\n              type=\"text\"\r\n              variant=\"standard\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              // onChange={(event) => this.handleChange(event)}\r\n            />\r\n            <div\r\n              className=\"attensin\"\r\n              style={{ textAlign: \"left\", paddingLeft: attensionPadding }}\r\n            >\r\n              <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\r\n                Lưu ý: Mail sẽ đến trong vòng 5 phút\r\n              </p>\r\n            </div>\r\n            <button type=\"submit\" className=\"button\">\r\n              <p>\r\n                <a href=\"#resend\">Gửi yêu cầu</a>\r\n              </p>\r\n            </button>{\" \"}\r\n            <div\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"#bb8322\",\r\n                paddingLeft: 10,\r\n                margin: \"5px 5px 15px 0\",\r\n              }}\r\n            >\r\n              <p id=\"resend\">Gửi lại yêu cầu trong {chooseSignInPadding}s</p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"login-page\">\r\n        <div className=\"form\">\r\n          <form className=\"login-form\" onSubmit={(e) => handleSubmit(e)}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                paddingLeft: 15,\r\n                fontFamily: \"Roboto\",\r\n              }}\r\n            >\r\n              <p style={{ color: \"grey\", fontSize: headeFontSize }}>\r\n                Mật khẩu mới\r\n              </p>\r\n            </div>\r\n            <TextField\r\n              size=\"medium\"\r\n              style={{ marginBottom: marginBottom }}\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              // onChange={(event) => this.handleChange(event)}\r\n            />\r\n            <div\r\n              className=\"attensin\"\r\n              style={{ textAlign: \"left\", paddingLeft: attensionPadding }}\r\n            >\r\n              <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\r\n                Lưu ý: Mail sẽ đến trong vòng 5 phút\r\n              </p>\r\n            </div>\r\n            <button type=\"submit\" className=\"button\">\r\n              <p>\r\n                <a href=\"#resend\">Gửi yêu cầu</a>\r\n              </p>\r\n            </button>{\" \"}\r\n            <div\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"#bb8322\",\r\n                paddingLeft: 10,\r\n                margin: \"5px 5px 15px 0\",\r\n              }}\r\n            >\r\n              <p id=\"resend\">Gửi lại yêu cầu trong {chooseSignInPadding}s</p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div> */}\r\n      <div className=\"login-page\">\r\n        <div className=\"form\">\r\n          <Formik\r\n            initialValues={initialValue}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n          >\r\n            <Form>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingLeft: 15,\r\n                  fontFamily: \"Roboto\",\r\n                }}\r\n              >\r\n                <p style={{ color: \"grey\", fontSize: headeFontSize }}>\r\n                  Đăng nhập\r\n                </p>\r\n                <Box width={5} />\r\n                <p style={{ fontWeight: \"bold\", fontSize: headeFontSize }}>\r\n                  Web Admin\r\n                </p>\r\n              </div>\r\n              {signInForm.map((rows) => {\r\n                const columns = rows.row.cols;\r\n                return columns.map((column) => {\r\n                  const controlType = column.elementType;\r\n                  const {\r\n                    name,\r\n                    type,\r\n                    placeholder,\r\n                    labeltext,\r\n                  } = column.elementConfig;\r\n                  return (\r\n                    <FormControll\r\n                      elementType=\"input\"\r\n                      // label={labeltext}\r\n                      type={type}\r\n                      name={name}\r\n                      placeholder={placeholder}\r\n                      {...column}\r\n                    />\r\n                  );\r\n                });\r\n              })}\r\n              {/* <TextField\r\n                style={{ width: width, marginBottom: marginBottom }}\r\n                type=\"text\"\r\n                variant=\"standard\"\r\n                label=\"Tên tài khoản\"\r\n                name=\"username\"\r\n              />\r\n              <TextField\r\n                style={{ width: width, marginBottom: marginBottom }}\r\n                variant=\"standard\"\r\n                type=\"password\"\r\n                label=\"Mật khẩu\"\r\n                name=\"password\"\r\n              /> */}\r\n              <div\r\n                className=\"attensin\"\r\n                style={{\r\n                  visibility:\"hidden\",\r\n                  textAlign: \"right\",\r\n                  paddingRight: attensionPadding,\r\n                  marginTop: 5,\r\n                }}\r\n              >\r\n                <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\r\n                  Quên mật khẩu?\r\n                </p>\r\n              </div>\r\n              <button type=\"submit\">Đăng nhập</button>\r\n            </Form>\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n"]},"metadata":{},"sourceType":"module"}