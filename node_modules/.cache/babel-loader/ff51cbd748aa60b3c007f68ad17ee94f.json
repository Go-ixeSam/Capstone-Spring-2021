{"ast":null,"code":"import _defineProperty from\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";var _initialValue,_Yup$object;import{faGoogle}from\"@fortawesome/free-brands-svg-icons\";import{faPhoneAlt,faUser}from\"@fortawesome/free-solid-svg-icons\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{Box}from\"@material-ui/core\";import Button from\"@material-ui/core/Button\";import TextField from\"@material-ui/core/TextField\";import React from\"react\";import\"../components/SignIn/style.scss\";import{FormControll}from\"components/Formik/FormikControl\";import{Formik,Form}from\"formik\";import*as variable from\"variables/Variables\";import*as Yup from\"yup\";import{useSelector}from\"react-redux\";import{getSignInForm}from\"redux/Selector/Selectors\";var width=240;var marginBottom=5;var headeFontSize=20;var choseSignInTypeHeight=30;var choseSignInTypeWidth=\"80%\";var startIcon=15;var chooseSignInPadding=20;var attensionPadding=10;// * Style cho may cai nut chon loai dang nhap\nvar choseStyle={height:choseSignInTypeHeight,padding:0,marginBottom:10,width:choseSignInTypeWidth,fontSize:12};var initialValue=(_initialValue={},_defineProperty(_initialValue,variable.username,\"\"),_defineProperty(_initialValue,variable.password,\"\"),_initialValue);var onSubmit=function onSubmit(value,onSubmitProps){console.log(\"submit value: \",value);};/**\r\n * * hàm test dùng để tạo ra 1 validation custom\r\n * * với tham số 1 là tên của cái validation này\r\n * * tham số 2 là message error\r\n * * tham số 3 là 1 function với value chính là cái data đc input\r\n */var validationSchema=Yup.object((_Yup$object={},_defineProperty(_Yup$object,variable.password,Yup.string().required([variable.require]).test(\"checkpassword\",\"Wrong password\",function(value,context){// ? context chính là cái object Yup\nconsole.log(\"value nay\",value,\" context= \",context);})),_defineProperty(_Yup$object,variable.username,Yup.string().required([variable.require])),_Yup$object));function handleSubmit(){}function Signin(){var signInForm=useSelector(function(state){return getSignInForm(state);});return/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\",flexDirection:\"row\",alignItems:\"center\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"login-page\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form\"},/*#__PURE__*/React.createElement(Formik,{initialValues:initialValue,validationSchema:validationSchema,onSubmit:onSubmit},/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\",flexDirection:\"row\",paddingLeft:15,fontFamily:\"Roboto\"}},/*#__PURE__*/React.createElement(\"p\",{style:{color:\"grey\",fontSize:headeFontSize}},\"\\u0110\\u0103ng nh\\u1EADp\"),/*#__PURE__*/React.createElement(Box,{width:5}),/*#__PURE__*/React.createElement(\"p\",{style:{fontWeight:\"bold\",fontSize:headeFontSize}},\"Web Admin\")),signInForm.map(function(rows){var columns=rows.row.cols;return columns.map(function(column){var controlType=column.elementType;var _column$elementConfig=column.elementConfig,name=_column$elementConfig.name,type=_column$elementConfig.type,placeholder=_column$elementConfig.placeholder,labeltext=_column$elementConfig.labeltext;return/*#__PURE__*/React.createElement(FormControll,Object.assign({elementType:\"input\"// label={labeltext}\n,type:type,name:name,placeholder:placeholder},column));});}),/*#__PURE__*/React.createElement(\"div\",{className:\"attensin\",style:{visibility:\"hidden\",textAlign:\"right\",paddingRight:attensionPadding,marginTop:5}},/*#__PURE__*/React.createElement(\"p\",{style:{fontSize:12,fontWeight:\"bold\"}},\"Qu\\xEAn m\\u1EADt kh\\u1EA9u?\")),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"\\u0110\\u0103ng nh\\u1EADp\"))))));}export default Signin;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/views/Signin.jsx"],"names":["faGoogle","faPhoneAlt","faUser","FontAwesomeIcon","Box","Button","TextField","React","FormControll","Formik","Form","variable","Yup","useSelector","getSignInForm","width","marginBottom","headeFontSize","choseSignInTypeHeight","choseSignInTypeWidth","startIcon","chooseSignInPadding","attensionPadding","choseStyle","height","padding","fontSize","initialValue","username","password","onSubmit","value","onSubmitProps","console","log","validationSchema","object","string","required","require","test","context","handleSubmit","Signin","signInForm","state","display","flexDirection","alignItems","paddingLeft","fontFamily","color","fontWeight","map","rows","columns","row","cols","column","controlType","elementType","elementConfig","name","type","placeholder","labeltext","visibility","textAlign","paddingRight","marginTop"],"mappings":"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","sourcesContent":["import { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faPhoneAlt, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React from \"react\";\r\nimport \"../components/SignIn/style.scss\";\r\nimport { FormControll } from \"components/Formik/FormikControl\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as variable from \"variables/Variables\";\r\nimport * as Yup from \"yup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getSignInForm } from \"redux/Selector/Selectors\";\r\n\r\nlet width = 240;\r\nlet marginBottom = 5;\r\nlet headeFontSize = 20;\r\nlet choseSignInTypeHeight = 30;\r\nlet choseSignInTypeWidth = \"80%\";\r\nlet startIcon = 15;\r\nlet chooseSignInPadding = 20;\r\nlet attensionPadding = 10;\r\n// * Style cho may cai nut chon loai dang nhap\r\nlet choseStyle = {\r\n  height: choseSignInTypeHeight,\r\n  padding: 0,\r\n  marginBottom: 10,\r\n  width: choseSignInTypeWidth,\r\n  fontSize: 12,\r\n};\r\n\r\nconst initialValue = {\r\n  [variable.username]: \"\",\r\n  [variable.password]: \"\",\r\n};\r\nconst onSubmit = (value, onSubmitProps) => {\r\n  console.log(\"submit value: \", value);\r\n};\r\n\r\n/**\r\n * * hàm test dùng để tạo ra 1 validation custom\r\n * * với tham số 1 là tên của cái validation này\r\n * * tham số 2 là message error\r\n * * tham số 3 là 1 function với value chính là cái data đc input\r\n */\r\n\r\nconst validationSchema = Yup.object({\r\n  [variable.password]: Yup.string()\r\n    .required([variable.require])\r\n    .test(\"checkpassword\", \"Wrong password\", (value, context) => {\r\n      // ? context chính là cái object Yup\r\n      console.log(\"value nay\", value, \" context= \", context);\r\n    }),\r\n  [variable.username]: Yup.string().required([variable.require]),\r\n  // [variable.password]: Yup.string().ph([variable.wrongpassword]),\r\n});\r\nfunction handleSubmit() {}\r\n\r\nfunction Signin() {\r\n  const signInForm = useSelector((state) => getSignInForm(state));\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}\r\n    >\r\n      {/* <div className=\"login-page\">\r\n        <div className=\"form\">\r\n          <Button\r\n            style={{\r\n              height: choseSignInTypeHeight,\r\n              padding: chooseSignInPadding,\r\n              marginBottom: 10,\r\n              width: choseSignInTypeWidth,\r\n              fontSize: 12,\r\n            }}\r\n            type=\"submit\"\r\n            startIcon={\r\n              <FontAwesomeIcon\r\n                icon={faUser}\r\n                width={startIcon}\r\n                height={startIcon}\r\n              />\r\n            }\r\n          >\r\n            Tên và mật khẩu\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            style={{\r\n              height: choseSignInTypeHeight,\r\n              padding: chooseSignInPadding,\r\n              marginBottom: 10,\r\n              width: choseSignInTypeWidth,\r\n              fontSize: 12,\r\n              backgroundColor: \"#e82e1e\",\r\n            }}\r\n            startIcon={\r\n              <FontAwesomeIcon\r\n                icon={faGoogle}\r\n                width={startIcon}\r\n                height={startIcon}\r\n              />\r\n            }\r\n          >\r\n            Google\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            style={{\r\n              height: choseSignInTypeHeight,\r\n              padding: chooseSignInPadding,\r\n              marginBottom: 10,\r\n              width: choseSignInTypeWidth,\r\n              fontSize: 12,\r\n              backgroundColor: \"#c57a09\",\r\n            }}\r\n            startIcon={\r\n              <FontAwesomeIcon\r\n                icon={faPhoneAlt}\r\n                width={startIcon}\r\n                height={startIcon}\r\n              />\r\n            }\r\n          >\r\n            Số điện thoại\r\n          </Button>\r\n        </div>\r\n      </div> */}\r\n      {/* <div style={{ fontSize: 25 }}>- -</div> */}\r\n\r\n      {/* ! Phần div dùng để thay đổi mật khẩu */}\r\n\r\n      {/* <div className=\"login-page\">\r\n        <div className=\"form\">\r\n          <form className=\"login-form\" onSubmit={(e) => handleSubmit(e)}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                paddingLeft: 15,\r\n                fontFamily: \"Roboto\",\r\n              }}\r\n            >\r\n              <p style={{ color: \"grey\", fontSize: headeFontSize }}>\r\n                Thay đổi mật khẩu\r\n              </p>\r\n            </div>\r\n            <TextField\r\n              style={{ width: width, marginBottom: marginBottom }}\r\n              type=\"text\"\r\n              variant=\"standard\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              // onChange={(event) => this.handleChange(event)}\r\n            />\r\n            <div\r\n              className=\"attensin\"\r\n              style={{ textAlign: \"left\", paddingLeft: attensionPadding }}\r\n            >\r\n              <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\r\n                Lưu ý: Mail sẽ đến trong vòng 5 phút\r\n              </p>\r\n            </div>\r\n            <button type=\"submit\" className=\"button\">\r\n              <p>\r\n                <a href=\"#resend\">Gửi yêu cầu</a>\r\n              </p>\r\n            </button>{\" \"}\r\n            <div\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"#bb8322\",\r\n                paddingLeft: 10,\r\n                margin: \"5px 5px 15px 0\",\r\n              }}\r\n            >\r\n              <p id=\"resend\">Gửi lại yêu cầu trong {chooseSignInPadding}s</p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"login-page\">\r\n        <div className=\"form\">\r\n          <form className=\"login-form\" onSubmit={(e) => handleSubmit(e)}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                paddingLeft: 15,\r\n                fontFamily: \"Roboto\",\r\n              }}\r\n            >\r\n              <p style={{ color: \"grey\", fontSize: headeFontSize }}>\r\n                Mật khẩu mới\r\n              </p>\r\n            </div>\r\n            <TextField\r\n              size=\"medium\"\r\n              style={{ marginBottom: marginBottom }}\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              // onChange={(event) => this.handleChange(event)}\r\n            />\r\n            <div\r\n              className=\"attensin\"\r\n              style={{ textAlign: \"left\", paddingLeft: attensionPadding }}\r\n            >\r\n              <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\r\n                Lưu ý: Mail sẽ đến trong vòng 5 phút\r\n              </p>\r\n            </div>\r\n            <button type=\"submit\" className=\"button\">\r\n              <p>\r\n                <a href=\"#resend\">Gửi yêu cầu</a>\r\n              </p>\r\n            </button>{\" \"}\r\n            <div\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"#bb8322\",\r\n                paddingLeft: 10,\r\n                margin: \"5px 5px 15px 0\",\r\n              }}\r\n            >\r\n              <p id=\"resend\">Gửi lại yêu cầu trong {chooseSignInPadding}s</p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div> */}\r\n      <div className=\"login-page\">\r\n        <div className=\"form\">\r\n          <Formik\r\n            initialValues={initialValue}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n          >\r\n            <Form>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  paddingLeft: 15,\r\n                  fontFamily: \"Roboto\",\r\n                }}\r\n              >\r\n                <p style={{ color: \"grey\", fontSize: headeFontSize }}>\r\n                  Đăng nhập\r\n                </p>\r\n                <Box width={5} />\r\n                <p style={{ fontWeight: \"bold\", fontSize: headeFontSize }}>\r\n                  Web Admin\r\n                </p>\r\n              </div>\r\n              {signInForm.map((rows) => {\r\n                const columns = rows.row.cols;\r\n                return columns.map((column) => {\r\n                  const controlType = column.elementType;\r\n                  const {\r\n                    name,\r\n                    type,\r\n                    placeholder,\r\n                    labeltext,\r\n                  } = column.elementConfig;\r\n                  return (\r\n                    <FormControll\r\n                      elementType=\"input\"\r\n                      // label={labeltext}\r\n                      type={type}\r\n                      name={name}\r\n                      placeholder={placeholder}\r\n                      {...column}\r\n                    />\r\n                  );\r\n                });\r\n              })}\r\n              {/* <TextField\r\n                style={{ width: width, marginBottom: marginBottom }}\r\n                type=\"text\"\r\n                variant=\"standard\"\r\n                label=\"Tên tài khoản\"\r\n                name=\"username\"\r\n              />\r\n              <TextField\r\n                style={{ width: width, marginBottom: marginBottom }}\r\n                variant=\"standard\"\r\n                type=\"password\"\r\n                label=\"Mật khẩu\"\r\n                name=\"password\"\r\n              /> */}\r\n              <div\r\n                className=\"attensin\"\r\n                style={{\r\n                  visibility: \"hidden\",\r\n                  textAlign: \"right\",\r\n                  paddingRight: attensionPadding,\r\n                  marginTop: 5,\r\n                }}\r\n              >\r\n                <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\r\n                  Quên mật khẩu?\r\n                </p>\r\n              </div>\r\n              <button type=\"submit\">Đăng nhập</button>\r\n            </Form>\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n"]},"metadata":{},"sourceType":"module"}