{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sam\\\\Documents\\\\GitHub\\\\Capstone-Spring-2021\\\\src\\\\components\\\\SuperTable\\\\AdvanceTable.js\";\nimport { faLock, faLockOpen } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Box, TableFooter, Checkbox } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { setVisible } from \"redux/index\";\nimport TextButton from \"components/MaterialComponent/TextButton\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport clsx from \"clsx\";\nimport { useFormik } from \"formik\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { DeleteButton, UnclockButton } from \"../../components/CustomButton/CustomButton\";\nimport SearchOption from \"../../components/FilterOption/SearchOption/SearchBar\";\nimport { getLocked, removeAdvanceRecordSelected, setSelectedAccountID } from \"../../redux\";\nimport { getAdvanceData, getAdvanceDataByNameSearch, removeAdvanceRecord, getReportedListByAccountId } from \"../../redux/Selector/Selectors\";\nimport * as variable from \"../../variables/Variables\";\nimport EnhancedTableHead from \"../SuperTable/Header/AdvanceHeader\";\nimport { StyledTableCell } from \"./StyledCell\";\nimport { StyledTableRow } from \"./StyledRow\";\nimport ActionButton from \"components/SuperTable/ActionButton\";\nconst NormalPElement = styled.p`\n  font-size: 14px;\n  margin: 0px;\n`;\nconst normalPElement = {\n  fontSize: 14,\n  margin: 0\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === \"light\" ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: \"1 1 100%\"\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const {\n    numSelected\n  } = props;\n  return /*#__PURE__*/React.createElement(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, numSelected > 0 ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, numSelected, \" selected\") : /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    id: \"tableTitle\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Nutrition\"), numSelected > 0 ? /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }))) : /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Filter list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"filter list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FilterListIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    \"& .MuiSelect-root\": {\n      fontSize: 14,\n      margin: 0\n    }\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    // fontSize:14,\n    minWidth: 750,\n    borderCollapse: \"collapse\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  }\n}));\nexport default function EnhancedTable(props) {\n  const {\n    headCells\n  } = props;\n  const classes = useStyles(); // ! row này sẽ đại diện cho dữ liệu lấy trực tiếp từ store (global)\n\n  const rowWithDataFromStore = props.bodyData;\n  const actionButtonList = props.actionbuttonlist; // * cái row ở bên store truyền từ bên component vào\n\n  const [rows, setRows] = React.useState(props.bodyData); // const rows =props.bodyData;\n  //* cái row ở trực tiếp bên store luôn\n\n  let directRowBody = useSelector(state => getAdvanceData(state));\n  const dispatch = useDispatch();\n  let history = useHistory(); // ! history object\n  // * Dùng để đánh dấu account đang bị lock\n\n  const [isLock, setIsLock] = React.useState(0); // ! Dùng để kiểm tra sự thay đổi của  const rowWithDataFromStore = props.bodyData;\n  //!  lấy trực tiếp từ store. Vì ở đây rows đc khởi tạo với useState nên nếu như\n  //! ko thực hiện hàm set của nó thì dù store có thay đổi state thì nó cũng ko tự trigger render\n  // React.useEffect(() => {\n  //   console.log(\"Đã vào effect\", rowWithDataFromStore);\n  //   setRows(rowWithDataFromStore);\n  // }, rowWithDataFromStore);\n  //* Dùng để thông báo rằng những field ko cần phải show ở table\n\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const removeRows = useSelector(state => removeAdvanceRecord(state, selected));\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  /**\r\n   * * Phần này dùng để hiển thị dữ liệu ở body khớp với header mà ko cần quan tâm đến tổ chức của object thế nào\r\n   */\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n  /**\r\n   * tác dụng là mở modal và điền account id đc click\r\n   * @param {*} accountID \r\n   */\n\n\n  function setSelectedAccountIDandOpenModal(accountID) {\n    dispatch(setVisible(true));\n    dispatch(setSelectedAccountID(accountID));\n  } //! tam thoi chua dung den all click\n\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      return;\n    }\n  }; // ! Hàm này sẽ nhận name của cái row đc click và truyền đến trang edit\n  // const handleEdit = (selectedRowName) => {\n  //   console.log(\"user role=\", userRole);\n  //   if (userRole == variable.fleetManagerRole) {\n  //     history.push(variable.fleetmanager + `/truckform/:name${selectedRowName}`);\n  //     history.push({\n  //       pathname: variable.fleetmanager + \"/truckform\",\n  //       search: `?name=${selectedRowName}`,\n  //     });\n  //   }\n  // };\n\n  /**\r\n   * ! row sẽ tượng trưng cái row đc click\r\n   * @param {*} event\r\n   * @param {*} row\r\n   */\n\n\n  const handleClick = (event, row) => {\n    console.log(\"[]\", [variable.userName], \" ko có []\", variable.userName);\n    const {\n      username: name\n    } = row;\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    } // ! tam thoi ta se trien khai tren store\n\n\n    setSelected(newSelected);\n    console.log(\"đc lua\", selected);\n  }; // const deleteRow = () => {\n  //   console.log(\"row moi: \", selected);\n  //   dispatch(removeAdvanceRecordSelected(selected));\n  //   //! tìm ra những row đc lựa chọng\n  // };\n\n\n  const lockRow = () => {\n    console.log(\"row moi: \", selected);\n\n    const getUnlock = async () => {// const res=await dispatch(isAccept())\n    };\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  const formik = useFormik({\n    initialValues: {\n      searchvalue: \"\",\n      filtervalue: \"Name\"\n    },\n    onSubmit: values => {\n      console.log(\"search value\", values);\n\n      switch (values[\"filtervalue\"]) {\n        case \"Name\":\n          // console.log(\n          //   setRows(getAdvanceDataByNameSearch(rows, values[\"searchvalue\"]))\n          // );\n          // setRows(getAdvanceDataByNameSearch(rows, values[\"searchvalue\"]));\n          break;\n\n        case \" Age\":\n          console.log(\"result\", values[\"filtervalue\"]);\n          break;\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    height: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: dense ? \"small\" : \"medium\",\n    \"aria-label\": \"enhanced table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    headCells: props.headCells,\n    actionButtonList: actionButtonList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }\n  }, stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row[variable.userName]);\n    const labelId = `enhanced-table-checkbox-${index}`;\n    const objectInArr = []; //! cái array này sẽ chứa\n\n    const finalArray = []; //! cái array sau khi đã đc xử lí để hiển thị\n\n    for (const key in row) {\n      objectInArr.push({\n        key: key,\n        value: row[key]\n      });\n    }\n    /**\r\n     * * Phần này giúp cho dữ liệu body luôn hiển thị đúng với header\r\n     */\n\n\n    headCells.map(obj => {\n      objectInArr.map(cell => {\n        if (obj.id === cell.key) {\n          //! phần tử trong mảng final có 2 cái, đặc biệt là numeric giúp cho việc hiển thị giữa dữ liệu chữ và số đẹp hơn ở mỗi row của table\n          finalArray.push({\n            key: cell.key,\n            value: cell.value,\n            numeric: obj.numeric\n          });\n        }\n      });\n    }); // //* kết thúc\n\n    return /*#__PURE__*/React.createElement(StyledTableRow, {\n      hover: true,\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row[variable.userName],\n      selected: isItemSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 21\n      }\n    }, actionButtonList.map(obj => {\n      // Nếu action button thuộc loại remove sẽ đc làm riêng\n      if (obj == \"remove\") {\n        return /*#__PURE__*/React.createElement(StyledTableCell, {\n          padding: \"checkbox\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          checked: isItemSelected,\n          inputProps: {\n            \"aria-labelledby\": labelId\n          },\n          onClick: event => handleClick(event, row),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 31\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(ActionButton, {\n        name: obj,\n        row: row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 32\n        }\n      });\n    }), finalArray.map((obj, index) => {\n      if (obj.numeric == false) {\n        return /*#__PURE__*/React.createElement(StyledTableCell, {\n          component: \"th\",\n          id: labelId,\n          scope: \"row\",\n          padding: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 29\n          }\n        }, obj.value);\n      } else {\n        // *Ta sẽ đc xem chi tiết những bài đăng nào bị report nhờ vào dòng code này\n        if (obj.key == variable.numberOfReport) {\n          return /*#__PURE__*/React.createElement(StyledTableCell, {\n            align: \"right\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(TextButton, {\n            text: obj.value,\n            click: () => setSelectedAccountIDandOpenModal(row[variable.id]),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 33\n            }\n          }));\n        } else {\n          return /*#__PURE__*/React.createElement(StyledTableCell, {\n            align: \"right\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 31\n            }\n          }, obj.value);\n        }\n      }\n    }));\n  }), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: (dense ? 33 : 53) * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 3,\n    size: \"small\",\n    style: {\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 19\n    }\n  }, selected.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: 14,\n      margin: 0,\n      paddingLeft: 10,\n      color: variable.materialSecondaryColorMain\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 25\n    }\n  }, selected.length, \" \\u0111\\u01B0\\u1EE3c ch\\u1ECDn\"), /*#__PURE__*/React.createElement(UnclockButton, {\n    click: lockRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      flex: \"1 1 100%\"\n    },\n    variant: \"h6\",\n    id: \"tableTitle\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 8,\n    size: \"small\",\n    style: {\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    style: {\n      fontSize: 14\n    },\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows.length,\n    labelRowsPerPage: /*#__PURE__*/React.createElement(\"p\", {\n      style: normalPElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 23\n      }\n    }, \"Rows per page:\"),\n    labelDisplayedRows: ({\n      from,\n      to,\n      count\n    }) => /*#__PURE__*/React.createElement(\"p\", {\n      style: normalPElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 23\n      }\n    }, from, \"-\", to, \" of \", count !== -1 ? count : \"more than\" + to),\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 19\n    }\n  }))))))));\n}","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/components/SuperTable/AdvanceTable.js"],"names":["faLock","faLockOpen","FontAwesomeIcon","Box","TableFooter","Checkbox","IconButton","Paper","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TablePagination","TableRow","Toolbar","Tooltip","Typography","DeleteIcon","setVisible","TextButton","FilterListIcon","clsx","useFormik","PropTypes","React","useDispatch","useSelector","useHistory","styled","DeleteButton","UnclockButton","SearchOption","getLocked","removeAdvanceRecordSelected","setSelectedAccountID","getAdvanceData","getAdvanceDataByNameSearch","removeAdvanceRecord","getReportedListByAccountId","variable","EnhancedTableHead","StyledTableCell","StyledTableRow","ActionButton","NormalPElement","p","normalPElement","fontSize","margin","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","EnhancedTableToolbar","props","classes","numSelected","propTypes","number","isRequired","useStyles","width","paper","marginBottom","table","minWidth","borderCollapse","visuallyHidden","border","clip","height","overflow","padding","position","top","EnhancedTable","headCells","rowWithDataFromStore","bodyData","actionButtonList","actionbuttonlist","rows","setRows","useState","directRowBody","state","dispatch","history","isLock","setIsLock","setOrder","setOrderBy","selected","setSelected","removeRows","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","event","property","isAsc","setSelectedAccountIDandOpenModal","accountID","handleSelectAllClick","target","checked","newSelecteds","n","name","handleClick","row","console","log","userName","username","selectedIndex","indexOf","newSelected","concat","slice","length","lockRow","getUnlock","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","handleChangeDense","isSelected","emptyRows","Math","min","formik","initialValues","searchvalue","filtervalue","onSubmit","values","isItemSelected","labelId","objectInArr","finalArray","key","push","obj","cell","id","numeric","numberOfReport","display","flexDirection","alignItems","materialSecondaryColorMain","from","to","count"],"mappings":"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","sourcesContent":["import { faLock, faLockOpen } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Box, TableFooter, Checkbox } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { setVisible } from \"redux/index\";\r\nimport TextButton from \"components/MaterialComponent/TextButton\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport clsx from \"clsx\";\r\nimport { useFormik } from \"formik\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { DeleteButton ,UnclockButton} from \"../../components/CustomButton/CustomButton\";\r\nimport SearchOption from \"../../components/FilterOption/SearchOption/SearchBar\";\r\nimport { getLocked, removeAdvanceRecordSelected,setSelectedAccountID } from \"../../redux\";\r\nimport {\r\n  getAdvanceData,\r\n  getAdvanceDataByNameSearch,\r\n  removeAdvanceRecord,\r\n  getReportedListByAccountId\r\n} from \"../../redux/Selector/Selectors\";\r\nimport * as variable from \"../../variables/Variables\";\r\nimport EnhancedTableHead from \"../SuperTable/Header/AdvanceHeader\";\r\nimport { StyledTableCell } from \"./StyledCell\";\r\nimport { StyledTableRow } from \"./StyledRow\";\r\nimport ActionButton from \"components/SuperTable/ActionButton\";\r\n\r\nconst NormalPElement = styled.p`\r\n  font-size: 14px;\r\n  margin: 0px;\r\n`;\r\nconst normalPElement = {\r\n  fontSize: 14,\r\n  margin: 0,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& .MuiSelect-root\": {\r\n      fontSize: 14,\r\n      margin: 0,\r\n    },\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    // fontSize:14,\r\n    minWidth: 750,\r\n    borderCollapse: \"collapse\",\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const { headCells } = props;\r\n  const classes = useStyles();\r\n  // ! row này sẽ đại diện cho dữ liệu lấy trực tiếp từ store (global)\r\n  const rowWithDataFromStore = props.bodyData;\r\n  const actionButtonList = props.actionbuttonlist;\r\n\r\n  // * cái row ở bên store truyền từ bên component vào\r\n  const [rows, setRows] = React.useState(props.bodyData);\r\n  // const rows =props.bodyData;\r\n\r\n  //* cái row ở trực tiếp bên store luôn\r\n  let directRowBody = useSelector((state) => getAdvanceData(state));\r\n\r\n  const dispatch = useDispatch();\r\n  let history = useHistory(); // ! history object\r\n\r\n  // * Dùng để đánh dấu account đang bị lock\r\n  const [isLock, setIsLock] = React.useState(0);\r\n\r\n  // ! Dùng để kiểm tra sự thay đổi của  const rowWithDataFromStore = props.bodyData;\r\n  //!  lấy trực tiếp từ store. Vì ở đây rows đc khởi tạo với useState nên nếu như\r\n  //! ko thực hiện hàm set của nó thì dù store có thay đổi state thì nó cũng ko tự trigger render\r\n  // React.useEffect(() => {\r\n  //   console.log(\"Đã vào effect\", rowWithDataFromStore);\r\n  //   setRows(rowWithDataFromStore);\r\n  // }, rowWithDataFromStore);\r\n\r\n  //* Dùng để thông báo rằng những field ko cần phải show ở table\r\n\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n\r\n  const [selected, setSelected] = React.useState([]);\r\n\r\n  const removeRows = useSelector((state) =>\r\n    removeAdvanceRecord(state, selected)\r\n  );\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n\r\n  /**\r\n   * * Phần này dùng để hiển thị dữ liệu ở body khớp với header mà ko cần quan tâm đến tổ chức của object thế nào\r\n   */\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  /**\r\n   * tác dụng là mở modal và điền account id đc click\r\n   * @param {*} accountID \r\n   */\r\n  function setSelectedAccountIDandOpenModal(accountID){\r\n       dispatch(setVisible(true))\r\n       dispatch(setSelectedAccountID(accountID))\r\n  }\r\n  //! tam thoi chua dung den all click\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      return;\r\n    }\r\n  };\r\n\r\n  // ! Hàm này sẽ nhận name của cái row đc click và truyền đến trang edit\r\n  // const handleEdit = (selectedRowName) => {\r\n  //   console.log(\"user role=\", userRole);\r\n  //   if (userRole == variable.fleetManagerRole) {\r\n  //     history.push(variable.fleetmanager + `/truckform/:name${selectedRowName}`);\r\n  //     history.push({\r\n  //       pathname: variable.fleetmanager + \"/truckform\",\r\n  //       search: `?name=${selectedRowName}`,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  /**\r\n   * ! row sẽ tượng trưng cái row đc click\r\n   * @param {*} event\r\n   * @param {*} row\r\n   */\r\n  const handleClick = (event, row) => {\r\n    console.log(\"[]\", [variable.userName], \" ko có []\", variable.userName);\r\n    const { username: name } = row;\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    // ! tam thoi ta se trien khai tren store\r\n    setSelected(newSelected);\r\n    console.log(\"đc lua\", selected);\r\n  };\r\n\r\n  // const deleteRow = () => {\r\n  //   console.log(\"row moi: \", selected);\r\n  //   dispatch(removeAdvanceRecordSelected(selected));\r\n  //   //! tìm ra những row đc lựa chọng\r\n  // };\r\n  const lockRow = () => {\r\n    console.log(\"row moi: \", selected);\r\n    const getUnlock=async ()=>{\r\n      // const res=await dispatch(isAccept())\r\n\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      searchvalue: \"\",\r\n      filtervalue: \"Name\",\r\n    },\r\n    onSubmit: (values) => {\r\n      console.log(\"search value\", values);\r\n      switch (values[\"filtervalue\"]) {\r\n        case \"Name\":\r\n          // console.log(\r\n          //   setRows(getAdvanceDataByNameSearch(rows, values[\"searchvalue\"]))\r\n          // );\r\n          // setRows(getAdvanceDataByNameSearch(rows, values[\"searchvalue\"]));\r\n          break;\r\n        case \" Age\":\r\n          console.log(\"result\", values[\"filtervalue\"]);\r\n          break;\r\n      }\r\n    },\r\n  });\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        {/* <SearchOption formikAction={formik} /> */}\r\n        <Box height={10} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n              headCells={props.headCells}\r\n              actionButtonList={actionButtonList}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row[variable.userName]);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n                  const objectInArr = []; //! cái array này sẽ chứa\r\n                  const finalArray = []; //! cái array sau khi đã đc xử lí để hiển thị\r\n                  for (const key in row) {\r\n                    objectInArr.push({\r\n                      key: key,\r\n                      value: row[key],\r\n                    });\r\n                  }\r\n                  /**\r\n                   * * Phần này giúp cho dữ liệu body luôn hiển thị đúng với header\r\n                   */\r\n                  headCells.map((obj) => {\r\n                    objectInArr.map((cell) => {\r\n                      if (obj.id === cell.key) {\r\n                        //! phần tử trong mảng final có 2 cái, đặc biệt là numeric giúp cho việc hiển thị giữa dữ liệu chữ và số đẹp hơn ở mỗi row của table\r\n                        finalArray.push({\r\n                        \r\n                          key: cell.key,\r\n                          value: cell.value,\r\n                          numeric: obj.numeric,\r\n                        });\r\n                      }\r\n                    });\r\n                  });\r\n                  // //* kết thúc\r\n                  return (\r\n                    <StyledTableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row[variable.userName]}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      {actionButtonList.map((obj) => {\r\n                        // Nếu action button thuộc loại remove sẽ đc làm riêng\r\n                        if (obj == \"remove\") {\r\n                          return (\r\n                            <StyledTableCell padding=\"checkbox\">\r\n                              <Checkbox\r\n                                checked={isItemSelected}\r\n                                inputProps={{ \"aria-labelledby\": labelId }}\r\n                                onClick={(event) => handleClick(event, row)}\r\n                              />\r\n                            </StyledTableCell>\r\n                          );\r\n                        }\r\n                        return <ActionButton name={obj} row={row} />;\r\n                      })}\r\n\r\n                      {finalArray.map((obj, index) => {\r\n                        if (obj.numeric == false) {\r\n                          return (\r\n                            <StyledTableCell\r\n                              component=\"th\"\r\n                              id={labelId}\r\n                              scope=\"row\"\r\n                              padding=\"none\"\r\n                            >\r\n                              {obj.value}\r\n                            </StyledTableCell>\r\n                          );\r\n                        } else {\r\n                          // *Ta sẽ đc xem chi tiết những bài đăng nào bị report nhờ vào dòng code này\r\n                          if (obj.key == variable.numberOfReport) {\r\n                            return (\r\n                              <StyledTableCell align=\"right\">\r\n                                <TextButton\r\n                                  text={obj.value}\r\n                                  click={() => setSelectedAccountIDandOpenModal(row[variable.id])}\r\n                                ></TextButton>\r\n                              </StyledTableCell>\r\n                            );\r\n                          } else {\r\n                            return (\r\n                              <StyledTableCell align=\"right\">\r\n                                {obj.value}\r\n                              </StyledTableCell>\r\n                            );\r\n                          }\r\n                        }\r\n                      })}\r\n                    </StyledTableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={7} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow style={{ border: \"none\" }}>\r\n                <TableCell colSpan={3} size=\"small\" style={{ padding: 0 }}>\r\n                  <div>\r\n                    {selected.length > 0 ? (\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <p\r\n                          style={{\r\n                            fontSize: 14,\r\n                            margin: 0,\r\n                            paddingLeft: 10,\r\n                            color: variable.materialSecondaryColorMain,\r\n                          }}\r\n                        >\r\n                          {selected.length} được chọn\r\n                        </p>\r\n                        {/* <DeleteButton click={deleteRow} /> */}\r\n                        <UnclockButton click={lockRow} />\r\n                        \r\n                      </div>\r\n                    ) : (\r\n                      <Typography\r\n                        style={{ flex: \"1 1 100%\" }}\r\n                        variant=\"h6\"\r\n                        id=\"tableTitle\"\r\n                        component=\"div\"\r\n                      >\r\n                        <p></p>\r\n                      </Typography>\r\n                    )}\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell colSpan={8} size={\"small\"} style={{ padding: 0 }}>\r\n                  <TablePagination\r\n                    style={{ fontSize: 14 }}\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    labelRowsPerPage={\r\n                      <p style={normalPElement}>Rows per page:</p>\r\n                    }\r\n                    labelDisplayedRows={({ from, to, count }) => (\r\n                      <p style={normalPElement}>\r\n                        {from}-{to}\r\n                        {\" of \"}\r\n                        {count !== -1 ? count : \"more than\" + to}\r\n                      </p>\r\n                    )}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      {/* <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}