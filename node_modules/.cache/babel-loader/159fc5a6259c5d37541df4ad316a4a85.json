{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sam\\\\Documents\\\\GitHub\\\\Capstone-Spring-2021\\\\src\\\\components\\\\SuperTable\\\\NoCustomeTable.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ActionButton from \"components/SuperTable/ActionButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { CancelButton, CheckCircleButton } from \"components/CustomButton/CustomButton\";\nimport { getModalVisible, getVegetableAPIloadingTime, getVegetableFormatList, getSelectedFilter, getUpdateSignal } from \"redux/Selector/Selectors\";\nimport { prepareVegetableData } from \"util/Helper\";\nimport { getAllVegetableUnapproved, setVisible, setSelectedVegetable, setNotificationCount, setVegetableFormatList, setFilterSelect, isAccept, decreaseNotificationCount, setUpdateSingal } from \"redux/index\";\nimport { CardNoFooter } from \"components/Card/Card\";\nimport { Col, Grid, Row } from \"react-bootstrap\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { MaterialButton } from \"components/CustomButton/MaterialButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ShowPopUp, LoadingPopUp } from \"components/Modal/Modal\";\nimport { isConstructorDeclaration } from \"typescript\";\nimport { faCarrot } from \"@fortawesome/free-solid-svg-icons\";\nimport * as variable from \"variables/Variables\"; // function createData(name, calories, fat, carbs, protein) {\n//   return { name, calories, fat, carbs, protein };\n// }\n// function createData(name, calories) {\n//   return { name, calories };\n// }\n// const rows = [\n//   createData(\"Khăc Sâm\", \"Rau Húng\"),\n//   createData(\"Thế Thông\", \"Ngọt lèo\"),\n// ];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: \"name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Hàng đợi\"\n} //   { id: \"calories\", numeric: false, disablePadding: true, label: \"Tên rau\" },\n//   { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n//   { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n//   { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  const seletedFilter = useSelector(state => getSelectedFilter(state));\n  return /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      visibility: \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"fsd\"), /*#__PURE__*/React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: rowCount > 0 && numSelected === rowCount,\n    onChange: onSelectAllClick,\n    style: {\n      visibility: seletedFilter == 1 ? \"hidden\" : \"visible\"\n    },\n    inputProps: {\n      \"aria-label\": \"select all desserts\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  })), headCells.map(headCell => /*#__PURE__*/React.createElement(TableCell, {\n    key: headCell.id,\n    align: headCell.numeric ? \"right\" : \"left\",\n    padding: headCell.disablePadding ? \"none\" : \"default\",\n    sortDirection: orderBy === headCell.id ? order : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: orderBy === headCell.id ? order : \"asc\",\n    onClick: createSortHandler(headCell.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0,\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, headCell.label), orderBy === headCell.id ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, order === \"desc\" ? \"sorted descending\" : \"sorted ascending\") : null)))));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === \"light\" ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: \"1 1 100%\"\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const {\n    numSelected\n  } = props; //! Ta phải làm hơi lằn nhằn để có thể lấy đc value của menu dropdwon\n\n  const options = [\"chưa duyệt\", \"đã duyệt\", \"tất cả\"];\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const dispatch = useDispatch();\n\n  const handleFilterClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = event => {\n    setAnchorEl(null);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    console.log(\"Lựa chọn= \", index);\n    setSelectedIndex(index);\n    setAnchorEl(null);\n    dispatch(setFilterSelect(index));\n  };\n\n  return /*#__PURE__*/React.createElement(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }\n  }, numSelected > 0 ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, numSelected, \" l\\u1EF1a ch\\u1ECDn\") : /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    id: \"tableTitle\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, selectedIndex == 2 ? \"Tất cả rau trong hệ thống\" : `Rau ${options[selectedIndex]}`), numSelected > 0 ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Ch\\u1EA5p nh\\u1EADn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CheckCircleButton, {\n    click: () => dispatch(setVisible(true)),\n    \"aria-label\": \"ch\\u1EA5p nh\\u1EADn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"B\\u1ED9 l\\u1ECDc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"b\\u1ED9 l\\u1ECDc\",\n    onClick: event => handleFilterClick(event),\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FilterListIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, options.map((option, index) => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: option,\n      selected: index === selectedIndex,\n      onClick: event => handleMenuItemClick(event, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, option);\n  }))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  }\n}));\nexport default function EnhancedTable(props) {\n  const actionbuttonlist = props.actionbuttonlist;\n  const classes = useStyles();\n  const visible = useSelector(state => getModalVisible(state));\n  let loading = useSelector(state => getVegetableAPIloadingTime(state));\n  const updateSignal = useSelector(state => getUpdateSignal(state)); // const fullList = useSelector((state) => getVegetableFormatList(state));\n\n  const [fullList, setFulllList] = React.useState([]);\n  const [rows, setRows] = React.useState([]);\n  const seletedFilter = useSelector(state => getSelectedFilter(state));\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [selectedForStore, setSelectedForStore] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const dispatch = useDispatch();\n  const normalPElement = {\n    fontSize: 14,\n    margin: 0\n  };\n  React.useEffect(() => {\n    const update = async () => {\n      if (updateSignal == true) {\n        await updateVegetableData();\n        dispatch(setUpdateSingal(false));\n      }\n    };\n\n    update();\n  }, [updateSignal]);\n\n  const change = fullList => {\n    let tmp = [];\n\n    switch (seletedFilter) {\n      case 0:\n        tmp = [...fullList.filter(function (e) {\n          return e[variable.vegetableStatus] == false;\n        })];\n        console.log(\"list= \", fullList.filter(function (e) {\n          return e[variable.vegetableStatus] == false;\n        }));\n        break;\n\n      case 1:\n        tmp = [...fullList.filter(function (e) {\n          return e[variable.vegetableStatus] == true;\n        })];\n        console.log(\"list= \", fullList.filter(function (e) {\n          return e[variable.vegetableStatus] == true;\n        }));\n        break;\n\n      case 2:\n        tmp = [...fullList];\n        break;\n    }\n\n    return tmp; // setRows(tmp);\n  }; // ! effect nay se kiểm tra sự thay đổi của filter rồi thay đổi list trong table\n\n\n  React.useEffect(() => {\n    setRows(change(fullList));\n  }, [seletedFilter]); //! hàm dùng để đóng modal\n\n  const closeModal = () => {\n    dispatch(setVisible(false));\n  };\n  /**\r\n   ** Hàm dùng để từ chối những rau sai thông tin\r\n   */\n\n\n  const failTest = () => {\n    const vegetableCensorship = async () => {\n      try {\n        await dispatch(isAccept({\n          id: selected,\n          status: 3\n        })); //! sau khi submit thành công thì cập nhật row và load lại list\n\n        const res = await dispatch(getAllVegetableUnapproved());\n        const tmp = await [...prepareVegetableData(res.payload.data)];\n        await setRows(change(tmp));\n        await setFulllList(tmp); //! tắt những select đc chọn, xóa những item cần confirm\n\n        await setSelected([]);\n        await setSelectedForStore([]);\n        await dispatch(decreaseNotificationCount(selected.length));\n        closeModal();\n      } catch (error) {\n        console.log(\"Normal table error: \", error);\n      }\n    };\n\n    vegetableCensorship();\n  };\n  /**\r\n   ** Hàm dùng để duyệt những rau đúng thông tin\r\n   */\n\n\n  const passTest = () => {\n    const vegetableCensorship = async () => {\n      try {\n        await dispatch(isAccept({\n          id: selected,\n          status: 2\n        })); //! sau khi submit thành công thì cập nhật row và load lại list\n\n        const res = await dispatch(getAllVegetableUnapproved());\n        const tmp = await [...prepareVegetableData(res.payload.data)];\n        await setRows(change(tmp));\n        await setFulllList(tmp); //! tắt những select đc chọn, xóa những item cần confirm\n\n        await setSelected([]);\n        await setSelectedForStore([]);\n        await dispatch(decreaseNotificationCount(selected.length));\n        closeModal();\n      } catch (error) {\n        console.log(\"Normal table error: \", error);\n      }\n    };\n\n    vegetableCensorship();\n  };\n\n  async function updateVegetableData() {\n    let hava = [];\n    const response = await dispatch(getAllVegetableUnapproved()); // if (Object.keys(response.payload.data).length !== 0) {\n\n    if (response.payload.data.filter(function (e) {\n      return e[variable.vegetableStatus] == false;\n    }).length != 0) {\n      hava = [...prepareVegetableData(response.payload.data)];\n      console.log(\"table đây ngày 27/5= \", hava);\n      await dispatch(setNotificationCount(hava.length));\n      setFulllList(hava);\n      setRows(hava.filter(function (e) {\n        return e[variable.vegetableStatus] == false;\n      }));\n    } else {\n      hava = [...prepareVegetableData(response.payload.data)];\n      console.log(\"table đây= \", hava);\n      await dispatch(setNotificationCount(0));\n      setFulllList(hava);\n      setRows(hava.filter(function (e) {\n        return e[variable.vegetableStatus] == false;\n      }));\n    }\n  }\n\n  React.useEffect(() => {\n    updateVegetableData();\n  }, []);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  }; //! Click hết tất cả lựa chọn\n\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const onlyFalseStatus = rows.filter(n => {\n        return n[variable.vegetableStatus] == false;\n      }); //! cái này dùng cho table\n\n      const newSelecteds = onlyFalseStatus.map(n => n.ID); //! Cái này dùng cho dialog confirm\n\n      const newSelectedForStore = [];\n      onlyFalseStatus.map(n => {\n        newSelectedForStore.push({\n          id: n.ID,\n          image: n.vegetableImage,\n          name: n.vegetableName\n        });\n      });\n      setSelected(newSelecteds);\n      setSelectedForStore(onlyFalseStatus);\n      return;\n    }\n\n    setSelected([]);\n    setSelectedForStore([]);\n  };\n\n  const handleClick = row => {\n    //* row đc click sẽ dựa theo ID của nó\n    console.log(\"row= \", row.ID);\n    const {\n      ID,\n      vegetableName,\n      vegetableImage\n    } = row;\n    const item = {\n      id: ID,\n      image: vegetableImage,\n      name: vegetableName\n    }; // ! index của cái item đc chọn\n\n    const selectedIndex = selected.indexOf(ID);\n    let newSelected = [];\n    let newSelectedForStore = []; //! list dành riêng cho store\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, ID);\n      newSelectedForStore = newSelectedForStore.concat(selectedForStore, item);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n      newSelectedForStore = newSelectedForStore.concat(selectedForStore.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n      newSelectedForStore = newSelectedForStore.concat(selectedForStore.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      newSelectedForStore = newSelectedForStore.concat(selectedForStore.slice(0, selectedIndex), selectedForStore.slice(selectedIndex + 1));\n    } // ! Ở chỗ này là ta sẽ có đc 1 list những item đc check\n\n\n    setSelected(newSelected); //! tạo 1 list những item dc chọn ở store để hiện lên popup\n\n    setSelectedForStore(newSelectedForStore);\n    console.log(newSelected, \" Đây là selected for store: \", newSelectedForStore);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    console.log(\"change page\");\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    console.log(\"row per page\");\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const showVegetableDetail = row => {\n    dispatch(setSelectedVegetable(row));\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MaterialButton, {\n    type: \"button\",\n    variant: \"contained\",\n    color: \"info\",\n    size: \"large\",\n    click: () => updateVegetableData(),\n    style: {\n      left: -20,\n      top: -46\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 7\n    }\n  }, \"C\\u1EADp nh\\u1EADt\"), console.log(\"rows\", rows), /*#__PURE__*/React.createElement(ShowPopUp, {\n    visible: visible,\n    onCLose: closeModal,\n    length: \"50%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LoadingPopUp, {\n    visible: loading,\n    length: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    style: {\n      margin: 0,\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardNoFooter, {\n    title: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 20\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-background-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      style: {\n        height: 200,\n        width: 300\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginBottom: 15,\n        marginTop: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 25\n      }\n    }, selectedForStore.map(selected => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: selected.image,\n        height: \"70\",\n        width: \"70\",\n        style: {\n          border: \"1px solid #ddd\",\n          borderRadius: 4,\n          padding: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          margin: 0,\n          marginLeft: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 33\n        }\n      }, selected.name));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MaterialButton, {\n      variant: \"contained\",\n      color: \"error\",\n      size: \"large\",\n      style: {\n        marginRight: 5\n      },\n      click: () => failTest(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 27\n      }\n    }, \"T\\u1EEB ch\\u1ED1i\"), /*#__PURE__*/React.createElement(MaterialButton, {\n      variant: \"contained\",\n      color: \"success\",\n      size: \"large\",\n      style: {\n        marginRight: 5\n      },\n      onClick: () => passTest(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 27\n      }\n    }, \"Ch\\u1EA5p nh\\u1EADn\"))))))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EnhancedTableToolbar, {\n    numSelected: selected.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: \"small\",\n    \"aria-label\": \"enhanced table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 15\n    }\n  }, stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row.ID);\n    const labelId = `enhanced-table-checkbox-${index}`;\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true //   onClick={(event) => handleClick(event, row.name)}\n      ,\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected //   tabIndex={-1}\n      ,\n      key: row.vegetableName + \"index-\" + index,\n      selected: isItemSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 23\n      }\n    }, actionbuttonlist.map((obj, index) => {\n      if (obj == \"remove\") {\n        return /*#__PURE__*/React.createElement(TableCell, {\n          padding: \"checkbox\",\n          key: obj.labelId + index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          onClick: () => handleClick(row),\n          checked: isItemSelected,\n          style: {\n            visibility: row[variable.vegetableStatus] == true ? \"hidden\" : \"visible\"\n          },\n          ops: {\n            \"aria-labelledby\": labelId\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 33\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(ActionButton, {\n        key: \"action-butoon\" + obj.labelId + index,\n        name: obj,\n        row: row,\n        click: () => showVegetableDetail(row),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 29\n        }\n      });\n    }), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      id: labelId,\n      scope: \"row\",\n      padding: \"none\",\n      key: row[variable.id + \"index\" + index],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: 0,\n        color: \"green\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: row.vegetableImage,\n      style: {\n        width: 50,\n        height: 50,\n        marginTop: 10,\n        marginBottom: 10,\n        marginRight: 10,\n        border: \"1px solid grey\",\n        boxSizing: \"border-box\",\n        padding: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 29\n      }\n    }), row.vegetableName)));\n  }), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: (dense ? 33 : 53) * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows.length,\n    labelRowsPerPage: /*#__PURE__*/React.createElement(\"p\", {\n      style: normalPElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 15\n      }\n    }, \"S\\u1ED1 l\\u01B0\\u1EE3ng rau m\\u1ED7i trang:\"),\n    labelDisplayedRows: ({\n      from,\n      to,\n      count\n    }) => /*#__PURE__*/React.createElement(\"p\", {\n      style: normalPElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 15\n      }\n    }, from, \"-\", to, \" trong \", count !== -1 ? count : \"nhiều hơn\" + to),\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/components/SuperTable/NoCustomeTable.js"],"names":["React","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","ActionButton","Menu","MenuItem","CancelButton","CheckCircleButton","getModalVisible","getVegetableAPIloadingTime","getVegetableFormatList","getSelectedFilter","getUpdateSignal","prepareVegetableData","getAllVegetableUnapproved","setVisible","setSelectedVegetable","setNotificationCount","setVegetableFormatList","setFilterSelect","isAccept","decreaseNotificationCount","setUpdateSingal","CardNoFooter","Col","Grid","Row","PerfectScrollbar","MaterialButton","useDispatch","useSelector","ShowPopUp","LoadingPopUp","isConstructorDeclaration","faCarrot","variable","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","seletedFilter","state","visibility","headCell","margin","fontWeight","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","EnhancedTableToolbar","options","anchorEl","setAnchorEl","useState","selectedIndex","setSelectedIndex","dispatch","handleFilterClick","currentTarget","handleClose","handleMenuItemClick","console","log","Boolean","option","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","overflow","padding","position","top","EnhancedTable","actionbuttonlist","visible","loading","updateSignal","fullList","setFulllList","rows","setRows","setOrder","setOrderBy","selected","setSelected","selectedForStore","setSelectedForStore","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","normalPElement","fontSize","useEffect","update","updateVegetableData","change","tmp","filter","e","vegetableStatus","closeModal","failTest","vegetableCensorship","status","res","payload","data","length","error","passTest","hava","response","handleRequestSort","isAsc","handleSelectAllClick","target","checked","onlyFalseStatus","n","newSelecteds","ID","newSelectedForStore","push","image","vegetableImage","name","vegetableName","handleClick","row","item","indexOf","newSelected","concat","slice","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","handleChangeDense","showVegetableDetail","isSelected","emptyRows","Math","min","left","display","flexDirection","marginTop","alignItems","borderRadius","marginLeft","marginRight","isItemSelected","labelId","obj","boxSizing","from","to","count"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ActionButton from \"components/SuperTable/ActionButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {\r\n  CancelButton,\r\n  CheckCircleButton,\r\n} from \"components/CustomButton/CustomButton\";\r\nimport {\r\n  getModalVisible,\r\n  getVegetableAPIloadingTime,\r\n  getVegetableFormatList,\r\n  getSelectedFilter,\r\n  getUpdateSignal,\r\n} from \"redux/Selector/Selectors\";\r\nimport { prepareVegetableData } from \"util/Helper\";\r\nimport {\r\n  getAllVegetableUnapproved,\r\n  setVisible,\r\n  setSelectedVegetable,\r\n  setNotificationCount,\r\n  setVegetableFormatList,\r\n  setFilterSelect,\r\n  isAccept,\r\n  decreaseNotificationCount,\r\n  setUpdateSingal,\r\n} from \"redux/index\";\r\nimport { CardNoFooter } from \"components/Card/Card\";\r\nimport { Col, Grid, Row } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { MaterialButton } from \"components/CustomButton/MaterialButton\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ShowPopUp, LoadingPopUp } from \"components/Modal/Modal\";\r\nimport { isConstructorDeclaration } from \"typescript\";\r\nimport { faCarrot } from \"@fortawesome/free-solid-svg-icons\";\r\nimport * as variable from \"variables/Variables\";\r\n// function createData(name, calories, fat, carbs, protein) {\r\n//   return { name, calories, fat, carbs, protein };\r\n// }\r\n// function createData(name, calories) {\r\n//   return { name, calories };\r\n// }\r\n// const rows = [\r\n//   createData(\"Khăc Sâm\", \"Rau Húng\"),\r\n//   createData(\"Thế Thông\", \"Ngọt lèo\"),\r\n// ];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Hàng đợi\",\r\n  },\r\n  //   { id: \"calories\", numeric: false, disablePadding: true, label: \"Tên rau\" },\r\n  //   { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  //   { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  //   { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n  const seletedFilter = useSelector((state) => getSelectedFilter(state));\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell style={{ visibility: \"hidden\" }}>fsd</TableCell>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            style={{\r\n              visibility: seletedFilter == 1 ? \"hidden\" : \"visible\",\r\n            }}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              <p style={{ margin: 0, fontWeight: \"bold\" }}>{headCell.label}</p>\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  //! Ta phải làm hơi lằn nhằn để có thể lấy đc value của menu dropdwon\r\n  const options = [\"chưa duyệt\", \"đã duyệt\", \"tất cả\"];\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleFilterClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    console.log(\"Lựa chọn= \", index);\r\n    setSelectedIndex(index);\r\n    setAnchorEl(null);\r\n    dispatch(setFilterSelect(index));\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} lựa chọn\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {selectedIndex == 2\r\n            ? \"Tất cả rau trong hệ thống\"\r\n            : `Rau ${options[selectedIndex]}`}\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <React.Fragment>\r\n          <Tooltip title=\"Chấp nhận\">\r\n            <CheckCircleButton\r\n              click={() => dispatch(setVisible(true))}\r\n              aria-label=\"chấp nhận\"\r\n            />\r\n          </Tooltip>\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n          <Tooltip title=\"Bộ lọc\">\r\n            <IconButton\r\n              aria-label=\"bộ lọc\"\r\n              onClick={(event) => handleFilterClick(event)}\r\n              aria-controls=\"simple-menu\"\r\n              aria-haspopup=\"true\"\r\n            >\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            {options.map((option, index) => {\r\n              return (\r\n                <MenuItem\r\n                  key={option}\r\n                  selected={index === selectedIndex}\r\n                  onClick={(event) => handleMenuItemClick(event, index)}\r\n                >\r\n                  {option}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n\r\n            {/* <MenuItem onClick={handleClose}>Đã duyệt</MenuItem> */}\r\n            {/* <MenuItem onClick={handleClose}>Tất cả</MenuItem> */}\r\n          </Menu>\r\n        </React.Fragment>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const actionbuttonlist = props.actionbuttonlist;\r\n  const classes = useStyles();\r\n  const visible = useSelector((state) => getModalVisible(state));\r\n  let loading = useSelector((state) => getVegetableAPIloadingTime(state));\r\n  const updateSignal = useSelector((state) => getUpdateSignal(state));\r\n  // const fullList = useSelector((state) => getVegetableFormatList(state));\r\n  const [fullList, setFulllList] = React.useState([]);\r\n  const [rows, setRows] = React.useState([]);\r\n  const seletedFilter = useSelector((state) => getSelectedFilter(state));\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [selectedForStore, setSelectedForStore] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const dispatch = useDispatch();\r\n  const normalPElement = {\r\n    fontSize: 14,\r\n    margin: 0,\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const update = async () => {\r\n      if (updateSignal == true) {\r\n        await updateVegetableData();\r\n        dispatch(setUpdateSingal(false));\r\n      }\r\n    };\r\n    update();\r\n  }, [updateSignal]);\r\n\r\n  const change = (fullList) => {\r\n    let tmp = [];\r\n    switch (seletedFilter) {\r\n      case 0:\r\n        tmp = [\r\n          ...fullList.filter(function (e) {\r\n            return e[variable.vegetableStatus] == false;\r\n          }),\r\n        ];\r\n        console.log(\r\n          \"list= \",\r\n          fullList.filter(function (e) {\r\n            return e[variable.vegetableStatus] == false;\r\n          })\r\n        );\r\n        break;\r\n      case 1:\r\n        tmp = [\r\n          ...fullList.filter(function (e) {\r\n            return e[variable.vegetableStatus] == true;\r\n          }),\r\n        ];\r\n        console.log(\r\n          \"list= \",\r\n          fullList.filter(function (e) {\r\n            return e[variable.vegetableStatus] == true;\r\n          })\r\n        );\r\n        break;\r\n      case 2:\r\n        tmp = [...fullList];\r\n        break;\r\n    }\r\n    return tmp;\r\n    // setRows(tmp);\r\n  };\r\n\r\n  // ! effect nay se kiểm tra sự thay đổi của filter rồi thay đổi list trong table\r\n  React.useEffect(() => {\r\n    setRows(change(fullList));\r\n  }, [seletedFilter]);\r\n\r\n  //! hàm dùng để đóng modal\r\n  const closeModal = () => {\r\n    dispatch(setVisible(false));\r\n  };\r\n\r\n  /**\r\n   ** Hàm dùng để từ chối những rau sai thông tin\r\n   */\r\n  const failTest = () => {\r\n    const vegetableCensorship = async () => {\r\n      try {\r\n        await dispatch(\r\n          isAccept({\r\n            id: selected,\r\n            status: 3,\r\n          })\r\n        );\r\n\r\n        //! sau khi submit thành công thì cập nhật row và load lại list\r\n        const res = await dispatch(getAllVegetableUnapproved());\r\n        const tmp = await [...prepareVegetableData(res.payload.data)];\r\n        await setRows(change(tmp));\r\n        await setFulllList(tmp);\r\n\r\n        //! tắt những select đc chọn, xóa những item cần confirm\r\n        await setSelected([]);\r\n        await setSelectedForStore([]);\r\n        await dispatch(decreaseNotificationCount(selected.length));\r\n        closeModal();\r\n      } catch (error) {\r\n        console.log(\"Normal table error: \", error);\r\n      }\r\n    };\r\n    vegetableCensorship();\r\n  };\r\n\r\n  /**\r\n   ** Hàm dùng để duyệt những rau đúng thông tin\r\n   */\r\n  const passTest = () => {\r\n    const vegetableCensorship = async () => {\r\n      try {\r\n        await dispatch(\r\n          isAccept({\r\n            id: selected,\r\n            status: 2,\r\n          })\r\n        );\r\n\r\n        //! sau khi submit thành công thì cập nhật row và load lại list\r\n        const res = await dispatch(getAllVegetableUnapproved());\r\n        const tmp = await [...prepareVegetableData(res.payload.data)];\r\n        await setRows(change(tmp));\r\n        await setFulllList(tmp);\r\n\r\n        //! tắt những select đc chọn, xóa những item cần confirm\r\n        await setSelected([]);\r\n        await setSelectedForStore([]);\r\n        await dispatch(decreaseNotificationCount(selected.length));\r\n        closeModal();\r\n      } catch (error) {\r\n        console.log(\"Normal table error: \", error);\r\n      }\r\n    };\r\n    vegetableCensorship();\r\n  };\r\n\r\n  async function updateVegetableData() {\r\n    let hava = [];\r\n    const response = await dispatch(getAllVegetableUnapproved());\r\n    // if (Object.keys(response.payload.data).length !== 0) {\r\n    if (\r\n      response.payload.data.filter(function (e) {\r\n        return e[variable.vegetableStatus] == false;\r\n      }).length != 0\r\n    ) {\r\n      hava = [...prepareVegetableData(response.payload.data)];\r\n      console.log(\"table đây ngày 27/5= \", hava);\r\n      await dispatch(setNotificationCount(hava.length));\r\n      setFulllList(hava);\r\n      setRows(\r\n        hava.filter(function (e) {\r\n          return e[variable.vegetableStatus] == false;\r\n        })\r\n      );\r\n    } else {\r\n      hava = [...prepareVegetableData(response.payload.data)];\r\n      console.log(\"table đây= \", hava);\r\n      await dispatch(setNotificationCount(0));\r\n      setFulllList(hava);\r\n      setRows(\r\n        hava.filter(function (e) {\r\n          return e[variable.vegetableStatus] == false;\r\n        })\r\n      );\r\n    }\r\n  }\r\n  React.useEffect(() => {\r\n    updateVegetableData();\r\n  }, []);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  //! Click hết tất cả lựa chọn\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const onlyFalseStatus = rows.filter((n) => {\r\n        return n[variable.vegetableStatus] == false;\r\n      });\r\n\r\n      //! cái này dùng cho table\r\n      const newSelecteds = onlyFalseStatus.map((n) => n.ID);\r\n      //! Cái này dùng cho dialog confirm\r\n      const newSelectedForStore = [];\r\n\r\n      onlyFalseStatus.map((n) => {\r\n        newSelectedForStore.push({\r\n          id: n.ID,\r\n          image: n.vegetableImage,\r\n          name: n.vegetableName,\r\n        });\r\n      });\r\n      setSelected(newSelecteds);\r\n      setSelectedForStore(onlyFalseStatus);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n    setSelectedForStore([]);\r\n  };\r\n\r\n  const handleClick = (row) => {\r\n    //* row đc click sẽ dựa theo ID của nó\r\n    console.log(\"row= \", row.ID);\r\n    const { ID, vegetableName, vegetableImage } = row;\r\n    const item = {\r\n      id: ID,\r\n      image: vegetableImage,\r\n      name: vegetableName,\r\n    };\r\n\r\n    // ! index của cái item đc chọn\r\n    const selectedIndex = selected.indexOf(ID);\r\n    let newSelected = [];\r\n    let newSelectedForStore = []; //! list dành riêng cho store\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, ID);\r\n      newSelectedForStore = newSelectedForStore.concat(selectedForStore, item);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n      newSelectedForStore = newSelectedForStore.concat(\r\n        selectedForStore.slice(1)\r\n      );\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n      newSelectedForStore = newSelectedForStore.concat(\r\n        selectedForStore.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n      newSelectedForStore = newSelectedForStore.concat(\r\n        selectedForStore.slice(0, selectedIndex),\r\n        selectedForStore.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    // ! Ở chỗ này là ta sẽ có đc 1 list những item đc check\r\n    setSelected(newSelected);\r\n\r\n    //! tạo 1 list những item dc chọn ở store để hiện lên popup\r\n    setSelectedForStore(newSelectedForStore);\r\n\r\n    console.log(\r\n      newSelected,\r\n      \" Đây là selected for store: \",\r\n      newSelectedForStore\r\n    );\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    console.log(\"change page\");\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    console.log(\"row per page\");\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const showVegetableDetail = (row) => {\r\n    dispatch(setSelectedVegetable(row));\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MaterialButton\r\n        type=\"button\"\r\n        variant=\"contained\"\r\n        color=\"info\"\r\n        size=\"large\"\r\n        click={() => updateVegetableData()}\r\n        style={{ left: -20, top: -46 }}\r\n      >\r\n        Cập nhật\r\n      </MaterialButton>\r\n      {console.log(\"rows\", rows)}\r\n      <ShowPopUp visible={visible} onCLose={closeModal} length=\"50%\">\r\n        <LoadingPopUp visible={loading} length=\"200px\" />\r\n        <Grid fluid style={{ margin: 0, padding: 0 }}>\r\n          <CardNoFooter\r\n            title={<React.Fragment></React.Fragment>}\r\n            content={\r\n              <React.Fragment>\r\n                <Row>\r\n                  <Col xs={7}>\r\n                    <div className=\"post-background-content\">\r\n                      {/* <p className=\"post-text-header\">Xác nhận lựa chọn</p> */}\r\n                      <PerfectScrollbar style={{ height: 200, width: 300 }}>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            marginBottom: 15,\r\n                            marginTop: 15,\r\n                          }}\r\n                        >\r\n                          {selectedForStore.map((selected) => {\r\n                            return (\r\n                              <div\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  alignItems: \"center\",\r\n                                  marginBottom: 15,\r\n                                }}\r\n                              >\r\n                                <img\r\n                                  src={selected.image}\r\n                                  height=\"70\"\r\n                                  width=\"70\"\r\n                                  style={{\r\n                                    border: \"1px solid #ddd\",\r\n                                    borderRadius: 4,\r\n                                    padding: 5,\r\n                                  }}\r\n                                />\r\n                                <p style={{ margin: 0, marginLeft: 15 }}>\r\n                                  {selected.name}\r\n                                </p>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </PerfectScrollbar>\r\n                      <div>\r\n                        <div style={{ display: \"flex\", marginTop: 10 }}>\r\n                          <MaterialButton\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            size=\"large\"\r\n                            style={{ marginRight: 5 }}\r\n                            click={() => failTest()}\r\n                          >\r\n                            Từ chối\r\n                          </MaterialButton>\r\n                          <MaterialButton\r\n                            variant=\"contained\"\r\n                            color=\"success\"\r\n                            size=\"large\"\r\n                            style={{ marginRight: 5 }}\r\n                            onClick={() => passTest()}\r\n                          >\r\n                            Chấp nhận\r\n                          </MaterialButton>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </Grid>\r\n      </ShowPopUp>\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <EnhancedTableToolbar numSelected={selected.length} />\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size=\"small\"\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={rows.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(rows, getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const isItemSelected = isSelected(row.ID);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        //   onClick={(event) => handleClick(event, row.name)}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        //   tabIndex={-1}\r\n                        key={row.vegetableName + \"index-\" + index}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        {actionbuttonlist.map((obj, index) => {\r\n                          if (obj == \"remove\") {\r\n                            return (\r\n                              <TableCell\r\n                                padding=\"checkbox\"\r\n                                key={obj.labelId + index}\r\n                              >\r\n                                <Checkbox\r\n                                  onClick={() => handleClick(row)}\r\n                                  checked={isItemSelected}\r\n                                  style={{\r\n                                    visibility:\r\n                                      row[variable.vegetableStatus] == true\r\n                                        ? \"hidden\"\r\n                                        : \"visible\",\r\n                                  }}\r\n                                  ops={{ \"aria-labelledby\": labelId }}\r\n                                />\r\n                              </TableCell>\r\n                            );\r\n                          }\r\n                          return (\r\n                            <ActionButton\r\n                              key={\"action-butoon\" + obj.labelId + index}\r\n                              name={obj}\r\n                              row={row}\r\n                              click={() => showVegetableDetail(row)}\r\n                            />\r\n                          );\r\n                        })}\r\n                        {/* <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell> */}\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          padding=\"none\"\r\n                          key={row[variable.id + \"index\" + index]}\r\n                        >\r\n                          <p style={{ margin: 0, color: \"green\" }}>\r\n                            <img\r\n                              src={row.vegetableImage}\r\n                              style={{\r\n                                width: 50,\r\n                                height: 50,\r\n                                marginTop: 10,\r\n                                marginBottom: 10,\r\n                                marginRight: 10,\r\n                                border: \"1px solid grey\",\r\n                                boxSizing: \"border-box\",\r\n                                padding: 2,\r\n                              }}\r\n                            />\r\n                            {row.vegetableName}\r\n                            {/* <span> - Khắc sâm</span> */}\r\n                          </p>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                    <TableCell colSpan={2} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            labelRowsPerPage={\r\n              <p style={normalPElement}>Số lượng rau mỗi trang:</p>\r\n            }\r\n            labelDisplayedRows={({ from, to, count }) => (\r\n              <p style={normalPElement}>\r\n                {from}-{to}\r\n                {\" trong \"}\r\n                {count !== -1 ? count : \"nhiều hơn\" + to}\r\n              </p>\r\n            )}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        {/* <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      /> */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}