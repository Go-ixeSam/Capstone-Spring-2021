{"ast":null,"code":"// import ContractType from \"./contractType\";\nimport * as variable from \"../../variables/Variables\";\nimport JSONPLACEHOLDERApi from \"api/JSONPLACEHOLDERApi\";\nimport { createPostData, convertDateToString } from \"util/ContructorCreation\";\n\nconst {\n  createSlice,\n  createAsyncThunk\n} = require(\"@reduxjs/toolkit\");\n\nconst date = new Date();\n/**\r\n * * Hàm có mục đích cho việc test\r\n * ! trả về ngày tiếp theo\r\n */\n\nfunction getNextDate(currentDate) {\n  return currentDate.setDate(new Date().getDate() + 1);\n}\n\nfunction createDateForTest() {\n  var currentDate = new Date();\n  var data = [];\n\n  for (var i = 0; i >= 5; i++) {\n    data.push(createPostData(i, \"sam\", currentDate, 3, 12));\n    currentDate = getNextDate(currentDate);\n  }\n\n  return data;\n}\n\nconst post = createSlice({\n  name: \"post\",\n  initialState: {\n    [variable.advanceTableData]: createPostData(),\n    current: {},\n    loadingL: false,\n    error: \"\",\n    userPostVisible: false\n  },\n  reducers: {\n    setVisible: (state, action) => {\n      state.userPostVisible = action.payload;\n    }\n  } //   extraReducers: {\n  //     [getALL.pending]: (state) => {},\n  //     [getALL.rejected]: (state, action) => {\n  //       state.error = action.error;\n  //     },\n  //     [getALL.fulfilled]: (state, action) => {\n  //       state.current = action.payload;\n  //     },\n  //   },\n\n});\nconst {\n  reducer: postReducer,\n  actions\n} = post; //createSlice sẽ trả về cho ta 2 biến là reducer và action\n\nexport const {\n  setVisible\n} = actions;\nexport default postReducer;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/redux/Post/PostSlice.jsx"],"names":["variable","JSONPLACEHOLDERApi","createPostData","convertDateToString","createSlice","createAsyncThunk","require","date","Date","getNextDate","currentDate","setDate","getDate","createDateForTest","data","i","push","post","name","initialState","advanceTableData","current","loadingL","error","userPostVisible","reducers","setVisible","state","action","payload","reducer","postReducer","actions"],"mappings":"AAAA;AACA,OAAO,KAAKA,QAAZ,MAA0B,2BAA1B;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;AACA,SAASC,cAAT,EAAyBC,mBAAzB,QAAoD,yBAApD;;AAEA,MAAM;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAAoCC,OAAO,CAAC,kBAAD,CAAjD;;AACA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA;;;;;AAIA,SAASC,WAAT,CAAqBC,WAArB,EAAkC;AAChC,SAAOA,WAAW,CAACC,OAAZ,CAAoB,IAAIH,IAAJ,GAAWI,OAAX,KAAuB,CAA3C,CAAP;AACD;;AAED,SAASC,iBAAT,GAA6B;AAC3B,MAAIH,WAAW,GAAG,IAAIF,IAAJ,EAAlB;AACA,MAAIM,IAAI,GAAG,EAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,IAAAA,IAAI,CAACE,IAAL,CAAUd,cAAc,CAACa,CAAD,EAAI,KAAJ,EAAWL,WAAX,EAAwB,CAAxB,EAA2B,EAA3B,CAAxB;AACAA,IAAAA,WAAW,GAAGD,WAAW,CAACC,WAAD,CAAzB;AACD;;AACD,SAAOI,IAAP;AACD;;AAED,MAAMG,IAAI,GAAGb,WAAW,CAAC;AACvBc,EAAAA,IAAI,EAAE,MADiB;AAEvBC,EAAAA,YAAY,EAAE;AACZ,KAACnB,QAAQ,CAACoB,gBAAV,GAA6BlB,cAAc,EAD/B;AAEZmB,IAAAA,OAAO,EAAE,EAFG;AAGZC,IAAAA,QAAQ,EAAE,KAHE;AAIZC,IAAAA,KAAK,EAAE,EAJK;AAKZC,IAAAA,eAAe,EAAE;AALL,GAFS;AASvBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7BD,MAAAA,KAAK,CAACH,eAAN,GAAwBI,MAAM,CAACC,OAA/B;AACD;AAHO,GATa,CAcvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAtBuB,CAAD,CAAxB;AAyBA,MAAM;AAAEC,EAAAA,OAAO,EAAEC,WAAX;AAAwBC,EAAAA;AAAxB,IAAoCf,IAA1C,C,CAAgD;;AAChD,OAAO,MAAM;AAAES,EAAAA;AAAF,IAAiBM,OAAvB;AACP,eAAeD,WAAf","sourcesContent":["// import ContractType from \"./contractType\";\r\nimport * as variable from \"../../variables/Variables\";\r\nimport JSONPLACEHOLDERApi from \"api/JSONPLACEHOLDERApi\";\r\nimport { createPostData, convertDateToString } from \"util/ContructorCreation\";\r\n\r\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\nconst date = new Date();\r\n/**\r\n * * Hàm có mục đích cho việc test\r\n * ! trả về ngày tiếp theo\r\n */\r\nfunction getNextDate(currentDate) {\r\n  return currentDate.setDate(new Date().getDate() + 1);\r\n}\r\n\r\nfunction createDateForTest() {\r\n  var currentDate = new Date();\r\n  var data = [];\r\n  for (var i = 0; i >= 5; i++) {\r\n    data.push(createPostData(i, \"sam\", currentDate, 3, 12));\r\n    currentDate = getNextDate(currentDate);\r\n  }\r\n  return data;\r\n}\r\n\r\nconst post = createSlice({\r\n  name: \"post\",\r\n  initialState: {\r\n    [variable.advanceTableData]: createPostData(),\r\n    current: {},\r\n    loadingL: false,\r\n    error: \"\",\r\n    userPostVisible: false,\r\n  },\r\n  reducers: {\r\n    setVisible: (state, action) => {\r\n      state.userPostVisible = action.payload;\r\n    },\r\n  },\r\n  //   extraReducers: {\r\n  //     [getALL.pending]: (state) => {},\r\n  //     [getALL.rejected]: (state, action) => {\r\n  //       state.error = action.error;\r\n  //     },\r\n  //     [getALL.fulfilled]: (state, action) => {\r\n  //       state.current = action.payload;\r\n  //     },\r\n  //   },\r\n});\r\n\r\nconst { reducer: postReducer, actions } = post; //createSlice sẽ trả về cho ta 2 biến là reducer và action\r\nexport const { setVisible } = actions;\r\nexport default postReducer;\r\n"]},"metadata":{},"sourceType":"module"}