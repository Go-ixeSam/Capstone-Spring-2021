{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sam\\\\Documents\\\\GitHub\\\\Capstone-Spring-2021\\\\src\\\\components\\\\SuperTable\\\\NoCustomeTable.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ActionButton from \"components/SuperTable/ActionButton\";\nimport { CancelButton, CheckCircleButton } from \"components/CustomButton/CustomButton\";\nimport { getModalVisible, getVegetableAPIloadingTime } from \"redux/Selector/Selectors\";\nimport { prepareVegetableData } from \"util/Helper\";\nimport { getAllVegetableUnapproved, setVisible, setSelectedVegetable } from \"redux/index\";\nimport { CardNoFooter } from \"components/Card/Card\";\nimport { Col, Grid, Row } from \"react-bootstrap\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { MaterialButton } from \"components/CustomButton/MaterialButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ShowPopUp, LoadingPopUp } from \"components/Modal/Modal\"; // function createData(name, calories, fat, carbs, protein) {\n//   return { name, calories, fat, carbs, protein };\n// }\n// function createData(name, calories) {\n//   return { name, calories };\n// }\n// const rows = [\n//   createData(\"Khăc Sâm\", \"Rau Húng\"),\n//   createData(\"Thế Thông\", \"Ngọt lèo\"),\n// ];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: \"name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Rau cần duyệt\"\n} //   { id: \"calories\", numeric: false, disablePadding: true, label: \"Tên rau\" },\n//   { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n//   { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n//   { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      visibility: \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"fsd\"), /*#__PURE__*/React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: rowCount > 0 && numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      \"aria-label\": \"select all desserts\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  })), headCells.map(headCell => /*#__PURE__*/React.createElement(TableCell, {\n    key: headCell.id,\n    align: headCell.numeric ? \"right\" : \"left\",\n    padding: headCell.disablePadding ? \"none\" : \"default\",\n    sortDirection: orderBy === headCell.id ? order : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: orderBy === headCell.id ? order : \"asc\",\n    onClick: createSortHandler(headCell.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0,\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, headCell.label), orderBy === headCell.id ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, order === \"desc\" ? \"sorted descending\" : \"sorted ascending\") : null)))));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === \"light\" ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: \"1 1 100%\"\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const {\n    numSelected\n  } = props;\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, numSelected > 0 ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, numSelected, \" l\\u1EF1a ch\\u1ECDn\") : /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    id: \"tableTitle\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, \"Th\\xF4ng tin rau g\\u1EEDi l\\xEAn\"), numSelected > 0 ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Ch\\u1EA5p nh\\u1EADn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CheckCircleButton, {\n    click: () => dispatch(setVisible(true)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"T\\u1EEB ch\\u1ED1i\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CancelButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }))) : /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Filter list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"filter list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FilterListIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  }\n}));\nexport default function EnhancedTable(props) {\n  const actionbuttonlist = props.actionbuttonlist;\n  const classes = useStyles();\n  const visible = useSelector(state => getModalVisible(state));\n  let loading = useSelector(state => getVegetableAPIloadingTime(state));\n  const [rows, setRows] = React.useState([]);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [selectedForStore, setSelectedForStore] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const dispatch = useDispatch();\n  const normalPElement = {\n    fontSize: 14,\n    margin: 0\n  }; //! hàm dùng để đóng modal\n\n  const closeModal = () => {\n    dispatch(setVisible(false));\n  };\n\n  async function updateVegetableData() {\n    let hava = [];\n    const response = await dispatch(getAllVegetableUnapproved());\n\n    if (Object.keys(response.payload.data).length !== 0) {\n      hava = [...prepareVegetableData(response.payload.data)]; //   console.log(\"table đây ngày 27/5= \", hava);\n      //   dispatch(setNotificationCount(hava.length));\n\n      setRows(hava);\n    } else {\n      hava = [...prepareVegetableData(response.payload.data)];\n      console.log(\"table đây= \", hava); // dispatch(setNotificationCount(0));\n\n      setRows(hava);\n    }\n  }\n\n  React.useEffect(() => {\n    updateVegetableData();\n  }, []);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.ID);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = row => {\n    //* row đc click sẽ dựa theo ID của nó\n    console.log(\"row= \", row.ID);\n    const {\n      ID,\n      vegetableName,\n      vegetableImage\n    } = row;\n    const item = {\n      id: ID,\n      image: vegetableImage,\n      name: vegetableName\n    }; // ! index của cái item đc chọn\n\n    const selectedIndex = selected.indexOf(ID);\n    let newSelected = [];\n    let newSelectedForStore = []; //! list dành riêng cho store\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, ID);\n      newSelectedForStore = newSelectedForStore.concat(selectedForStore, item);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n      newSelectedForStore = newSelectedForStore.concat(selectedForStore.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n      newSelectedForStore = newSelectedForStore.concat(selectedForStore.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      newSelectedForStore = newSelectedForStore.concat(selectedForStore.slice(0, selectedIndex), selectedForStore.slice(selectedIndex + 1));\n    } // ! Ở chỗ này là ta sẽ có đc 1 list những item đc check\n\n\n    setSelected(newSelected); //! tạo 1 list những item dc chọn ở store để hiện lên popup\n\n    setSelectedForStore(newSelectedForStore);\n    console.log(newSelected, \" Đây là selected for store: \", newSelectedForStore);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const showVegetableDetail = row => {\n    dispatch(setSelectedVegetable(row));\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ShowPopUp, {\n    visible: visible,\n    length: \"50%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LoadingPopUp, {\n    visible: loading,\n    length: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    style: {\n      margin: 0,\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardNoFooter, {\n    title: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 20\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-background-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"post-text-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 23\n      }\n    }, \"X\\xE1c nh\\u1EADn l\\u1EF1a ch\\u1ECDn\"), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      style: {\n        height: 200,\n        width: 300\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginBottom: 15,\n        marginTop: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 25\n      }\n    }, selectedForStore.map(selected => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: selected.image,\n        height: \"70\",\n        width: \"70\",\n        style: {\n          border: \"1px solid #ddd\",\n          borderRadius: 4,\n          padding: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          margin: 0,\n          marginLeft: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 33\n        }\n      }, selected.name));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MaterialButton, {\n      variant: \"contained\",\n      color: \"error\",\n      size: \"large\",\n      style: {\n        marginRight: 5\n      },\n      click: () => closeModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 27\n      }\n    }, \"\\u0110\\xF3ng\"), /*#__PURE__*/React.createElement(MaterialButton, {\n      variant: \"contained\",\n      color: \"success\",\n      size: \"large\",\n      style: {\n        marginRight: 5\n      } // onClick={() => failTest()}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 27\n      }\n    }, \"X\\xE1c nh\\u1EADn\"))))))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EnhancedTableToolbar, {\n    numSelected: selected.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: \"small\" // size={dense ? \"small\" : \"medium\"}\n    ,\n    \"aria-label\": \"enhanced table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 15\n    }\n  }, stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row.ID);\n    const labelId = `enhanced-table-checkbox-${index}`;\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true //   onClick={(event) => handleClick(event, row.name)}\n      ,\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected //   tabIndex={-1}\n      ,\n      key: row.vegetableName,\n      selected: isItemSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 23\n      }\n    }, actionbuttonlist.map(obj => {\n      if (obj == \"remove\") {\n        return /*#__PURE__*/React.createElement(TableCell, {\n          padding: \"checkbox\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          onClick: () => handleClick(row),\n          checked: isItemSelected,\n          inputProps: {\n            \"aria-labelledby\": labelId\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 33\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(ActionButton, {\n        name: obj,\n        row: row,\n        click: () => showVegetableDetail(row),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 29\n        }\n      });\n    }), /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      id: labelId,\n      scope: \"row\",\n      padding: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: 0,\n        color: \"green\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 27\n      }\n    }, row.vegetableName, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 29\n      }\n    }, \" - Kh\\u1EAFc s\\xE2m\"))));\n  }), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: (dense ? 33 : 53) * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows.length,\n    labelRowsPerPage: /*#__PURE__*/React.createElement(\"p\", {\n      style: normalPElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 15\n      }\n    }, \"S\\u1ED1 l\\u01B0\\u1EE3ng rau m\\u1ED7i trang:\"),\n    labelDisplayedRows: ({\n      from,\n      to,\n      count\n    }) => /*#__PURE__*/React.createElement(\"p\", {\n      style: normalPElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 15\n      }\n    }, from, \"-\", to, \" trong \", count !== -1 ? count : \"nhiều hơn\" + to),\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/components/SuperTable/NoCustomeTable.js"],"names":["React","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","ActionButton","CancelButton","CheckCircleButton","getModalVisible","getVegetableAPIloadingTime","prepareVegetableData","getAllVegetableUnapproved","setVisible","setSelectedVegetable","CardNoFooter","Col","Grid","Row","PerfectScrollbar","MaterialButton","useDispatch","useSelector","ShowPopUp","LoadingPopUp","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","visibility","headCell","margin","fontWeight","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","EnhancedTableToolbar","dispatch","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","overflow","padding","position","top","EnhancedTable","actionbuttonlist","visible","state","loading","rows","setRows","useState","setOrder","setOrderBy","selected","setSelected","selectedForStore","setSelectedForStore","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","normalPElement","fontSize","closeModal","updateVegetableData","hava","response","Object","keys","payload","data","length","console","log","useEffect","handleRequestSort","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","ID","handleClick","row","vegetableName","vegetableImage","item","image","name","selectedIndex","indexOf","newSelected","newSelectedForStore","concat","slice","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","handleChangeDense","showVegetableDetail","isSelected","emptyRows","Math","min","display","flexDirection","marginTop","alignItems","borderRadius","marginLeft","marginRight","isItemSelected","labelId","obj","from","to","count"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,SACEC,YADF,EAEEC,iBAFF,QAGO,sCAHP;AAIA,SACEC,eADF,EAEEC,0BAFF,QAGO,0BAHP;AAIA,SAASC,oBAAT,QAAqC,aAArC;AACA,SACEC,yBADF,EAEEC,UAFF,EAGEC,oBAHF,QAIO,aAJP;AAKA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,QAA+B,iBAA/B;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAASC,cAAT,QAA+B,wCAA/B;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,wBAAxC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,oBAAT,CAA8BC,CAA9B,EAAiCC,CAAjC,EAAoCC,OAApC,EAA6C;AAC3C,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AAC3B,WAAO,CAAC,CAAR;AACD;;AACD,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AAC3B,WAAO,CAAP;AACD;;AACD,SAAO,CAAP;AACD;;AAED,SAASC,aAAT,CAAuBC,KAAvB,EAA8BF,OAA9B,EAAuC;AACrC,SAAOE,KAAK,KAAK,MAAV,GACH,CAACJ,CAAD,EAAIC,CAAJ,KAAUF,oBAAoB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAD3B,GAEH,CAACF,CAAD,EAAIC,CAAJ,KAAU,CAACF,oBAAoB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAFnC;AAGD;;AAED,SAASG,UAAT,CAAoBC,KAApB,EAA2BC,UAA3B,EAAuC;AACrC,QAAMC,cAAc,GAAGF,KAAK,CAACG,GAAN,CAAU,CAACC,EAAD,EAAKC,KAAL,KAAe,CAACD,EAAD,EAAKC,KAAL,CAAzB,CAAvB;AACAH,EAAAA,cAAc,CAACI,IAAf,CAAoB,CAACZ,CAAD,EAAIC,CAAJ,KAAU;AAC5B,UAAMG,KAAK,GAAGG,UAAU,CAACP,CAAC,CAAC,CAAD,CAAF,EAAOC,CAAC,CAAC,CAAD,CAAR,CAAxB;AACA,QAAIG,KAAK,KAAK,CAAd,EAAiB,OAAOA,KAAP;AACjB,WAAOJ,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAf;AACD,GAJD;AAKA,SAAOO,cAAc,CAACC,GAAf,CAAoBC,EAAD,IAAQA,EAAE,CAAC,CAAD,CAA7B,CAAP;AACD;;AAED,MAAMG,SAAS,GAAG,CAChB;AACEC,EAAAA,EAAE,EAAE,MADN;AAEEC,EAAAA,OAAO,EAAE,KAFX;AAGEC,EAAAA,cAAc,EAAE,IAHlB;AAIEC,EAAAA,KAAK,EAAE;AAJT,CADgB,CAOhB;AACA;AACA;AACA;AAVgB,CAAlB;;AAaA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,gBAFI;AAGJjB,IAAAA,KAHI;AAIJF,IAAAA,OAJI;AAKJoB,IAAAA,WALI;AAMJC,IAAAA,QANI;AAOJC,IAAAA;AAPI,MAQFL,KARJ;;AASA,QAAMM,iBAAiB,GAAIC,QAAD,IAAeC,KAAD,IAAW;AACjDH,IAAAA,aAAa,CAACG,KAAD,EAAQD,QAAR,CAAb;AACD,GAFD;;AAIA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEE,MAAAA,UAAU,EAAE;AAAd,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,aAAa,EAAEN,WAAW,GAAG,CAAd,IAAmBA,WAAW,GAAGC,QADlD;AAEE,IAAA,OAAO,EAAEA,QAAQ,GAAG,CAAX,IAAgBD,WAAW,KAAKC,QAF3C;AAGE,IAAA,QAAQ,EAAEF,gBAHZ;AAIE,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAUGR,SAAS,CAACJ,GAAV,CAAeoB,QAAD,iBACb,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEA,QAAQ,CAACf,EADhB;AAEE,IAAA,KAAK,EAAEe,QAAQ,CAACd,OAAT,GAAmB,OAAnB,GAA6B,MAFtC;AAGE,IAAA,OAAO,EAAEc,QAAQ,CAACb,cAAT,GAA0B,MAA1B,GAAmC,SAH9C;AAIE,IAAA,aAAa,EAAEd,OAAO,KAAK2B,QAAQ,CAACf,EAArB,GAA0BV,KAA1B,GAAkC,KAJnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,cAAD;AACE,IAAA,MAAM,EAAEF,OAAO,KAAK2B,QAAQ,CAACf,EAD/B;AAEE,IAAA,SAAS,EAAEZ,OAAO,KAAK2B,QAAQ,CAACf,EAArB,GAA0BV,KAA1B,GAAkC,KAF/C;AAGE,IAAA,OAAO,EAAEqB,iBAAiB,CAACI,QAAQ,CAACf,EAAV,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAG,IAAA,KAAK,EAAE;AAAEgB,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,UAAU,EAAE;AAAzB,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CF,QAAQ,CAACZ,KAAvD,CALF,EAMGf,OAAO,KAAK2B,QAAQ,CAACf,EAArB,gBACC;AAAM,IAAA,SAAS,EAAEM,OAAO,CAACY,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG5B,KAAK,KAAK,MAAV,GAAmB,mBAAnB,GAAyC,kBAD5C,CADD,GAIG,IAVN,CANF,CADD,CAVH,CADF,CADF;AAoCD;;AAEDc,iBAAiB,CAACe,SAAlB,GAA8B;AAC5Bb,EAAAA,OAAO,EAAE9D,SAAS,CAAC4E,MAAV,CAAiBC,UADE;AAE5Bb,EAAAA,WAAW,EAAEhE,SAAS,CAAC8E,MAAV,CAAiBD,UAFF;AAG5BX,EAAAA,aAAa,EAAElE,SAAS,CAAC+E,IAAV,CAAeF,UAHF;AAI5Bd,EAAAA,gBAAgB,EAAE/D,SAAS,CAAC+E,IAAV,CAAeF,UAJL;AAK5B/B,EAAAA,KAAK,EAAE9C,SAAS,CAACgF,KAAV,CAAgB,CAAC,KAAD,EAAQ,MAAR,CAAhB,EAAiCH,UALZ;AAM5BjC,EAAAA,OAAO,EAAE5C,SAAS,CAACiF,MAAV,CAAiBJ,UANE;AAO5BZ,EAAAA,QAAQ,EAAEjE,SAAS,CAAC8E,MAAV,CAAiBD;AAPC,CAA9B;AAUA,MAAMK,gBAAgB,GAAG/E,UAAU,CAAEgF,KAAD,KAAY;AAC9CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADT;AAEJC,IAAAA,YAAY,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFV,GADwC;AAK9CE,EAAAA,SAAS,EACPL,KAAK,CAACM,OAAN,CAAcC,IAAd,KAAuB,OAAvB,GACI;AACEC,IAAAA,KAAK,EAAER,KAAK,CAACM,OAAN,CAAcG,SAAd,CAAwBC,IADjC;AAEEC,IAAAA,eAAe,EAAE5F,OAAO,CAACiF,KAAK,CAACM,OAAN,CAAcG,SAAd,CAAwBG,KAAzB,EAAgC,IAAhC;AAF1B,GADJ,GAKI;AACEJ,IAAAA,KAAK,EAAER,KAAK,CAACM,OAAN,CAAcO,IAAd,CAAmBC,OAD5B;AAEEH,IAAAA,eAAe,EAAEX,KAAK,CAACM,OAAN,CAAcG,SAAd,CAAwBM;AAF3C,GAXwC;AAe9CC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AADD;AAfuC,CAAZ,CAAD,CAAnC;;AAoBA,MAAMC,oBAAoB,GAAIxC,KAAD,IAAW;AACtC,QAAMC,OAAO,GAAGoB,gBAAgB,EAAhC;AACA,QAAM;AAAElB,IAAAA;AAAF,MAAkBH,KAAxB;AACA,QAAMyC,QAAQ,GAAGjE,WAAW,EAA5B;AAEA,sBACE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAEpC,IAAI,CAAC6D,OAAO,CAACsB,IAAT,EAAe;AAC5B,OAACtB,OAAO,CAAC0B,SAAT,GAAqBxB,WAAW,GAAG;AADP,KAAf,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,WAAW,GAAG,CAAd,gBACC,oBAAC,UAAD;AACE,IAAA,SAAS,EAAEF,OAAO,CAACqC,KADrB;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,SAAS,EAAC,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGnC,WANH,wBADD,gBAUC,oBAAC,UAAD;AACE,IAAA,SAAS,EAAEF,OAAO,CAACqC,KADrB;AAEE,IAAA,OAAO,EAAC,IAFV;AAGE,IAAA,EAAE,EAAC,YAHL;AAIE,IAAA,SAAS,EAAC,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAfJ,EAyBGnC,WAAW,GAAG,CAAd,gBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAE,MAAMsC,QAAQ,CAACzE,UAAU,CAAC,IAAD,CAAX,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADD,gBAUC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,kBAAW,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAnCJ,CADF;AA4CD,CAjDD;;AAmDAwE,oBAAoB,CAAC1B,SAArB,GAAiC;AAC/BX,EAAAA,WAAW,EAAEhE,SAAS,CAAC8E,MAAV,CAAiBD;AADC,CAAjC;AAIA,MAAM0B,SAAS,GAAGpG,UAAU,CAAEgF,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJoB,IAAAA,KAAK,EAAE;AADH,GADiC;AAIvCC,EAAAA,KAAK,EAAE;AACLD,IAAAA,KAAK,EAAE,MADF;AAELE,IAAAA,YAAY,EAAEvB,KAAK,CAACG,OAAN,CAAc,CAAd;AAFT,GAJgC;AAQvCqB,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GARgC;AAWvClC,EAAAA,cAAc,EAAE;AACdmC,IAAAA,MAAM,EAAE,CADM;AAEdC,IAAAA,IAAI,EAAE,eAFQ;AAGdC,IAAAA,MAAM,EAAE,CAHM;AAIdvC,IAAAA,MAAM,EAAE,CAAC,CAJK;AAKdwC,IAAAA,QAAQ,EAAE,QALI;AAMdC,IAAAA,OAAO,EAAE,CANK;AAOdC,IAAAA,QAAQ,EAAE,UAPI;AAQdC,IAAAA,GAAG,EAAE,EARS;AASdX,IAAAA,KAAK,EAAE;AATO;AAXuB,CAAZ,CAAD,CAA5B;AAwBA,eAAe,SAASY,aAAT,CAAuBvD,KAAvB,EAA8B;AAC3C,QAAMwD,gBAAgB,GAAGxD,KAAK,CAACwD,gBAA/B;AACA,QAAMvD,OAAO,GAAGyC,SAAS,EAAzB;AACA,QAAMe,OAAO,GAAGhF,WAAW,CAAEiF,KAAD,IAAW9F,eAAe,CAAC8F,KAAD,CAA3B,CAA3B;AACA,MAAIC,OAAO,GAAGlF,WAAW,CAAEiF,KAAD,IAAW7F,0BAA0B,CAAC6F,KAAD,CAAtC,CAAzB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkB3H,KAAK,CAAC4H,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAAC7E,KAAD,EAAQ8E,QAAR,IAAoB7H,KAAK,CAAC4H,QAAN,CAAe,KAAf,CAA1B;AACA,QAAM,CAAC/E,OAAD,EAAUiF,UAAV,IAAwB9H,KAAK,CAAC4H,QAAN,CAAe,UAAf,CAA9B;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BhI,KAAK,CAAC4H,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACK,gBAAD,EAAmBC,mBAAnB,IAA0ClI,KAAK,CAAC4H,QAAN,CAAe,EAAf,CAAhD;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBpI,KAAK,CAAC4H,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBtI,KAAK,CAAC4H,QAAN,CAAe,KAAf,CAA1B;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCxI,KAAK,CAAC4H,QAAN,CAAe,CAAf,CAAtC;AACA,QAAMrB,QAAQ,GAAGjE,WAAW,EAA5B;AACA,QAAMmG,cAAc,GAAG;AACrBC,IAAAA,QAAQ,EAAE,EADW;AAErBjE,IAAAA,MAAM,EAAE;AAFa,GAAvB,CAd2C,CAkB3C;;AACA,QAAMkE,UAAU,GAAG,MAAM;AACvBpC,IAAAA,QAAQ,CAACzE,UAAU,CAAC,KAAD,CAAX,CAAR;AACD,GAFD;;AAIA,iBAAe8G,mBAAf,GAAqC;AACnC,QAAIC,IAAI,GAAG,EAAX;AACA,UAAMC,QAAQ,GAAG,MAAMvC,QAAQ,CAAC1E,yBAAyB,EAA1B,CAA/B;;AACA,QAAIkH,MAAM,CAACC,IAAP,CAAYF,QAAQ,CAACG,OAAT,CAAiBC,IAA7B,EAAmCC,MAAnC,KAA8C,CAAlD,EAAqD;AACnDN,MAAAA,IAAI,GAAG,CAAC,GAAGjH,oBAAoB,CAACkH,QAAQ,CAACG,OAAT,CAAiBC,IAAlB,CAAxB,CAAP,CADmD,CAEnD;AACA;;AACAvB,MAAAA,OAAO,CAACkB,IAAD,CAAP;AACD,KALD,MAKO;AACLA,MAAAA,IAAI,GAAG,CAAC,GAAGjH,oBAAoB,CAACkH,QAAQ,CAACG,OAAT,CAAiBC,IAAlB,CAAxB,CAAP;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BR,IAA3B,EAFK,CAGL;;AACAlB,MAAAA,OAAO,CAACkB,IAAD,CAAP;AACD;AACF;;AACD7I,EAAAA,KAAK,CAACsJ,SAAN,CAAgB,MAAM;AACpBV,IAAAA,mBAAmB;AACpB,GAFD,EAEG,EAFH;;AAIA,QAAMW,iBAAiB,GAAG,CAACjF,KAAD,EAAQD,QAAR,KAAqB;AAC7C,UAAMmF,KAAK,GAAG3G,OAAO,KAAKwB,QAAZ,IAAwBtB,KAAK,KAAK,KAAhD;AACA8E,IAAAA,QAAQ,CAAC2B,KAAK,GAAG,MAAH,GAAY,KAAlB,CAAR;AACA1B,IAAAA,UAAU,CAACzD,QAAD,CAAV;AACD,GAJD;;AAMA,QAAMoF,oBAAoB,GAAInF,KAAD,IAAW;AACtC,QAAIA,KAAK,CAACoF,MAAN,CAAaC,OAAjB,EAA0B;AACxB,YAAMC,YAAY,GAAGlC,IAAI,CAACtE,GAAL,CAAUyG,CAAD,IAAOA,CAAC,CAACC,EAAlB,CAArB;AACA9B,MAAAA,WAAW,CAAC4B,YAAD,CAAX;AACA;AACD;;AACD5B,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAPD;;AASA,QAAM+B,WAAW,GAAIC,GAAD,IAAS;AAC3B;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBW,GAAG,CAACF,EAAzB;AACA,UAAM;AAAEA,MAAAA,EAAF;AAAMG,MAAAA,aAAN;AAAqBC,MAAAA;AAArB,QAAwCF,GAA9C;AACA,UAAMG,IAAI,GAAG;AACX1G,MAAAA,EAAE,EAAEqG,EADO;AAEXM,MAAAA,KAAK,EAAEF,cAFI;AAGXG,MAAAA,IAAI,EAAEJ;AAHK,KAAb,CAJ2B,CAU3B;;AACA,UAAMK,aAAa,GAAGvC,QAAQ,CAACwC,OAAT,CAAiBT,EAAjB,CAAtB;AACA,QAAIU,WAAW,GAAG,EAAlB;AACA,QAAIC,mBAAmB,GAAG,EAA1B,CAb2B,CAaG;;AAE9B,QAAIH,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxBE,MAAAA,WAAW,GAAGA,WAAW,CAACE,MAAZ,CAAmB3C,QAAnB,EAA6B+B,EAA7B,CAAd;AACAW,MAAAA,mBAAmB,GAAGA,mBAAmB,CAACC,MAApB,CAA2BzC,gBAA3B,EAA6CkC,IAA7C,CAAtB;AACD,KAHD,MAGO,IAAIG,aAAa,KAAK,CAAtB,EAAyB;AAC9BE,MAAAA,WAAW,GAAGA,WAAW,CAACE,MAAZ,CAAmB3C,QAAQ,CAAC4C,KAAT,CAAe,CAAf,CAAnB,CAAd;AACAF,MAAAA,mBAAmB,GAAGA,mBAAmB,CAACC,MAApB,CACpBzC,gBAAgB,CAAC0C,KAAjB,CAAuB,CAAvB,CADoB,CAAtB;AAGD,KALM,MAKA,IAAIL,aAAa,KAAKvC,QAAQ,CAACoB,MAAT,GAAkB,CAAxC,EAA2C;AAChDqB,MAAAA,WAAW,GAAGA,WAAW,CAACE,MAAZ,CAAmB3C,QAAQ,CAAC4C,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAnB,CAAd;AACAF,MAAAA,mBAAmB,GAAGA,mBAAmB,CAACC,MAApB,CACpBzC,gBAAgB,CAAC0C,KAAjB,CAAuB,CAAvB,EAA0B,CAAC,CAA3B,CADoB,CAAtB;AAGD,KALM,MAKA,IAAIL,aAAa,GAAG,CAApB,EAAuB;AAC5BE,MAAAA,WAAW,GAAGA,WAAW,CAACE,MAAZ,CACZ3C,QAAQ,CAAC4C,KAAT,CAAe,CAAf,EAAkBL,aAAlB,CADY,EAEZvC,QAAQ,CAAC4C,KAAT,CAAeL,aAAa,GAAG,CAA/B,CAFY,CAAd;AAIAG,MAAAA,mBAAmB,GAAGA,mBAAmB,CAACC,MAApB,CACpBzC,gBAAgB,CAAC0C,KAAjB,CAAuB,CAAvB,EAA0BL,aAA1B,CADoB,EAEpBrC,gBAAgB,CAAC0C,KAAjB,CAAuBL,aAAa,GAAG,CAAvC,CAFoB,CAAtB;AAID,KArC0B,CAuC3B;;;AACAtC,IAAAA,WAAW,CAACwC,WAAD,CAAX,CAxC2B,CA0C3B;;AACAtC,IAAAA,mBAAmB,CAACuC,mBAAD,CAAnB;AAEArB,IAAAA,OAAO,CAACC,GAAR,CACEmB,WADF,EAEE,8BAFF,EAGEC,mBAHF;AAKD,GAlDD;;AAoDA,QAAMG,gBAAgB,GAAG,CAACtG,KAAD,EAAQuG,OAAR,KAAoB;AAC3CzC,IAAAA,OAAO,CAACyC,OAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,uBAAuB,GAAIxG,KAAD,IAAW;AACzCkE,IAAAA,cAAc,CAACuC,QAAQ,CAACzG,KAAK,CAACoF,MAAN,CAAasB,KAAd,EAAqB,EAArB,CAAT,CAAd;AACA5C,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAHD;;AAKA,QAAM6C,iBAAiB,GAAI3G,KAAD,IAAW;AACnCgE,IAAAA,QAAQ,CAAChE,KAAK,CAACoF,MAAN,CAAaC,OAAd,CAAR;AACD,GAFD;;AAIA,QAAMuB,mBAAmB,GAAIlB,GAAD,IAAS;AACnCzD,IAAAA,QAAQ,CAACxE,oBAAoB,CAACiI,GAAD,CAArB,CAAR;AACD,GAFD;;AAIA,QAAMmB,UAAU,GAAId,IAAD,IAAUtC,QAAQ,CAACwC,OAAT,CAAiBF,IAAjB,MAA2B,CAAC,CAAzD;;AAEA,QAAMe,SAAS,GACb7C,WAAW,GAAG8C,IAAI,CAACC,GAAL,CAAS/C,WAAT,EAAsBb,IAAI,CAACyB,MAAL,GAAchB,IAAI,GAAGI,WAA3C,CADhB;AAGA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEhB,OAApB;AAA6B,IAAA,MAAM,EAAC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEE,OAAvB;AAAgC,IAAA,MAAM,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAY,IAAA,KAAK,EAAE;AAAEhD,MAAAA,MAAM,EAAE,CAAV;AAAayC,MAAAA,OAAO,EAAE;AAAtB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,KAAK,eAAE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADT;AAEE,IAAA,OAAO,eACL,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADF,eAEE,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE;AAAEF,QAAAA,MAAM,EAAE,GAAV;AAAeP,QAAAA,KAAK,EAAE;AAAtB,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,KAAK,EAAE;AACL8E,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,aAAa,EAAE,QAFV;AAGL7E,QAAAA,YAAY,EAAE,EAHT;AAIL8E,QAAAA,SAAS,EAAE;AAJN,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGxD,gBAAgB,CAAC7E,GAAjB,CAAsB2E,QAAD,IAAc;AAClC,0BACE;AACE,QAAA,KAAK,EAAE;AACLwD,UAAAA,OAAO,EAAE,MADJ;AAELG,UAAAA,UAAU,EAAE,QAFP;AAGL/E,UAAAA,YAAY,EAAE;AAHT,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE;AACE,QAAA,GAAG,EAAEoB,QAAQ,CAACqC,KADhB;AAEE,QAAA,MAAM,EAAC,IAFT;AAGE,QAAA,KAAK,EAAC,IAHR;AAIE,QAAA,KAAK,EAAE;AACLtD,UAAAA,MAAM,EAAE,gBADH;AAEL6E,UAAAA,YAAY,EAAE,CAFT;AAGLzE,UAAAA,OAAO,EAAE;AAHJ,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,eAiBE;AAAG,QAAA,KAAK,EAAE;AAAEzC,UAAAA,MAAM,EAAE,CAAV;AAAamH,UAAAA,UAAU,EAAE;AAAzB,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG7D,QAAQ,CAACsC,IADZ,CAjBF,CADF;AAuBD,KAxBA,CARH,CADF,CAFF,eAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAE;AAAEkB,QAAAA,OAAO,EAAE,MAAX;AAAmBE,QAAAA,SAAS,EAAE;AAA9B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,KAAK,EAAE;AAAEI,QAAAA,WAAW,EAAE;AAAf,OAJT;AAKE,MAAA,KAAK,EAAE,MAAMlD,UAAU,EALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAUE,oBAAC,cAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,KAAK,EAAE;AAAEkD,QAAAA,WAAW,EAAE;AAAf,OAJT,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVF,CADF,CAtCF,CADF,CADF,CADF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,eA8EE;AAAK,IAAA,SAAS,EAAE9H,OAAO,CAACsB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEtB,OAAO,CAAC2C,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,oBAAD;AAAsB,IAAA,WAAW,EAAEqB,QAAQ,CAACoB,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEpF,OAAO,CAAC6C,KADrB;AAEE,uBAAgB,YAFlB;AAGE,IAAA,IAAI,EAAC,OAHP,CAIE;AAJF;AAKE,kBAAW,gBALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,iBAAD;AACE,IAAA,OAAO,EAAE7C,OADX;AAEE,IAAA,WAAW,EAAEgE,QAAQ,CAACoB,MAFxB;AAGE,IAAA,KAAK,EAAEpG,KAHT;AAIE,IAAA,OAAO,EAAEF,OAJX;AAKE,IAAA,gBAAgB,EAAE4G,oBALpB;AAME,IAAA,aAAa,EAAEF,iBANjB;AAOE,IAAA,QAAQ,EAAE7B,IAAI,CAACyB,MAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAgBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnG,UAAU,CAAC0E,IAAD,EAAO5E,aAAa,CAACC,KAAD,EAAQF,OAAR,CAApB,CAAV,CACE8H,KADF,CACQxC,IAAI,GAAGI,WADf,EAC4BJ,IAAI,GAAGI,WAAP,GAAqBA,WADjD,EAEEnF,GAFF,CAEM,CAAC4G,GAAD,EAAM1G,KAAN,KAAgB;AACnB,UAAMwI,cAAc,GAAGX,UAAU,CAACnB,GAAG,CAACF,EAAL,CAAjC;AACA,UAAMiC,OAAO,GAAI,2BAA0BzI,KAAM,EAAjD;AAEA,wBACE,oBAAC,QAAD;AACE,MAAA,KAAK,MADP,CAEE;AAFF;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,sBAAcwI,cAJhB,CAKE;AALF;AAME,MAAA,GAAG,EAAE9B,GAAG,CAACC,aANX;AAOE,MAAA,QAAQ,EAAE6B,cAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASGxE,gBAAgB,CAAClE,GAAjB,CAAsB4I,GAAD,IAAS;AAC7B,UAAIA,GAAG,IAAI,QAAX,EAAqB;AACnB,4BACE,oBAAC,SAAD;AAAW,UAAA,OAAO,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,QAAD;AACE,UAAA,OAAO,EAAE,MAAMjC,WAAW,CAACC,GAAD,CAD5B;AAEE,UAAA,OAAO,EAAE8B,cAFX;AAGE,UAAA,UAAU,EAAE;AAAE,+BAAmBC;AAArB,WAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AASD;;AACD,0BACE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAEC,GADR;AAEE,QAAA,GAAG,EAAEhC,GAFP;AAGE,QAAA,KAAK,EAAE,MAAMkB,mBAAmB,CAAClB,GAAD,CAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KAnBA,CATH,eAmCE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAC,IADZ;AAEE,MAAA,EAAE,EAAE+B,OAFN;AAGE,MAAA,KAAK,EAAC,KAHR;AAIE,MAAA,OAAO,EAAC,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAG,MAAA,KAAK,EAAE;AAAEtH,QAAAA,MAAM,EAAE,CAAV;AAAamB,QAAAA,KAAK,EAAE;AAApB,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGoE,GAAG,CAACC,aADP,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CANF,CAnCF,CADF;AAiDD,GAvDF,CADH,EAyDGmB,SAAS,GAAG,CAAZ,iBACC,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEpE,MAAAA,MAAM,EAAE,CAACqB,KAAK,GAAG,EAAH,GAAQ,EAAd,IAAoB+C;AAA9B,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA1DJ,CAhBF,CADF,CAFF,eAoFE,oBAAC,eAAD;AACE,IAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CADtB;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,KAAK,EAAE1D,IAAI,CAACyB,MAHd;AAIE,IAAA,gBAAgB,eACd;AAAG,MAAA,KAAK,EAAEV,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDALJ;AAOE,IAAA,kBAAkB,EAAE,CAAC;AAAEwD,MAAAA,IAAF;AAAQC,MAAAA,EAAR;AAAYC,MAAAA;AAAZ,KAAD,kBAClB;AAAG,MAAA,KAAK,EAAE1D,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGwD,IADH,OACUC,EADV,EAEG,SAFH,EAGGC,KAAK,KAAK,CAAC,CAAX,GAAeA,KAAf,GAAuB,cAAcD,EAHxC,CARJ;AAcE,IAAA,WAAW,EAAE3D,WAdf;AAeE,IAAA,IAAI,EAAEJ,IAfR;AAgBE,IAAA,YAAY,EAAEyC,gBAhBhB;AAiBE,IAAA,mBAAmB,EAAEE,uBAjBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApFF,CADF,CA9EF,CADF;AA+LD","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ActionButton from \"components/SuperTable/ActionButton\";\r\nimport {\r\n  CancelButton,\r\n  CheckCircleButton,\r\n} from \"components/CustomButton/CustomButton\";\r\nimport {\r\n  getModalVisible,\r\n  getVegetableAPIloadingTime,\r\n} from \"redux/Selector/Selectors\";\r\nimport { prepareVegetableData } from \"util/Helper\";\r\nimport {\r\n  getAllVegetableUnapproved,\r\n  setVisible,\r\n  setSelectedVegetable,\r\n} from \"redux/index\";\r\nimport { CardNoFooter } from \"components/Card/Card\";\r\nimport { Col, Grid, Row } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { MaterialButton } from \"components/CustomButton/MaterialButton\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ShowPopUp, LoadingPopUp } from \"components/Modal/Modal\";\r\n// function createData(name, calories, fat, carbs, protein) {\r\n//   return { name, calories, fat, carbs, protein };\r\n// }\r\n// function createData(name, calories) {\r\n//   return { name, calories };\r\n// }\r\n// const rows = [\r\n//   createData(\"Khăc Sâm\", \"Rau Húng\"),\r\n//   createData(\"Thế Thông\", \"Ngọt lèo\"),\r\n// ];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Rau cần duyệt\",\r\n  },\r\n  //   { id: \"calories\", numeric: false, disablePadding: true, label: \"Tên rau\" },\r\n  //   { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  //   { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  //   { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell style={{ visibility: \"hidden\" }}>fsd</TableCell>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              <p style={{ margin: 0, fontWeight: \"bold\" }}>{headCell.label}</p>\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} lựa chọn\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Thông tin rau gửi lên\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <React.Fragment>\r\n          <Tooltip title=\"Chấp nhận\">\r\n            <CheckCircleButton click={() => dispatch(setVisible(true))} />\r\n          </Tooltip>\r\n          <Tooltip title=\"Từ chối\">\r\n            <CancelButton />\r\n          </Tooltip>\r\n        </React.Fragment>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const actionbuttonlist = props.actionbuttonlist;\r\n  const classes = useStyles();\r\n  const visible = useSelector((state) => getModalVisible(state));\r\n  let loading = useSelector((state) => getVegetableAPIloadingTime(state));\r\n  const [rows, setRows] = React.useState([]);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [selectedForStore, setSelectedForStore] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const dispatch = useDispatch();\r\n  const normalPElement = {\r\n    fontSize: 14,\r\n    margin: 0,\r\n  };\r\n  //! hàm dùng để đóng modal\r\n  const closeModal = () => {\r\n    dispatch(setVisible(false));\r\n  };\r\n\r\n  async function updateVegetableData() {\r\n    let hava = [];\r\n    const response = await dispatch(getAllVegetableUnapproved());\r\n    if (Object.keys(response.payload.data).length !== 0) {\r\n      hava = [...prepareVegetableData(response.payload.data)];\r\n      //   console.log(\"table đây ngày 27/5= \", hava);\r\n      //   dispatch(setNotificationCount(hava.length));\r\n      setRows(hava);\r\n    } else {\r\n      hava = [...prepareVegetableData(response.payload.data)];\r\n      console.log(\"table đây= \", hava);\r\n      // dispatch(setNotificationCount(0));\r\n      setRows(hava);\r\n    }\r\n  }\r\n  React.useEffect(() => {\r\n    updateVegetableData();\r\n  }, []);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.ID);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (row) => {\r\n    //* row đc click sẽ dựa theo ID của nó\r\n    console.log(\"row= \", row.ID);\r\n    const { ID, vegetableName, vegetableImage } = row;\r\n    const item = {\r\n      id: ID,\r\n      image: vegetableImage,\r\n      name: vegetableName,\r\n    };\r\n\r\n    // ! index của cái item đc chọn\r\n    const selectedIndex = selected.indexOf(ID);\r\n    let newSelected = [];\r\n    let newSelectedForStore = []; //! list dành riêng cho store\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, ID);\r\n      newSelectedForStore = newSelectedForStore.concat(selectedForStore, item);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n      newSelectedForStore = newSelectedForStore.concat(\r\n        selectedForStore.slice(1)\r\n      );\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n      newSelectedForStore = newSelectedForStore.concat(\r\n        selectedForStore.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n      newSelectedForStore = newSelectedForStore.concat(\r\n        selectedForStore.slice(0, selectedIndex),\r\n        selectedForStore.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    // ! Ở chỗ này là ta sẽ có đc 1 list những item đc check\r\n    setSelected(newSelected);\r\n\r\n    //! tạo 1 list những item dc chọn ở store để hiện lên popup\r\n    setSelectedForStore(newSelectedForStore);\r\n\r\n    console.log(\r\n      newSelected,\r\n      \" Đây là selected for store: \",\r\n      newSelectedForStore\r\n    );\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const showVegetableDetail = (row) => {\r\n    dispatch(setSelectedVegetable(row));\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ShowPopUp visible={visible} length=\"50%\">\r\n        <LoadingPopUp visible={loading} length=\"200px\" />\r\n        <Grid fluid style={{ margin: 0, padding: 0 }}>\r\n          <CardNoFooter\r\n            title={<React.Fragment></React.Fragment>}\r\n            content={\r\n              <React.Fragment>\r\n                <Row>\r\n                  <Col xs={7}>\r\n                    <div className=\"post-background-content\">\r\n                      <p className=\"post-text-header\">Xác nhận lựa chọn</p>\r\n                      <PerfectScrollbar style={{ height: 200, width: 300 }}>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            marginBottom: 15,\r\n                            marginTop: 15,\r\n                          }}\r\n                        >\r\n                          {selectedForStore.map((selected) => {\r\n                            return (\r\n                              <div\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  alignItems: \"center\",\r\n                                  marginBottom: 15,\r\n                                }}\r\n                              >\r\n                                <img\r\n                                  src={selected.image}\r\n                                  height=\"70\"\r\n                                  width=\"70\"\r\n                                  style={{\r\n                                    border: \"1px solid #ddd\",\r\n                                    borderRadius: 4,\r\n                                    padding: 5,\r\n                                  }}\r\n                                />\r\n                                <p style={{ margin: 0, marginLeft: 15 }}>\r\n                                  {selected.name}\r\n                                </p>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </PerfectScrollbar>\r\n                      <div>\r\n                        <div style={{ display: \"flex\", marginTop: 10 }}>\r\n                          <MaterialButton\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            size=\"large\"\r\n                            style={{ marginRight: 5 }}\r\n                            click={() => closeModal()}\r\n                          >\r\n                            Đóng\r\n                          </MaterialButton>\r\n                          <MaterialButton\r\n                            variant=\"contained\"\r\n                            color=\"success\"\r\n                            size=\"large\"\r\n                            style={{ marginRight: 5 }}\r\n                            // onClick={() => failTest()}\r\n                          >\r\n                            Xác nhận\r\n                          </MaterialButton>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </Grid>\r\n      </ShowPopUp>\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <EnhancedTableToolbar numSelected={selected.length} />\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size=\"small\"\r\n              // size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={rows.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(rows, getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const isItemSelected = isSelected(row.ID);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        //   onClick={(event) => handleClick(event, row.name)}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        //   tabIndex={-1}\r\n                        key={row.vegetableName}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        {actionbuttonlist.map((obj) => {\r\n                          if (obj == \"remove\") {\r\n                            return (\r\n                              <TableCell padding=\"checkbox\">\r\n                                <Checkbox\r\n                                  onClick={() => handleClick(row)}\r\n                                  checked={isItemSelected}\r\n                                  inputProps={{ \"aria-labelledby\": labelId }}\r\n                                />\r\n                              </TableCell>\r\n                            );\r\n                          }\r\n                          return (\r\n                            <ActionButton\r\n                              name={obj}\r\n                              row={row}\r\n                              click={() => showVegetableDetail(row)}\r\n                            />\r\n                          );\r\n                        })}\r\n                        {/* <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell> */}\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          padding=\"none\"\r\n                        >\r\n                          <p style={{ margin: 0, color: \"green\" }}>\r\n                            {row.vegetableName}\r\n                            <span> - Khắc sâm</span>\r\n                          </p>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                    <TableCell colSpan={2} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            labelRowsPerPage={\r\n              <p style={normalPElement}>Số lượng rau mỗi trang:</p>\r\n            }\r\n            labelDisplayedRows={({ from, to, count }) => (\r\n              <p style={normalPElement}>\r\n                {from}-{to}\r\n                {\" trong \"}\r\n                {count !== -1 ? count : \"nhiều hơn\" + to}\r\n              </p>\r\n            )}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        {/* <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      /> */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}