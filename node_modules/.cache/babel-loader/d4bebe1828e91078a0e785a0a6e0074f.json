{"ast":null,"code":"/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\n\n/**\r\n * This is a helper function for getting values from parameter/options\r\n * objects.\r\n *\r\n * @param args The object we are extracting values from\r\n * @param name The name of the property we are getting.\r\n * @param defaultValue An optional value to return if the property is missing\r\n * from the object. If this is not specified and the property is missing, an\r\n * error will be thrown.\r\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\n\nexports.getArg = getArg;\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n\n  if (!match) {\n    return null;\n  }\n\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\n\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n\n  url += '//';\n\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port;\n  }\n\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n\n  return url;\n}\n\nexports.urlGenerate = urlGenerate;\n/**\r\n * Normalizes a path, or the path portion of a URL:\r\n *\r\n * - Replaces consecutive slashes with one slash.\r\n * - Removes unnecessary '.' parts.\r\n * - Removes unnecessary '<dir>/..' parts.\r\n *\r\n * Based on code in the Node.js 'path' core module.\r\n *\r\n * @param aPath The path or url to normalize.\r\n */\n\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n\n    path = url.path;\n  }\n\n  var isAbsolute = exports.isAbsolute(path);\n  var parts = path.split(/\\/+/);\n\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n\n  return path;\n}\n\nexports.normalize = normalize;\n/**\r\n * Joins two paths/URLs.\r\n *\r\n * @param aRoot The root path or URL.\r\n * @param aPath The path or URL to be joined with the root.\r\n *\r\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\r\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\r\n *   first.\r\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\r\n *   is updated with the result and aRoot is returned. Otherwise the result\r\n *   is returned.\r\n *   - If aPath is absolute, the result is aPath.\r\n *   - Otherwise the two paths are joined with a slash.\r\n * - Joining for example 'http://' and 'www.example.com' is also supported.\r\n */\n\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  } // `join(foo, '//www.example.org')`\n\n\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  } // `join('http://', 'www.example.com')`\n\n\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/' ? aPath : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n\n  return joined;\n}\n\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n/**\r\n * Make a path relative to a URL or another path.\r\n *\r\n * @param aRoot The root path or URL.\r\n * @param aPath The path or URL to be made relative to aRoot.\r\n */\n\n\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, ''); // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n\n  var level = 0;\n\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n\n    if (index < 0) {\n      return aPath;\n    } // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n\n\n    aRoot = aRoot.slice(0, index);\n\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  } // Make sure we add a \"../\" for each component we removed from the root.\n\n\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\n\nexports.relative = relative;\n\nvar supportsNullProto = function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}();\n\nfunction identity(s) {\n  return s;\n}\n/**\r\n * Because behavior goes wacky when you set `__proto__` on objects, we\r\n * have to prefix all the strings in our set with an arbitrary character.\r\n *\r\n * See https://github.com/mozilla/source-map/pull/31 and\r\n * https://github.com/mozilla/source-map/issues/30\r\n *\r\n * @param String aStr\r\n */\n\n\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\n\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\n\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9\n  /* \"__proto__\".length */\n  ) {\n      return false;\n    }\n\n  if (s.charCodeAt(length - 1) !== 95\n  /* '_' */\n  || s.charCodeAt(length - 2) !== 95\n  /* '_' */\n  || s.charCodeAt(length - 3) !== 111\n  /* 'o' */\n  || s.charCodeAt(length - 4) !== 116\n  /* 't' */\n  || s.charCodeAt(length - 5) !== 111\n  /* 'o' */\n  || s.charCodeAt(length - 6) !== 114\n  /* 'r' */\n  || s.charCodeAt(length - 7) !== 112\n  /* 'p' */\n  || s.charCodeAt(length - 8) !== 95\n  /* '_' */\n  || s.charCodeAt(length - 9) !== 95\n  /* '_' */\n  ) {\n      return false;\n    }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36\n    /* '$' */\n    ) {\n        return false;\n      }\n  }\n\n  return true;\n}\n/**\r\n * Comparator between two mappings where the original positions are compared.\r\n *\r\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\r\n * mappings with the same original source/line/column, but different generated\r\n * line and column the same. Useful when searching for a mapping with a\r\n * stubbed out mapping.\r\n */\n\n\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\n\nexports.compareByOriginalPositions = compareByOriginalPositions;\n/**\r\n * Comparator between two mappings with deflated source and name indices where\r\n * the generated positions are compared.\r\n *\r\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\r\n * mappings with the same generated line and column, but different\r\n * source/name/original line and column the same. Useful when searching for a\r\n * mapping with a stubbed out mapping.\r\n */\n\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\n\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n/**\r\n * Comparator between two mappings with inflated source and name strings where\r\n * the generated positions are compared.\r\n */\n\n\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\n\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n/**\r\n * Strip any JSON XSSI avoidance prefix from the string (as documented\r\n * in the source maps specification), and then parse the string as\r\n * JSON.\r\n */\n\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\n\nexports.parseSourceMapInput = parseSourceMapInput;\n/**\r\n * Compute the URL of a source given the the source root, the source's\r\n * URL, and the source map's URL.\r\n */\n\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    } // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n\n\n    sourceURL = sourceRoot + sourceURL;\n  } // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n\n\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\n\nexports.computeSourceURL = computeSourceURL;","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/node_modules/source-map-support/node_modules/source-map/lib/util.js"],"names":["getArg","aArgs","aName","aDefaultValue","arguments","length","Error","exports","urlRegexp","dataUrlRegexp","urlParse","aUrl","match","scheme","auth","host","port","path","urlGenerate","aParsedUrl","url","normalize","aPath","isAbsolute","parts","split","part","up","i","splice","join","aRoot","aPathUrl","aRootUrl","joined","charAt","replace","test","relative","level","indexOf","index","lastIndexOf","slice","Array","substr","supportsNullProto","obj","Object","create","identity","s","toSetString","aStr","isProtoString","fromSetString","charCodeAt","compareByOriginalPositions","mappingA","mappingB","onlyCompareOriginal","cmp","strcmp","source","originalLine","originalColumn","generatedColumn","generatedLine","name","compareByGeneratedPositionsDeflated","onlyCompareGenerated","aStr1","aStr2","compareByGeneratedPositionsInflated","parseSourceMapInput","str","JSON","parse","computeSourceURL","sourceRoot","sourceURL","sourceMapURL","parsed","substring"],"mappings":"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","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\r\n/*\r\n * Copyright 2011 Mozilla Foundation and contributors\r\n * Licensed under the New BSD license. See LICENSE or:\r\n * http://opensource.org/licenses/BSD-3-Clause\r\n */\r\n\r\n/**\r\n * This is a helper function for getting values from parameter/options\r\n * objects.\r\n *\r\n * @param args The object we are extracting values from\r\n * @param name The name of the property we are getting.\r\n * @param defaultValue An optional value to return if the property is missing\r\n * from the object. If this is not specified and the property is missing, an\r\n * error will be thrown.\r\n */\r\nfunction getArg(aArgs, aName, aDefaultValue) {\r\n  if (aName in aArgs) {\r\n    return aArgs[aName];\r\n  } else if (arguments.length === 3) {\r\n    return aDefaultValue;\r\n  } else {\r\n    throw new Error('\"' + aName + '\" is a required argument.');\r\n  }\r\n}\r\nexports.getArg = getArg;\r\n\r\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\r\nvar dataUrlRegexp = /^data:.+\\,.+$/;\r\n\r\nfunction urlParse(aUrl) {\r\n  var match = aUrl.match(urlRegexp);\r\n  if (!match) {\r\n    return null;\r\n  }\r\n  return {\r\n    scheme: match[1],\r\n    auth: match[2],\r\n    host: match[3],\r\n    port: match[4],\r\n    path: match[5]\r\n  };\r\n}\r\nexports.urlParse = urlParse;\r\n\r\nfunction urlGenerate(aParsedUrl) {\r\n  var url = '';\r\n  if (aParsedUrl.scheme) {\r\n    url += aParsedUrl.scheme + ':';\r\n  }\r\n  url += '//';\r\n  if (aParsedUrl.auth) {\r\n    url += aParsedUrl.auth + '@';\r\n  }\r\n  if (aParsedUrl.host) {\r\n    url += aParsedUrl.host;\r\n  }\r\n  if (aParsedUrl.port) {\r\n    url += \":\" + aParsedUrl.port\r\n  }\r\n  if (aParsedUrl.path) {\r\n    url += aParsedUrl.path;\r\n  }\r\n  return url;\r\n}\r\nexports.urlGenerate = urlGenerate;\r\n\r\n/**\r\n * Normalizes a path, or the path portion of a URL:\r\n *\r\n * - Replaces consecutive slashes with one slash.\r\n * - Removes unnecessary '.' parts.\r\n * - Removes unnecessary '<dir>/..' parts.\r\n *\r\n * Based on code in the Node.js 'path' core module.\r\n *\r\n * @param aPath The path or url to normalize.\r\n */\r\nfunction normalize(aPath) {\r\n  var path = aPath;\r\n  var url = urlParse(aPath);\r\n  if (url) {\r\n    if (!url.path) {\r\n      return aPath;\r\n    }\r\n    path = url.path;\r\n  }\r\n  var isAbsolute = exports.isAbsolute(path);\r\n\r\n  var parts = path.split(/\\/+/);\r\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\r\n    part = parts[i];\r\n    if (part === '.') {\r\n      parts.splice(i, 1);\r\n    } else if (part === '..') {\r\n      up++;\r\n    } else if (up > 0) {\r\n      if (part === '') {\r\n        // The first part is blank if the path is absolute. Trying to go\r\n        // above the root is a no-op. Therefore we can remove all '..' parts\r\n        // directly after the root.\r\n        parts.splice(i + 1, up);\r\n        up = 0;\r\n      } else {\r\n        parts.splice(i, 2);\r\n        up--;\r\n      }\r\n    }\r\n  }\r\n  path = parts.join('/');\r\n\r\n  if (path === '') {\r\n    path = isAbsolute ? '/' : '.';\r\n  }\r\n\r\n  if (url) {\r\n    url.path = path;\r\n    return urlGenerate(url);\r\n  }\r\n  return path;\r\n}\r\nexports.normalize = normalize;\r\n\r\n/**\r\n * Joins two paths/URLs.\r\n *\r\n * @param aRoot The root path or URL.\r\n * @param aPath The path or URL to be joined with the root.\r\n *\r\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\r\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\r\n *   first.\r\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\r\n *   is updated with the result and aRoot is returned. Otherwise the result\r\n *   is returned.\r\n *   - If aPath is absolute, the result is aPath.\r\n *   - Otherwise the two paths are joined with a slash.\r\n * - Joining for example 'http://' and 'www.example.com' is also supported.\r\n */\r\nfunction join(aRoot, aPath) {\r\n  if (aRoot === \"\") {\r\n    aRoot = \".\";\r\n  }\r\n  if (aPath === \"\") {\r\n    aPath = \".\";\r\n  }\r\n  var aPathUrl = urlParse(aPath);\r\n  var aRootUrl = urlParse(aRoot);\r\n  if (aRootUrl) {\r\n    aRoot = aRootUrl.path || '/';\r\n  }\r\n\r\n  // `join(foo, '//www.example.org')`\r\n  if (aPathUrl && !aPathUrl.scheme) {\r\n    if (aRootUrl) {\r\n      aPathUrl.scheme = aRootUrl.scheme;\r\n    }\r\n    return urlGenerate(aPathUrl);\r\n  }\r\n\r\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\r\n    return aPath;\r\n  }\r\n\r\n  // `join('http://', 'www.example.com')`\r\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\r\n    aRootUrl.host = aPath;\r\n    return urlGenerate(aRootUrl);\r\n  }\r\n\r\n  var joined = aPath.charAt(0) === '/'\r\n    ? aPath\r\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\r\n\r\n  if (aRootUrl) {\r\n    aRootUrl.path = joined;\r\n    return urlGenerate(aRootUrl);\r\n  }\r\n  return joined;\r\n}\r\nexports.join = join;\r\n\r\nexports.isAbsolute = function (aPath) {\r\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\r\n};\r\n\r\n/**\r\n * Make a path relative to a URL or another path.\r\n *\r\n * @param aRoot The root path or URL.\r\n * @param aPath The path or URL to be made relative to aRoot.\r\n */\r\nfunction relative(aRoot, aPath) {\r\n  if (aRoot === \"\") {\r\n    aRoot = \".\";\r\n  }\r\n\r\n  aRoot = aRoot.replace(/\\/$/, '');\r\n\r\n  // It is possible for the path to be above the root. In this case, simply\r\n  // checking whether the root is a prefix of the path won't work. Instead, we\r\n  // need to remove components from the root one by one, until either we find\r\n  // a prefix that fits, or we run out of components to remove.\r\n  var level = 0;\r\n  while (aPath.indexOf(aRoot + '/') !== 0) {\r\n    var index = aRoot.lastIndexOf(\"/\");\r\n    if (index < 0) {\r\n      return aPath;\r\n    }\r\n\r\n    // If the only part of the root that is left is the scheme (i.e. http://,\r\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\r\n    // have exhausted all components, so the path is not relative to the root.\r\n    aRoot = aRoot.slice(0, index);\r\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\r\n      return aPath;\r\n    }\r\n\r\n    ++level;\r\n  }\r\n\r\n  // Make sure we add a \"../\" for each component we removed from the root.\r\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\r\n}\r\nexports.relative = relative;\r\n\r\nvar supportsNullProto = (function () {\r\n  var obj = Object.create(null);\r\n  return !('__proto__' in obj);\r\n}());\r\n\r\nfunction identity (s) {\r\n  return s;\r\n}\r\n\r\n/**\r\n * Because behavior goes wacky when you set `__proto__` on objects, we\r\n * have to prefix all the strings in our set with an arbitrary character.\r\n *\r\n * See https://github.com/mozilla/source-map/pull/31 and\r\n * https://github.com/mozilla/source-map/issues/30\r\n *\r\n * @param String aStr\r\n */\r\nfunction toSetString(aStr) {\r\n  if (isProtoString(aStr)) {\r\n    return '$' + aStr;\r\n  }\r\n\r\n  return aStr;\r\n}\r\nexports.toSetString = supportsNullProto ? identity : toSetString;\r\n\r\nfunction fromSetString(aStr) {\r\n  if (isProtoString(aStr)) {\r\n    return aStr.slice(1);\r\n  }\r\n\r\n  return aStr;\r\n}\r\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\r\n\r\nfunction isProtoString(s) {\r\n  if (!s) {\r\n    return false;\r\n  }\r\n\r\n  var length = s.length;\r\n\r\n  if (length < 9 /* \"__proto__\".length */) {\r\n    return false;\r\n  }\r\n\r\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\r\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\r\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\r\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\r\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\r\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\r\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\r\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\r\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\r\n    return false;\r\n  }\r\n\r\n  for (var i = length - 10; i >= 0; i--) {\r\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Comparator between two mappings where the original positions are compared.\r\n *\r\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\r\n * mappings with the same original source/line/column, but different generated\r\n * line and column the same. Useful when searching for a mapping with a\r\n * stubbed out mapping.\r\n */\r\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\r\n  var cmp = strcmp(mappingA.source, mappingB.source);\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalLine - mappingB.originalLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n  if (cmp !== 0 || onlyCompareOriginal) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  return strcmp(mappingA.name, mappingB.name);\r\n}\r\nexports.compareByOriginalPositions = compareByOriginalPositions;\r\n\r\n/**\r\n * Comparator between two mappings with deflated source and name indices where\r\n * the generated positions are compared.\r\n *\r\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\r\n * mappings with the same generated line and column, but different\r\n * source/name/original line and column the same. Useful when searching for a\r\n * mapping with a stubbed out mapping.\r\n */\r\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\r\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n  if (cmp !== 0 || onlyCompareGenerated) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = strcmp(mappingA.source, mappingB.source);\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalLine - mappingB.originalLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  return strcmp(mappingA.name, mappingB.name);\r\n}\r\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\r\n\r\nfunction strcmp(aStr1, aStr2) {\r\n  if (aStr1 === aStr2) {\r\n    return 0;\r\n  }\r\n\r\n  if (aStr1 === null) {\r\n    return 1; // aStr2 !== null\r\n  }\r\n\r\n  if (aStr2 === null) {\r\n    return -1; // aStr1 !== null\r\n  }\r\n\r\n  if (aStr1 > aStr2) {\r\n    return 1;\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\n/**\r\n * Comparator between two mappings with inflated source and name strings where\r\n * the generated positions are compared.\r\n */\r\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\r\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = strcmp(mappingA.source, mappingB.source);\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalLine - mappingB.originalLine;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\r\n  if (cmp !== 0) {\r\n    return cmp;\r\n  }\r\n\r\n  return strcmp(mappingA.name, mappingB.name);\r\n}\r\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\r\n\r\n/**\r\n * Strip any JSON XSSI avoidance prefix from the string (as documented\r\n * in the source maps specification), and then parse the string as\r\n * JSON.\r\n */\r\nfunction parseSourceMapInput(str) {\r\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\r\n}\r\nexports.parseSourceMapInput = parseSourceMapInput;\r\n\r\n/**\r\n * Compute the URL of a source given the the source root, the source's\r\n * URL, and the source map's URL.\r\n */\r\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\r\n  sourceURL = sourceURL || '';\r\n\r\n  if (sourceRoot) {\r\n    // This follows what Chrome does.\r\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\r\n      sourceRoot += '/';\r\n    }\r\n    // The spec says:\r\n    //   Line 4: An optional source root, useful for relocating source\r\n    //   files on a server or removing repeated values in the\r\n    //   “sources” entry.  This value is prepended to the individual\r\n    //   entries in the “source” field.\r\n    sourceURL = sourceRoot + sourceURL;\r\n  }\r\n\r\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\r\n  // a parameter.  This mode is still somewhat supported, which is why\r\n  // this code block is conditional.  However, it's preferable to pass\r\n  // the source map URL to SourceMapConsumer, so that this function\r\n  // can implement the source URL resolution algorithm as outlined in\r\n  // the spec.  This block is basically the equivalent of:\r\n  //    new URL(sourceURL, sourceMapURL).toString()\r\n  // ... except it avoids using URL, which wasn't available in the\r\n  // older releases of node still supported by this library.\r\n  //\r\n  // The spec says:\r\n  //   If the sources are not absolute URLs after prepending of the\r\n  //   “sourceRoot”, the sources are resolved relative to the\r\n  //   SourceMap (like resolving script src in a html document).\r\n  if (sourceMapURL) {\r\n    var parsed = urlParse(sourceMapURL);\r\n    if (!parsed) {\r\n      throw new Error(\"sourceMapURL could not be parsed\");\r\n    }\r\n    if (parsed.path) {\r\n      // Strip the last path component, but keep the \"/\".\r\n      var index = parsed.path.lastIndexOf('/');\r\n      if (index >= 0) {\r\n        parsed.path = parsed.path.substring(0, index + 1);\r\n      }\r\n    }\r\n    sourceURL = join(urlGenerate(parsed), sourceURL);\r\n  }\r\n\r\n  return normalize(sourceURL);\r\n}\r\nexports.computeSourceURL = computeSourceURL;\r\n"]},"metadata":{},"sourceType":"script"}