{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Col,Grid,Row}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import{getALL,getPlantInfo,setVisible}from\"redux/index\";import{CardNoFooter}from\"../components/Card/Card\";import EnhancedTable from\"../components/SuperTable/AdvanceTable\";import{getAdvanceData,getMaterialHeader,getModalVisible}from\"../redux/Selector/Selectors\";import*as variable from\"../variables/Variables\";import VerticalTab from\"components/MaterialComponent/VerticalTab\";import{fetchPostList}from\"api/APICall\";import{ShowPopUp,SuccessPopUp,LoadingPopUp,FailPopUp}from\"components/Modal/Modal\";import\"components/LoadingSpinner/LoadingSpinner\";import LoadingSpinner from\"components/LoadingSpinner/LoadingSpinner\";import ChartistGraph from\"react-chartist\";export default function StickyHeadTable(){var materialBody=useSelector(function(state){return getAdvanceData(state);});var materialHeader=useSelector(function(state){return getMaterialHeader(state);});var dispatch=useDispatch();var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),successVisible=_React$useState2[0],setSuccessVisible=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),failVisible=_React$useState4[0],setFailVisible=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),loadingVisible=_React$useState6[0],setLoadingVisible=_React$useState6[1];var visible=useSelector(function(state){return getModalVisible(state);});// ! Tắt cái modal đi\nfunction closeModal(){dispatch(setVisible(false));}function autoCloseSuccessModal(){setSuccessVisible(true);setTimeout(function(){setSuccessVisible(false);},2000);}function autoCloseFailModal(){setFailVisible(true);setTimeout(function(){setFailVisible(false);},2000);}function doing(requestStatus){setLoadingVisible(false);switch(requestStatus){case variable.fulfilled:console.log(\"đã vào\");autoCloseSuccessModal();break;case variable.rejected:autoCloseFailModal();break;// ! Trường hợp pendding sẽ xảy ra trước và nếu như thành công thì nó sẽ đi vào fullfill, lỗi thì error\n//! đọc trong link này:https://redux-toolkit.js.org/api/createAsyncThunk\n}}React.useEffect(function(){//! 1 lưu ý quan trọng là nếu muón sử dụng async function ở trong useEffect thì ta phải triển khai nó luôn ở trong useEffect và gọi nó như ở dưới,\n// ! Tuyệt đối ko tự biến useEffect thành async function =)\nvar fetchPostList=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,requestStatus;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return dispatch(getPlantInfo({title:\"Húng quế\"}));case 3:response=_context.sent;requestStatus=response.meta.requestStatus;doing(requestStatus);console.log(\"response\",response);// * Nếu có sử dụng gì ở local này thì ta cứ lấy response ra mà dùng\n_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.log(\"Failed to fetch product list: \",_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function fetchPostList(){return _ref.apply(this,arguments);};}();//! Trước khi api đc gọi thì ta sẽ cho cái loading nó chạy\nsetLoadingVisible(true);fetchPostList();},[]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(SuccessPopUp,{visible:successVisible,length:\"200px\"}),/*#__PURE__*/React.createElement(ShowPopUp,{visible:visible,onCLose:closeModal,length:\"45%\"},/*#__PURE__*/React.createElement(Grid,{fluid:true,style:{margin:0,padding:0}},/*#__PURE__*/React.createElement(CardNoFooter,{title:\"Danh s\\xE1ch b\\xE0i \\u0111\\u0103ng b\\u1ECB b\\xE1o c\\xE1o\",content:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(VerticalTab,null))}))),/*#__PURE__*/React.createElement(FailPopUp,{visible:failVisible,length:\"200px\"}),/*#__PURE__*/React.createElement(LoadingPopUp,{visible:loadingVisible,length:\"200px\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"content\"},/*#__PURE__*/React.createElement(Grid,{fluid:true,style:{margin:0,padding:0}},/*#__PURE__*/React.createElement(CardNoFooter,{titlet:\"Account list\",content:/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xs:12},/*#__PURE__*/React.createElement(EnhancedTable,{headCells:materialHeader,bodyData:materialBody,actionbuttonlist:[\"remove\"]// actionbuttonlist={[]}\n})))}))));}","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/views/Account.jsx"],"names":["React","Col","Grid","Row","useDispatch","useSelector","getALL","getPlantInfo","setVisible","CardNoFooter","EnhancedTable","getAdvanceData","getMaterialHeader","getModalVisible","variable","VerticalTab","fetchPostList","ShowPopUp","SuccessPopUp","LoadingPopUp","FailPopUp","LoadingSpinner","ChartistGraph","StickyHeadTable","materialBody","state","materialHeader","dispatch","useState","successVisible","setSuccessVisible","failVisible","setFailVisible","loadingVisible","setLoadingVisible","visible","closeModal","autoCloseSuccessModal","setTimeout","autoCloseFailModal","doing","requestStatus","fulfilled","console","log","rejected","useEffect","title","response","meta","margin","padding"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Col, Grid, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getALL, getPlantInfo, setVisible } from \"redux/index\";\r\nimport { CardNoFooter } from \"../components/Card/Card\";\r\nimport EnhancedTable from \"../components/SuperTable/AdvanceTable\";\r\nimport {\r\n  getAdvanceData,\r\n  getMaterialHeader,\r\n  getModalVisible,\r\n} from \"../redux/Selector/Selectors\";\r\nimport * as variable from \"../variables/Variables\";\r\nimport VerticalTab from \"components/MaterialComponent/VerticalTab\";\r\nimport { fetchPostList } from \"api/APICall\";\r\nimport {\r\n  ShowPopUp,\r\n  SuccessPopUp,\r\n  LoadingPopUp,\r\n  FailPopUp,\r\n} from \"components/Modal/Modal\";\r\nimport {} from \"components/LoadingSpinner/LoadingSpinner\";\r\nimport LoadingSpinner from \"components/LoadingSpinner/LoadingSpinner\";\r\nimport ChartistGraph from \"react-chartist\";\r\n\r\nexport default function StickyHeadTable() {\r\n  let materialBody = useSelector((state) => getAdvanceData(state));\r\n  let materialHeader = useSelector((state) => getMaterialHeader(state));\r\n  let dispatch = useDispatch();\r\n  let [successVisible, setSuccessVisible] = React.useState(false);\r\n  let [failVisible, setFailVisible] = React.useState(false);\r\n  let [loadingVisible, setLoadingVisible] = React.useState(false);\r\n  let visible = useSelector((state) => getModalVisible(state));\r\n\r\n  // ! Tắt cái modal đi\r\n  function closeModal() {\r\n    dispatch(setVisible(false));\r\n  }\r\n\r\n  function autoCloseSuccessModal() {\r\n    setSuccessVisible(true);\r\n    setTimeout(function () {\r\n      setSuccessVisible(false);\r\n    }, 2000);\r\n  }\r\n  function autoCloseFailModal() {\r\n    setFailVisible(true);\r\n    setTimeout(function () {\r\n      setFailVisible(false);\r\n    }, 2000);\r\n  }\r\n  function doing(requestStatus) {\r\n    setLoadingVisible(false);\r\n    switch (requestStatus) {\r\n      case variable.fulfilled:\r\n        console.log(\"đã vào\");\r\n        autoCloseSuccessModal();\r\n        break;\r\n      case variable.rejected:\r\n        autoCloseFailModal();\r\n        break;\r\n      // ! Trường hợp pendding sẽ xảy ra trước và nếu như thành công thì nó sẽ đi vào fullfill, lỗi thì error\r\n      //! đọc trong link này:https://redux-toolkit.js.org/api/createAsyncThunk\r\n    }\r\n  }\r\n  React.useEffect(() => {\r\n    //! 1 lưu ý quan trọng là nếu muón sử dụng async function ở trong useEffect thì ta phải triển khai nó luôn ở trong useEffect và gọi nó như ở dưới,\r\n    // ! Tuyệt đối ko tự biến useEffect thành async function =)\r\n    const fetchPostList = async () => {\r\n      // * Bắt try catch ở đây là để tránh lỗi crash ứng dụng lỡ như trong quá trình dispatch đến getAll bị lỗi\r\n      try {\r\n        // const response = await dispatch(getALL());\r\n        const response = await dispatch(getPlantInfo({ title: \"Húng quế\" }));\r\n        const requestStatus = response.meta.requestStatus;\r\n        doing(requestStatus);\r\n        console.log(\"response\", response);\r\n\r\n        // * Nếu có sử dụng gì ở local này thì ta cứ lấy response ra mà dùng\r\n      } catch (errpr) {\r\n        console.log(\"Failed to fetch product list: \", errpr);\r\n      }\r\n    };\r\n\r\n    //! Trước khi api đc gọi thì ta sẽ cho cái loading nó chạy\r\n    setLoadingVisible(true);\r\n    fetchPostList();\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <SuccessPopUp visible={successVisible} length=\"200px\" />\r\n      <ShowPopUp visible={visible} onCLose={closeModal} length=\"45%\">\r\n        <Grid fluid style={{ margin: 0, padding: 0 }}>\r\n          <CardNoFooter\r\n            title=\"Danh sách bài đăng bị báo cáo\"\r\n            content={\r\n              <React.Fragment>\r\n                <VerticalTab />\r\n              </React.Fragment>\r\n            }\r\n          ></CardNoFooter>\r\n        </Grid>\r\n      </ShowPopUp>\r\n      <FailPopUp visible={failVisible} length=\"200px\" />\r\n      <LoadingPopUp visible={loadingVisible} length=\"200px\" />\r\n      <div className=\"content\">\r\n        <Grid fluid style={{ margin: 0, padding: 0 }}>\r\n          <CardNoFooter\r\n            titlet=\"Account list\"\r\n            content={\r\n              <Row>\r\n                <Col xs={12}>\r\n                  {/* Để có thể thực hiện hành động lock tài khoản thì hãy thêm field isLock ở mỗi dòng dữ liệu của body data */}\r\n                  <EnhancedTable\r\n                    headCells={materialHeader}\r\n                    bodyData={materialBody}\r\n                    actionbuttonlist={[\"remove\",]}\r\n                    // actionbuttonlist={[]}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            }\r\n          />\r\n        </Grid>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}