{"ast":null,"code":"var _jsxFileName = \"E:\\\\light-bootstrap-dashboard-react-master\\\\src\\\\views\\\\Dashboard.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component, useState } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport crown from \"assets/img/crown.png\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport ChartistTooltip from \"chartist-plugin-tooltips-updated\";\nimport { Card, CardNoFooter } from \"components/Card/Card.jsx\";\nimport Chartist, { plugins } from \"chartist\";\nimport { StatsCard, MiniChartCard } from \"components/StatsCard/StatsCard.jsx\";\nimport { Tasks } from \"components/Tasks/Tasks.jsx\";\nimport { dataPie, legendPie // dataSales,\n, optionsSales, responsiveSales, legendSales, dataBar, optionsBar, responsiveBar, legendBar } from \"variables/Variables.jsx\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ShowPopUp, SuccessPopUp, LoadingPopUp } from \"components/Modal/Modal\";\nimport { FormControll } from \"components/Formik/FormikControl\";\nimport { MaterialButton } from \"components/CustomButton/MaterialButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDashboard, getTop10, getShareAndExchangeCompare } from \"../redux/index\";\nimport { getDashboardUpdate } from \"redux/Selector/Selectors\";\nimport { Box } from \"@material-ui/core\";\n\nrequire(\"chartist-plugin-legend\");\n\nfunction Dashboard() {\n  const dispatch = useDispatch();\n  const [dataSales, setDataSales] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [top10, setTop10] = useState([]);\n  const [top10Account, setTop10Account] = useState([]);\n  const [compare, setCompare] = useState({});\n  React.useEffect(() => {\n    try {\n      const prepare = () => {\n        dispatch(getDashboard()).then(response => {\n          const data = response.payload.data;\n          console.log(\"dashboard nè \", data);\n          const labels = [...data.labels, \"\"];\n          const tmp = {\n            labels: labels,\n            series: data.series\n          };\n          setDataSales(tmp);\n        });\n        dispatch(getTop10(2)).then(res => {\n          const tmp = res.payload.data;\n          setTop10(tmp);\n          console.log(\"danh sách 10 rau: \", res);\n        });\n        dispatch(getTop10(1)).then(res => {\n          const tmp = res.payload.data;\n          setTop10Account(tmp);\n          console.log(\"danh sách 10 người: \", res);\n        });\n        dispatch(getShareAndExchangeCompare()).then(res => {\n          setCompare(res.payload.data);\n          console.log(\"share và exchage: \", res);\n        });\n        setLoading(false);\n      };\n\n      prepare();\n    } catch (error) {\n      console.log(\"Failed to fetch product list: \", error);\n    }\n  }, []);\n  const updateButtonForm = useSelector(state => getDashboardUpdate(state));\n  const options = {\n    plugins: [ChartistTooltip()]\n  };\n  console.log(updateButtonForm);\n  const initialValues = {\n    updateTime: \"\"\n  };\n\n  const onSubmit = values => {};\n\n  const dropdownOptions = [{\n    key: \"Tháng này\",\n    value: \"thismonth\"\n  }, {\n    key: \"Hôm nay\",\n    value: \"today\"\n  }, {\n    key: \"7 ngày trước\",\n    value: \"last7days\"\n  }];\n\n  function createLegend(json) {\n    var legend = [];\n\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push( /*#__PURE__*/React.createElement(\"i\", {\n        className: type,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }\n      }));\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n\n    return legend;\n  }\n\n  const size = 20;\n  const number = {\n    color: \"white\",\n    background: \"#63d8f1\",\n    paddingLeft: 5,\n    paddingRight: 5,\n    marginLeft: 5\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LoadingPopUp, {\n    visible: loading,\n    length: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, formik => {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, updateButtonForm.map(item => {\n      item.row.cols.map(col => {\n        const {\n          name,\n          type,\n          placeholder,\n          labeltext\n        } = col.elementConfig;\n        return /*#__PURE__*/React.createElement(FormControll, {\n          control: \"select\",\n          label: labeltext,\n          name: name,\n          options: dropdownOptions,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }\n        });\n      });\n    }), /*#__PURE__*/React.createElement(MaterialButton, {\n      variant: \"contained\",\n      color: \"info\",\n      size: \"large\",\n      style: {\n        marginRight: 5\n      } // click={() => autoCloseSuccessModal()}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, \"C\\u1EADp nh\\u1EADt\"));\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    id: \"chartHours\",\n    title: \"Ho\\u1EA1t \\u0111\\u1ED9ng c\\u1EE7a ng\\u01B0\\u1EDDi  d\\xF9ng\",\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ct-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ChartistGraph, {\n      data: dataSales,\n      type: \"Line\",\n      options: optionsSales,\n      responsiveOptions: responsiveSales,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 19\n      }\n    })),\n    legend: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 23\n      }\n    }, createLegend(legendSales)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    id: \"chartActivity\",\n    title: \"2014 Sales\",\n    category: \"All products including Taxes\",\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ct-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ChartistGraph, {\n      data: dataBar,\n      type: \"Bar\",\n      options: optionsBar,\n      responsiveOptions: responsiveBar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 19\n      }\n    })),\n    legend: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 23\n      }\n    }, createLegend(legendBar)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    id: \"top10A\",\n    title: \"Top 10 rau \" // category=\"All products including Taxes\"\n    ,\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }, top10.map((item, index) => {\n      if (index == 0) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: crown,\n          height: size,\n          width: size,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          style: number,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 27\n          }\n        }, index), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginLeft: 5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 27\n          }\n        }, item.id), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginLeft: 5,\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 27\n          }\n        }, item.text));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Box, {\n          height: size,\n          width: size,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          style: number,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 27\n          }\n        }, index), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginLeft: 5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 27\n          }\n        }, item.id), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginLeft: 5,\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 27\n          }\n        }, item.text));\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    id: \"top10B\",\n    title: \"Top 10 t\\xE0i kho\\u1EA3n \" // category=\"All products including Taxes\"\n    ,\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }\n    }, top10Account.map((item, index) => {\n      if (index == 0) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: crown,\n          height: size,\n          width: size,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          style: number,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 27\n          }\n        }, index), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginLeft: 5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 27\n          }\n        }, item.id), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginLeft: 5,\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 27\n          }\n        }, item.text));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Box, {\n          height: size,\n          width: size,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 27\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          style: number,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 27\n          }\n        }, index), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginLeft: 5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 27\n          }\n        }, item.id), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginLeft: 5,\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 27\n          }\n        }, item.text));\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/views/Dashboard.jsx"],"names":["React","Component","useState","ChartistGraph","crown","Grid","Row","Col","ChartistTooltip","Card","CardNoFooter","Chartist","plugins","StatsCard","MiniChartCard","Tasks","dataPie","legendPie","optionsSales","responsiveSales","legendSales","dataBar","optionsBar","responsiveBar","legendBar","Formik","Form","Yup","ShowPopUp","SuccessPopUp","LoadingPopUp","FormControll","MaterialButton","useDispatch","useSelector","getDashboard","getTop10","getShareAndExchangeCompare","getDashboardUpdate","Box","require","Dashboard","dispatch","dataSales","setDataSales","loading","setLoading","top10","setTop10","top10Account","setTop10Account","compare","setCompare","useEffect","prepare","then","response","data","payload","console","log","labels","tmp","series","res","error","updateButtonForm","state","options","initialValues","updateTime","onSubmit","values","dropdownOptions","key","value","createLegend","json","legend","i","length","type","push","size","number","color","background","paddingLeft","paddingRight","marginLeft","formik","map","item","row","cols","col","name","placeholder","labeltext","elementConfig","marginRight","index","display","flexDirection","id","fontWeight","text"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component, useState } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport crown from \"assets/img/crown.png\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport ChartistTooltip from \"chartist-plugin-tooltips-updated\";\nimport { Card, CardNoFooter } from \"components/Card/Card.jsx\";\nimport Chartist, { plugins } from \"chartist\";\nimport { StatsCard, MiniChartCard } from \"components/StatsCard/StatsCard.jsx\";\nimport { Tasks } from \"components/Tasks/Tasks.jsx\";\nimport {\n  dataPie,\n  legendPie,\n  // dataSales,\n  optionsSales,\n  responsiveSales,\n  legendSales,\n  dataBar,\n  optionsBar,\n  responsiveBar,\n  legendBar,\n} from \"variables/Variables.jsx\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ShowPopUp, SuccessPopUp, LoadingPopUp } from \"components/Modal/Modal\";\nimport { FormControll } from \"components/Formik/FormikControl\";\nimport { MaterialButton } from \"components/CustomButton/MaterialButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getDashboard,\n  getTop10,\n  getShareAndExchangeCompare,\n} from \"../redux/index\";\nimport { getDashboardUpdate } from \"redux/Selector/Selectors\";\nimport { Box } from \"@material-ui/core\";\nrequire(\"chartist-plugin-legend\");\n\nfunction Dashboard() {\n  const dispatch = useDispatch();\n  const [dataSales, setDataSales] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [top10, setTop10] = useState([]);\n  const [top10Account, setTop10Account] = useState([]);\n  const [compare, setCompare] = useState({});\n  React.useEffect(() => {\n    try {\n      const prepare = () => {\n        dispatch(getDashboard()).then((response) => {\n          const data = response.payload.data;\n          console.log(\"dashboard nè \", data);\n          const labels = [...data.labels, \"\"];\n          const tmp = {\n            labels: labels,\n            series: data.series,\n          };\n          setDataSales(tmp);\n        });\n        dispatch(getTop10(2)).then((res) => {\n          const tmp = res.payload.data;\n          setTop10(tmp);\n          console.log(\"danh sách 10 rau: \", res);\n        });\n        dispatch(getTop10(1)).then((res) => {\n          const tmp = res.payload.data;\n          setTop10Account(tmp);\n          console.log(\"danh sách 10 người: \", res);\n        });\n        dispatch(getShareAndExchangeCompare()).then((res) => {\n          setCompare(res.payload.data);\n          console.log(\"share và exchage: \", res);\n        });\n        setLoading(false);\n      };\n      prepare();\n    } catch (error) {\n      console.log(\"Failed to fetch product list: \", error);\n    }\n  }, []);\n  const updateButtonForm = useSelector((state) => getDashboardUpdate(state));\n  const options = {\n    plugins: [ChartistTooltip()],\n  };\n  console.log(updateButtonForm);\n  const initialValues = {\n    updateTime: \"\",\n  };\n  const onSubmit = (values) => {};\n  const dropdownOptions = [\n    { key: \"Tháng này\", value: \"thismonth\" },\n    { key: \"Hôm nay\", value: \"today\" },\n    { key: \"7 ngày trước\", value: \"last7days\" },\n  ];\n  function createLegend(json) {\n    var legend = [];\n    for (var i = 0; i < json[\"names\"].length; i++) {\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\n      legend.push(<i className={type} key={i} />);\n      legend.push(\" \");\n      legend.push(json[\"names\"][i]);\n    }\n    return legend;\n  }\n  const size = 20;\n  const number = {\n    color: \"white\",\n    background: \"#63d8f1\",\n    paddingLeft: 5,\n    paddingRight: 5,\n    marginLeft: 5,\n  };\n  return (\n    <div className=\"content\">\n      <LoadingPopUp visible={loading} length=\"200px\" />\n      <Grid fluid>\n        <Row>\n          <Formik initialValues={initialValues} onSubmit={onSubmit}>\n            {(formik) => {\n              return (\n                <Form>\n                  {updateButtonForm.map((item) => {\n                    item.row.cols.map((col) => {\n                      const {\n                        name,\n                        type,\n                        placeholder,\n                        labeltext,\n                      } = col.elementConfig;\n                      return (\n                        <FormControll\n                          control={\"select\"}\n                          label={labeltext}\n                          name={name}\n                          options={dropdownOptions}\n                        />\n                      );\n                    });\n                  })}\n                  <MaterialButton\n                    variant=\"contained\"\n                    color=\"info\"\n                    size=\"large\"\n                    style={{ marginRight: 5 }}\n                    // click={() => autoCloseSuccessModal()}\n                  >\n                    Cập nhật\n                  </MaterialButton>\n                </Form>\n              );\n            }}\n          </Formik>\n          {/* <Col lg={3} sm={6}>\n              <Card\n                statsIcon=\"fa fa-history\"\n                id=\"chartHours\"\n                title=\"Hoạt động của người  dùng\"\n                category=\"24 Hours performance\"\n                stats=\"Updated 3 minutes ago\"\n                content={\n                  <div className=\"ct-chart\">\n                    <ChartistGraph\n                      data={dataSales}\n                      type=\"Line\"\n                      options={optionsSales}\n                      responsiveOptions={responsiveSales}\n                    />\n                  </div>\n                }\n              />\n            </Col> */}\n          {/* <Col lg={3} sm={6}>\n              <MiniChartCard\n                content={\n                  <ChartistGraph\n                    className={\"ct-chart\"}\n                    data={dataSales}\n                    type=\"Line\"\n                    options={optionsSales}\n                    responsiveOptions={responsiveSales}\n                  />\n                }\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText=\"Updated now\"\n              />\n            </Col> */}\n          {/* <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"pe-7s-wallet text-success\" />}\n                statsText=\"Revenue\"\n                statsValue=\"$1,345\"\n                statsIcon={<i className=\"fa fa-calendar-o\" />}\n                statsIconText=\"Last day\"\n              />\n            </Col> */}\n          {/* <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\n                statsText=\"Errors\"\n                statsValue=\"23\"\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText=\"In the last hour\"\n              />\n            </Col> */}\n          {/* <Col lg={3} sm={6}>\n              <StatsCard\n                bigIcon={<i className=\"fa fa-twitter text-info\" />}\n                statsText=\"Followers\"\n                statsValue=\"+45\"\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText=\"Updated now\"\n              />\n            </Col> */}\n        </Row>\n        <Row>\n          <Col md={12}>\n            <Card\n              id=\"chartHours\"\n              title=\"Hoạt động của người  dùng\"\n              content={\n                <div className=\"ct-chart\">\n                  <ChartistGraph\n                    data={dataSales}\n                    type=\"Line\"\n                    options={optionsSales}\n                    responsiveOptions={responsiveSales}\n                  />\n                </div>\n              }\n              legend={<div className=\"legend\">{createLegend(legendSales)}</div>}\n            />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={5}>\n            <Card\n              id=\"chartActivity\"\n              title=\"2014 Sales\"\n              category=\"All products including Taxes\"\n              content={\n                <div className=\"ct-chart\">\n                  <ChartistGraph\n                    data={dataBar}\n                    type=\"Bar\"\n                    options={optionsBar}\n                    responsiveOptions={responsiveBar}\n                  />\n                </div>\n              }\n              legend={<div className=\"legend\">{createLegend(legendBar)}</div>}\n            />\n          </Col>\n          <Col md={4}>\n            <Card\n              id=\"top10A\"\n              title=\"Top 10 rau \"\n              // category=\"All products including Taxes\"\n              content={\n                <div>\n                  {top10.map((item, index) => {\n                    if (index == 0) {\n                      return (\n                        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                          <img src={crown} height={size} width={size} />\n                          <p style={number}>{index}</p>\n                          <p style={{ marginLeft: 5 }}>{item.id}</p>\n                          <p style={{ marginLeft: 5, fontWeight: \"bold\" }}>\n                            {item.text}\n                          </p>\n                        </div>\n                      );\n                    } else {\n                      return (\n                        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                          <Box height={size} width={size}></Box>\n                          <p style={number}>{index}</p>\n                          <p style={{ marginLeft: 5 }}>{item.id}</p>\n                          <p style={{ marginLeft: 5, fontWeight: \"bold\" }}>\n                            {item.text}\n                          </p>\n                        </div>\n                      );\n                    }\n                  })}\n                </div>\n              }\n            />\n          </Col>\n          <Col md={4}>\n            <Card\n              id=\"top10B\"\n              title=\"Top 10 tài khoản \"\n              // category=\"All products including Taxes\"\n              content={\n                <div>\n                  {top10Account.map((item, index) => {\n                    if (index == 0) {\n                      return (\n                        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                          <img src={crown} height={size} width={size} />\n                          <p style={number}>{index}</p>\n                          <p style={{ marginLeft: 5 }}>{item.id}</p>\n                          <p style={{ marginLeft: 5, fontWeight: \"bold\" }}>\n                            {item.text}\n                          </p>\n                        </div>\n                      );\n                    } else {\n                      return (\n                        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                          <Box height={size} width={size}></Box>\n                          <p style={number}>{index}</p>\n                          <p style={{ marginLeft: 5 }}>{item.id}</p>\n                          <p style={{ marginLeft: 5, fontWeight: \"bold\" }}>\n                            {item.text}\n                          </p>\n                        </div>\n                      );\n                    }\n                  })}\n                </div>\n              }\n            />\n          </Col>\n          {/* <Col md={6}>\n              <Card\n                title=\"Tasks\"\n                category=\"Backend development\"\n                stats=\"Updated 3 minutes ago\"\n                statsIcon=\"fa fa-history\"\n                content={\n                  <div className=\"table-full-width\">\n                    <table className=\"table\">\n                      <Tasks />\n                    </table>\n                  </div>\n                }\n              />\n            </Col> */}\n        </Row>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}