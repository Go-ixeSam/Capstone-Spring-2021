{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Sam\\\\Documents\\\\GitHub\\\\Capstone-Spring-2021\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _defineProperty from\"C:\\\\Users\\\\Sam\\\\Documents\\\\GitHub\\\\Capstone-Spring-2021\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";var _initialValue,_Yup$object;import{Box}from\"@material-ui/core\";import{grey}from\"@material-ui/core/colors\";import{FormControll}from\"components/Formik/FormikControl\";import{Field,Form,Formik}from\"formik\";import React,{useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import loginReducer from\"redux/Login/LoginSlice\";import{getSignInForm,getToken}from\"redux/Selector/Selectors\";import*as variable from\"variables/Variables\";import*as Yup from\"yup\";import\"../components/SignIn/style.scss\";import{getALL,getPlantInfo,login,sharingDetail}from\"redux/index\";import{loginToWeb}from\"components/Hook/CustomHook\";import message from\"util/firebase\";var width=240;var marginBottom=5;var headeFontSize=20;var choseSignInTypeHeight=30;var choseSignInTypeWidth=\"80%\";var startIcon=15;var chooseSignInPadding=20;var attensionPadding=10;// * Style cho may cai nut chon loai dang nhap\nvar choseStyle={height:choseSignInTypeHeight,padding:0,marginBottom:10,width:choseSignInTypeWidth,fontSize:12};var initialValue=(_initialValue={},_defineProperty(_initialValue,variable.username,\"\"),_defineProperty(_initialValue,variable.password,\"\"),_initialValue);/**\r\n * * hàm test dùng để tạo ra 1 validation custom\r\n * * với tham số 1 là tên của cái validation này\r\n * * tham số 2 là message error\r\n * * tham số 3 là 1 function với value chính là cái data đc input\r\n */var validationSchema=Yup.object((_Yup$object={},_defineProperty(_Yup$object,variable.password,Yup.string().required([variable.require])),_defineProperty(_Yup$object,variable.username,Yup.string().required([variable.require])),_defineProperty(_Yup$object,\"checkpassword\",Yup.string().when([variable.password],{is:function is(val){return val==\"sam\">0?true:false;},then:Yup.string().oneOf([Yup.ref(variable.password)],\"Your password is wrong\")})),_Yup$object));function Signin(){var token=useSelector(function(state){return getToken(state);});var signInForm=useSelector(function(state){return getSignInForm(state);});var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),firebaseToken=_React$useState2[0],setFirebaseToken=_React$useState2[1];var dispatch=useDispatch();React.useEffect(function(){//! laasy firebase token cai da\n// const messaging = firebase.messaging();\n// Get registration token. Initially this makes a network call, once retrieved\n// subsequent calls to getToken will return from cache.\nmessage.getToken({vapidKey:\"BJT4KMAdFm6G8Sjq49q8RmDMsP6w0jPUghMTSMcdfkduJnBNzfxsSlLGEAMQzKjsu1aCtCtGA9TBT4D1wCk4SxM\"}).then(function(currentToken){if(currentToken){// Send the token to your server and update the UI if necessary\n// ...\nsetFirebaseToken(currentToken);console.log(\"firebae token day=\",currentToken);}else{// Show permission request UI\nconsole.log(\"No registration token available. Request permission to generate one.\");// ...\n}}).catch(function(err){console.log(\"An error occurred while retrieving token. \",err);// ...\n});},[]);var onSubmit=function onSubmit(value,onSubmitProps){console.log(\"submit value và có ở Sâm: \",value);//* giá trị của submiting thì formik sẽ tự động set khi ta dùng đén fieldError, bỏi vì nó làm thay đổi đến object error nên submiting sẽ ko\n//* chuyển thành true\n//! Nếu như token bằng rỗng thì chứng tỏ mật khẩu sai\nconsole.log(\"token lên web vào ngày 5/5\",firebaseToken);dispatch(login({phoneNumber:value.username,deviceToken:firebaseToken,password:value.password})//* * Ở đây ta dùng .then là vì createAsyncThunk nó trả về 1 promise, nếu như ta dùng asynce await để nhận thì\n//* sẽ vi phạm nguyên tắc hook là bỏ hook trong 1 nested function\n//* ở dưới đang là check token trong store, nếu ta muốn sử dụng result từ .then trả về thì\n//! .then((result)=>{ }), lúc này ta vẫn có thể sử dụng popUp loading,success và fail như ta hằng mong muốn\n).then(function(){if(token==\"\"){onSubmitProps.setFieldError([variable.password],\"Hãy kiểm tra lại mật khẩu hoặc tên đăng nhập của bạn\");}else{// alert(\"Ok rồi nha\");\n}});};return/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\",flexDirection:\"row\",alignItems:\"center\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"login-page\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form\"},/*#__PURE__*/React.createElement(Formik,{initialValues:initialValue,validationSchema:validationSchema,onSubmit:onSubmit},function(formik){return/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\",flexDirection:\"row\",paddingLeft:15,fontFamily:\"Roboto\"}},/*#__PURE__*/React.createElement(\"p\",{style:{color:\"#9e9e9e\",fontSize:headeFontSize}},\"\\u0110\\u0103ng nh\\u1EADp\"),/*#__PURE__*/React.createElement(Box,{width:5}),/*#__PURE__*/React.createElement(\"p\",{style:{fontWeight:\"bold\",fontSize:headeFontSize}},\"Web Admin\")),signInForm.map(function(rows){var columns=rows.row.cols;return columns.map(function(column){var controlType=column.elementType;var _column$elementConfig=column.elementConfig,name=_column$elementConfig.name,type=_column$elementConfig.type,placeholder=_column$elementConfig.placeholder,labeltext=_column$elementConfig.labeltext;return/*#__PURE__*/React.createElement(FormControll,Object.assign({elementType:\"input\",type:type,name:name,placeholder:placeholder},column));});}),/*#__PURE__*/React.createElement(\"div\",{className:\"attensin\",style:{visibility:\"hidden\",textAlign:\"right\",paddingRight:attensionPadding,marginTop:5}},/*#__PURE__*/React.createElement(\"p\",{style:{fontSize:12,fontWeight:\"bold\"}},\"Qu\\xEAn m\\u1EADt kh\\u1EA9u?\")),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"\\u0110\\u0103ng nh\\u1EADp\"));}))));}export default Signin;","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/views/Signin.jsx"],"names":["Box","grey","FormControll","Field","Form","Formik","React","useEffect","useDispatch","useSelector","loginReducer","getSignInForm","getToken","variable","Yup","getALL","getPlantInfo","login","sharingDetail","loginToWeb","message","width","marginBottom","headeFontSize","choseSignInTypeHeight","choseSignInTypeWidth","startIcon","chooseSignInPadding","attensionPadding","choseStyle","height","padding","fontSize","initialValue","username","password","validationSchema","object","string","required","require","when","is","val","then","oneOf","ref","Signin","token","state","signInForm","useState","firebaseToken","setFirebaseToken","dispatch","vapidKey","currentToken","console","log","catch","err","onSubmit","value","onSubmitProps","phoneNumber","deviceToken","setFieldError","display","flexDirection","alignItems","formik","paddingLeft","fontFamily","color","fontWeight","map","rows","columns","row","cols","column","controlType","elementType","elementConfig","name","type","placeholder","labeltext","visibility","textAlign","paddingRight","marginTop"],"mappings":"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","sourcesContent":["import { Box } from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { FormControll } from \"components/Formik/FormikControl\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport loginReducer from \"redux/Login/LoginSlice\";\r\nimport { getSignInForm, getToken } from \"redux/Selector/Selectors\";\r\nimport * as variable from \"variables/Variables\";\r\nimport * as Yup from \"yup\";\r\nimport \"../components/SignIn/style.scss\";\r\nimport { getALL, getPlantInfo, login, sharingDetail } from \"redux/index\";\r\nimport { loginToWeb } from \"components/Hook/CustomHook\";\r\nimport message from \"util/firebase\";\r\n\r\nlet width = 240;\r\nlet marginBottom = 5;\r\nlet headeFontSize = 20;\r\nlet choseSignInTypeHeight = 30;\r\nlet choseSignInTypeWidth = \"80%\";\r\nlet startIcon = 15;\r\nlet chooseSignInPadding = 20;\r\nlet attensionPadding = 10;\r\n// * Style cho may cai nut chon loai dang nhap\r\nlet choseStyle = {\r\n  height: choseSignInTypeHeight,\r\n  padding: 0,\r\n  marginBottom: 10,\r\n  width: choseSignInTypeWidth,\r\n  fontSize: 12,\r\n};\r\n\r\nconst initialValue = {\r\n  [variable.username]: \"\",\r\n  [variable.password]: \"\",\r\n};\r\n\r\n/**\r\n * * hàm test dùng để tạo ra 1 validation custom\r\n * * với tham số 1 là tên của cái validation này\r\n * * tham số 2 là message error\r\n * * tham số 3 là 1 function với value chính là cái data đc input\r\n */\r\n\r\nconst validationSchema = Yup.object({\r\n  [variable.password]: Yup.string().required([variable.require]),\r\n  [variable.username]: Yup.string().required([variable.require]),\r\n  checkpassword: Yup.string().when([variable.password], {\r\n    is: (val) => (val == \"sam\" > 0 ? true : false),\r\n    then: Yup.string().oneOf(\r\n      [Yup.ref(variable.password)],\r\n      \"Your password is wrong\"\r\n    ),\r\n  }),\r\n});\r\n\r\nfunction Signin() {\r\n  const token = useSelector((state) => getToken(state));\r\n  const signInForm = useSelector((state) => getSignInForm(state));\r\n  const [firebaseToken, setFirebaseToken] = React.useState(\"\");\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    //! laasy firebase token cai da\r\n    // const messaging = firebase.messaging();\r\n    // Get registration token. Initially this makes a network call, once retrieved\r\n    // subsequent calls to getToken will return from cache.\r\n    message\r\n      .getToken({\r\n        vapidKey:\r\n          \"BJT4KMAdFm6G8Sjq49q8RmDMsP6w0jPUghMTSMcdfkduJnBNzfxsSlLGEAMQzKjsu1aCtCtGA9TBT4D1wCk4SxM\",\r\n      })\r\n      .then((currentToken) => {\r\n        if (currentToken) {\r\n          // Send the token to your server and update the UI if necessary\r\n          // ...\r\n          setFirebaseToken(currentToken);\r\n          console.log(\"firebae token day=\", currentToken);\r\n        } else {\r\n          // Show permission request UI\r\n          console.log(\r\n            \"No registration token available. Request permission to generate one.\"\r\n          );\r\n          // ...\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"An error occurred while retrieving token. \", err);\r\n        // ...\r\n      });\r\n  }, []);\r\n  const onSubmit = (value, onSubmitProps) => {\r\n    console.log(\"submit value và có ở Sâm: \", value);\r\n    //* giá trị của submiting thì formik sẽ tự động set khi ta dùng đén fieldError, bỏi vì nó làm thay đổi đến object error nên submiting sẽ ko\r\n    //* chuyển thành true\r\n\r\n    //! Nếu như token bằng rỗng thì chứng tỏ mật khẩu sai\r\n    console.log(\"token lên web vào ngày 5/5\", firebaseToken);\r\n    dispatch(\r\n      login({\r\n        phoneNumber: value.username,\r\n        deviceToken: firebaseToken,\r\n        password: value.password,\r\n      })\r\n      //* * Ở đây ta dùng .then là vì createAsyncThunk nó trả về 1 promise, nếu như ta dùng asynce await để nhận thì\r\n      //* sẽ vi phạm nguyên tắc hook là bỏ hook trong 1 nested function\r\n      //* ở dưới đang là check token trong store, nếu ta muốn sử dụng result từ .then trả về thì\r\n      //! .then((result)=>{ }), lúc này ta vẫn có thể sử dụng popUp loading,success và fail như ta hằng mong muốn\r\n    ).then(() => {\r\n      if (token == \"\") {\r\n        onSubmitProps.setFieldError(\r\n          [variable.password],\r\n          \"Hãy kiểm tra lại mật khẩu hoặc tên đăng nhập của bạn\"\r\n        );\r\n      } else {\r\n        // alert(\"Ok rồi nha\");\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}\r\n    >\r\n      {/* <div className=\"login-page\">\r\n        <div className=\"form\">\r\n          <Button\r\n            style={{\r\n              height: choseSignInTypeHeight,\r\n              padding: chooseSignInPadding,\r\n              marginBottom: 10,\r\n              width: choseSignInTypeWidth,\r\n              fontSize: 12,\r\n            }}\r\n            type=\"submit\"\r\n            startIcon={\r\n              <FontAwesomeIcon\r\n                icon={faUser}\r\n                width={startIcon}\r\n                height={startIcon}\r\n              />\r\n            }\r\n          >\r\n            Tên và mật khẩu\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            style={{\r\n              height: choseSignInTypeHeight,\r\n              padding: chooseSignInPadding,\r\n              marginBottom: 10,\r\n              width: choseSignInTypeWidth,\r\n              fontSize: 12,\r\n              backgroundColor: \"#e82e1e\",\r\n            }}\r\n            startIcon={\r\n              <FontAwesomeIcon\r\n                icon={faGoogle}\r\n                width={startIcon}\r\n                height={startIcon}\r\n              />\r\n            }\r\n          >\r\n            Google\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            style={{\r\n              height: choseSignInTypeHeight,\r\n              padding: chooseSignInPadding,\r\n              marginBottom: 10,\r\n              width: choseSignInTypeWidth,\r\n              fontSize: 12,\r\n              backgroundColor: \"#c57a09\",\r\n            }}\r\n            startIcon={\r\n              <FontAwesomeIcon\r\n                icon={faPhoneAlt}\r\n                width={startIcon}\r\n                height={startIcon}\r\n              />\r\n            }\r\n          >\r\n            Số điện thoại\r\n          </Button>\r\n        </div>\r\n      </div> */}\r\n      {/* <div style={{ fontSize: 25 }}>- -</div> */}\r\n\r\n      {/* ! Phần div dùng để thay đổi mật khẩu */}\r\n\r\n      {/* <div className=\"login-page\">\r\n        <div className=\"form\">\r\n          <form className=\"login-form\" onSubmit={(e) => handleSubmit(e)}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                paddingLeft: 15,\r\n                fontFamily: \"Roboto\",\r\n              }}\r\n            >\r\n              <p style={{ color: \"grey\", fontSize: headeFontSize }}>\r\n                Thay đổi mật khẩu\r\n              </p>\r\n            </div>\r\n            <TextField\r\n              style={{ width: width, marginBottom: marginBottom }}\r\n              type=\"text\"\r\n              variant=\"standard\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              // onChange={(event) => this.handleChange(event)}\r\n            />\r\n            <div\r\n              className=\"attensin\"\r\n              style={{ textAlign: \"left\", paddingLeft: attensionPadding }}\r\n            >\r\n              <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\r\n                Lưu ý: Mail sẽ đến trong vòng 5 phút\r\n              </p>\r\n            </div>\r\n            <button type=\"submit\" className=\"button\">\r\n              <p>\r\n                <a href=\"#resend\">Gửi yêu cầu</a>\r\n              </p>\r\n            </button>{\" \"}\r\n            <div\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"#bb8322\",\r\n                paddingLeft: 10,\r\n                margin: \"5px 5px 15px 0\",\r\n              }}\r\n            >\r\n              <p id=\"resend\">Gửi lại yêu cầu trong {chooseSignInPadding}s</p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"login-page\">\r\n        <div className=\"form\">\r\n          <form className=\"login-form\" onSubmit={(e) => handleSubmit(e)}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                paddingLeft: 15,\r\n                fontFamily: \"Roboto\",\r\n              }}\r\n            >\r\n              <p style={{ color: \"grey\", fontSize: headeFontSize }}>\r\n                Mật khẩu mới\r\n              </p>\r\n            </div>\r\n            <TextField\r\n              size=\"medium\"\r\n              style={{ marginBottom: marginBottom }}\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              // onChange={(event) => this.handleChange(event)}\r\n            />\r\n            <div\r\n              className=\"attensin\"\r\n              style={{ textAlign: \"left\", paddingLeft: attensionPadding }}\r\n            >\r\n              <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\r\n                Lưu ý: Mail sẽ đến trong vòng 5 phút\r\n              </p>\r\n            </div>\r\n            <button type=\"submit\" className=\"button\">\r\n              <p>\r\n                <a href=\"#resend\">Gửi yêu cầu</a>\r\n              </p>\r\n            </button>{\" \"}\r\n            <div\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"#bb8322\",\r\n                paddingLeft: 10,\r\n                margin: \"5px 5px 15px 0\",\r\n              }}\r\n            >\r\n              <p id=\"resend\">Gửi lại yêu cầu trong {chooseSignInPadding}s</p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div> */}\r\n      <div className=\"login-page\">\r\n        <div className=\"form\">\r\n          <Formik\r\n            initialValues={initialValue}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n          >\r\n            {(formik) => {\r\n              return (\r\n                <Form>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      paddingLeft: 15,\r\n                      fontFamily: \"Roboto\",\r\n                    }}\r\n                  >\r\n                    <p style={{ color: \"#9e9e9e\", fontSize: headeFontSize }}>\r\n                      Đăng nhập\r\n                    </p>\r\n                    <Box width={5} />\r\n                    <p style={{ fontWeight: \"bold\", fontSize: headeFontSize }}>\r\n                      Web Admin\r\n                    </p>\r\n                  </div>\r\n                  {signInForm.map((rows) => {\r\n                    const columns = rows.row.cols;\r\n                    return columns.map((column) => {\r\n                      const controlType = column.elementType;\r\n                      const {\r\n                        name,\r\n                        type,\r\n                        placeholder,\r\n                        labeltext,\r\n                      } = column.elementConfig;\r\n                      return (\r\n                        <FormControll\r\n                          elementType=\"input\"\r\n                          type={type}\r\n                          name={name}\r\n                          placeholder={placeholder}\r\n                          {...column}\r\n                        />\r\n                      );\r\n                    });\r\n                  })}\r\n                  <div\r\n                    className=\"attensin\"\r\n                    style={{\r\n                      visibility: \"hidden\",\r\n                      textAlign: \"right\",\r\n                      paddingRight: attensionPadding,\r\n                      marginTop: 5,\r\n                    }}\r\n                  >\r\n                    <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\r\n                      Quên mật khẩu?\r\n                    </p>\r\n                  </div>\r\n                  {/* {console.log(\"formik valid value\", formik)} */}\r\n                  <button type=\"submit\">Đăng nhập</button>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n"]},"metadata":{},"sourceType":"module"}