{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sam\\\\Documents\\\\GitHub\\\\Capstone-Spring-2021\\\\src\\\\views\\\\White.jsx\";\nimport { LoadingPopUp, SuccessPopUp } from \"components/Modal/Modal\";\nimport NormalTable from \"components/SuperTable/NormalTable\";\nimport React, { useState } from \"react\";\nimport { Grid, Col, Row } from \"react-bootstrap\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllVegetableUnapproved, setNotificationCount, setVisible, updateVegetableDetail } from \"redux/index\";\nimport * as variable from \"variables/Variables\";\nimport { FormControll } from \"components/Formik/FormikControl\";\nimport EnhancedTable from \"components/SuperTable/NoCustomeTable\";\nimport { prepareVegetableData } from \"util/Helper\";\nimport { CardNoFooter, Card } from \"../components/Card/Card\";\nimport { MaterialButton } from \"../components/CustomButton/MaterialButton\";\nimport { getPostTableHeader, getVegetableAPIloadingTime, getTestTable, getShowDetail, getSeletedVegetable } from \"../redux/Selector/Selectors\";\nimport { ControlLabel, FormControl, FormGroup, HelpBlock } from \"react-bootstrap\";\nimport { setSelectedVegetable } from \"redux/Vegetable/VegetableSlice\";\nimport { uses } from \"variables/Variables\";\n\nfunction White() {\n  let loading = useSelector(state => getVegetableAPIloadingTime(state));\n  const seletedVegetable = useSelector(state => getSeletedVegetable(state));\n  let [usesInfo, setUses] = React.useState(\"\");\n  let [desInfo, setDes] = React.useState(\"\");\n  let [successVisible, setSuccessVisible] = React.useState(false); // dùng để hiện succes popup\n\n  const [tableBodyData, setTableBodyData] = useState([]);\n  let dispatch = useDispatch();\n  const titleStyle = {\n    fontWeight: \"bold\",\n    marginTop: 10\n  };\n\n  const updateVegetable = async () => {\n    const param = {\n      idDescription: seletedVegetable[variable.id],\n      title: seletedVegetable[variable.vegetableName],\n      description: desInfo,\n      feature: usesInfo\n    };\n    await dispatch(updateVegetableDetail(param));\n    autoCloseSuccessModal();\n  };\n\n  function autoCloseSuccessModal() {\n    setSuccessVisible(true);\n    setTimeout(function () {\n      setSuccessVisible(false);\n    }, 2000);\n  }\n\n  React.useEffect(() => {\n    setUses(seletedVegetable[variable.uses]);\n    setDes(seletedVegetable[variable.description]);\n  }, [seletedVegetable]);\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    console.log(\"name= \", name, \" value= \", value);\n\n    switch (name) {\n      case \"uses\":\n        setUses(value);\n        break;\n\n      case \"des\":\n        setDes(value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LoadingPopUp, {\n    visible: loading,\n    length: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SuccessPopUp, {\n    visible: successVisible,\n    length: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    fluid: true,\n    style: {\n      margin: 0,\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardNoFooter, {\n    titlet: \"Vegetable list\",\n    content: /*#__PURE__*/React.createElement(EnhancedTable, {\n      actionbuttonlist: [\"read\", \"remove\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Th\\xF4ng tin chi ti\\u1EBFt\",\n    content:\n    /*#__PURE__*/\n    // <div style={{visibility:showDetail}}>\n    React.createElement(\"div\", {\n      style: {\n        visibility: \"visible\",\n        margin: 0,\n        padding: 0,\n        boxSizing: \"border-box\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        border: \"1px solid grey\",\n        padding: 5\n      },\n      width: 200,\n      src: seletedVegetable[variable.vegetableImage],\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: titleStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, \"T\\xEAn rau\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, seletedVegetable[variable.vegetableName]), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: titleStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 23\n      }\n    }, \"C\\xF4ng d\\u1EE5ng\"), /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"formControlUese\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      style: {\n        height: 100\n      },\n      name: \"uses\",\n      componentClass: \"textarea\",\n      onChange: event => handleChange(event),\n      value: usesInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      style: titleStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 23\n      }\n    }, \"M\\xF4 t\\u1EA3\"), /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"formControlDes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      style: {\n        height: 150\n      },\n      name: \"des\",\n      componentClass: \"textarea\",\n      onChange: event => handleChange(event),\n      value: desInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(MaterialButton, {\n      type: \"button\",\n      variant: \"contained\",\n      color: \"info\",\n      size: \"large\",\n      click: () => updateVegetable(),\n      style: {\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 23\n      }\n    }, \"C\\u1EADp nh\\u1EADt th\\xF4ng tin\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default White;","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/views/White.jsx"],"names":["LoadingPopUp","SuccessPopUp","NormalTable","React","useState","Grid","Col","Row","useFormik","useDispatch","useSelector","getAllVegetableUnapproved","setNotificationCount","setVisible","updateVegetableDetail","variable","FormControll","EnhancedTable","prepareVegetableData","CardNoFooter","Card","MaterialButton","getPostTableHeader","getVegetableAPIloadingTime","getTestTable","getShowDetail","getSeletedVegetable","ControlLabel","FormControl","FormGroup","HelpBlock","setSelectedVegetable","uses","White","loading","state","seletedVegetable","usesInfo","setUses","desInfo","setDes","successVisible","setSuccessVisible","tableBodyData","setTableBodyData","dispatch","titleStyle","fontWeight","marginTop","updateVegetable","param","idDescription","id","title","vegetableName","description","feature","autoCloseSuccessModal","setTimeout","useEffect","handleChange","event","name","value","target","console","log","margin","padding","visibility","boxSizing","border","vegetableImage","color","height","marginRight"],"mappings":"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","sourcesContent":["import { LoadingPopUp, SuccessPopUp } from \"components/Modal/Modal\";\r\nimport NormalTable from \"components/SuperTable/NormalTable\";\r\nimport React, { useState } from \"react\";\r\nimport { Grid, Col, Row } from \"react-bootstrap\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport { useFormik } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getAllVegetableUnapproved,\r\n  setNotificationCount,\r\n  setVisible,\r\n  updateVegetableDetail,\r\n} from \"redux/index\";\r\nimport * as variable from \"variables/Variables\";\r\n\r\nimport { FormControll } from \"components/Formik/FormikControl\";\r\nimport EnhancedTable from \"components/SuperTable/NoCustomeTable\";\r\nimport { prepareVegetableData } from \"util/Helper\";\r\nimport { CardNoFooter, Card } from \"../components/Card/Card\";\r\nimport { MaterialButton } from \"../components/CustomButton/MaterialButton\";\r\nimport {\r\n  getPostTableHeader,\r\n  getVegetableAPIloadingTime,\r\n  getTestTable,\r\n  getShowDetail,\r\n  getSeletedVegetable,\r\n} from \"../redux/Selector/Selectors\";\r\nimport {\r\n  ControlLabel,\r\n  FormControl,\r\n  FormGroup,\r\n  HelpBlock,\r\n} from \"react-bootstrap\";\r\nimport { setSelectedVegetable } from \"redux/Vegetable/VegetableSlice\";\r\nimport { uses } from \"variables/Variables\";\r\n\r\nfunction White() {\r\n  let loading = useSelector((state) => getVegetableAPIloadingTime(state));\r\n  const seletedVegetable = useSelector((state) => getSeletedVegetable(state));\r\n  let [usesInfo, setUses] = React.useState(\"\");\r\n  let [desInfo, setDes] = React.useState(\"\");\r\n  let [successVisible, setSuccessVisible] = React.useState(false); // dùng để hiện succes popup\r\n  const [tableBodyData, setTableBodyData] = useState([]);\r\n  let dispatch = useDispatch();\r\n  const titleStyle = { fontWeight: \"bold\", marginTop: 10 };\r\n\r\n  const updateVegetable = async () => {\r\n    const param = {\r\n      idDescription: seletedVegetable[variable.id],\r\n      title: seletedVegetable[variable.vegetableName],\r\n      description: desInfo,\r\n      feature: usesInfo,\r\n    };\r\n    await dispatch(updateVegetableDetail(param));\r\n    autoCloseSuccessModal()\r\n  };\r\n  function autoCloseSuccessModal() {\r\n    setSuccessVisible(true);\r\n    setTimeout(function () {\r\n      setSuccessVisible(false);\r\n    }, 2000);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setUses(seletedVegetable[variable.uses]);\r\n    setDes(seletedVegetable[variable.description]);\r\n  }, [seletedVegetable]);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    console.log(\"name= \", name, \" value= \", value);\r\n    switch (name) {\r\n      case \"uses\":\r\n        setUses(value);\r\n        break;\r\n      case \"des\":\r\n        setDes(value);\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <LoadingPopUp visible={loading} length=\"200px\" />\r\n      <SuccessPopUp visible={successVisible} length=\"200px\" />\r\n      <div className=\"content\">\r\n        <Grid fluid style={{ margin: 0, padding: 0 }}>\r\n          <Row>\r\n            <Col md={6}>\r\n              <CardNoFooter\r\n                titlet=\"Vegetable list\"\r\n                content={\r\n                  <EnhancedTable actionbuttonlist={[\"read\", \"remove\"]} />\r\n                }\r\n              />\r\n            </Col>\r\n            <Col md={6}>\r\n              <Card\r\n                title=\"Thông tin chi tiết\"\r\n                content={\r\n                  // <div style={{visibility:showDetail}}>\r\n                  <div\r\n                    style={{\r\n                      visibility: \"visible\",\r\n                      margin: 0,\r\n                      padding: 0,\r\n                      boxSizing: \"border-box\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      style={{ border: \"1px solid grey\", padding: 5 }}\r\n                      width={200}\r\n                      src={seletedVegetable[variable.vegetableImage]}\r\n                      height={200}\r\n                    />\r\n                    <p style={titleStyle}>Tên rau</p>\r\n                    <p style={{ color: \"green\" }}>\r\n                      {seletedVegetable[variable.vegetableName]}\r\n                    </p>\r\n                    <form>\r\n                      <p style={titleStyle}>Công dụng</p>\r\n                      <FormGroup controlId=\"formControlUese\">\r\n                        <FormControl\r\n                          style={{ height: 100 }}\r\n                          name=\"uses\"\r\n                          componentClass=\"textarea\"\r\n                          onChange={(event) => handleChange(event)}\r\n                          value={usesInfo}\r\n                        />\r\n                      </FormGroup>\r\n                      <p style={titleStyle}>Mô tả</p>\r\n                      <FormGroup controlId=\"formControlDes\">\r\n                        <FormControl\r\n                          style={{ height: 150 }}\r\n                          name={\"des\"}\r\n                          componentClass=\"textarea\"\r\n                          onChange={(event) => handleChange(event)}\r\n                          value={desInfo}\r\n                        />\r\n                      </FormGroup>\r\n                      <MaterialButton\r\n                        type=\"button\"\r\n                        variant=\"contained\"\r\n                        color=\"info\"\r\n                        size=\"large\"\r\n                        click={() => updateVegetable()}\r\n                        style={{ marginRight: 5 }}\r\n                      >\r\n                        Cập nhật thông tin\r\n                      </MaterialButton>\r\n                    </form>\r\n                  </div>\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default White;\r\n"]},"metadata":{},"sourceType":"module"}