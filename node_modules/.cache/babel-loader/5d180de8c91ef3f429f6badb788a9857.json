{"ast":null,"code":"// import ContractType from \"./contractType\";\nimport*as variable from\"../../variables/Variables\";import JSONPLACEHOLDERApi from\"api/JSONPLACEHOLDERApi\";var _require=require(\"@reduxjs/toolkit\"),createSlice=_require.createSlice,createAsyncThunk=_require.createAsyncThunk;var post=createSlice({name:\"firebase\",initialState:{firebaseData:[]},reducers:{addObject:function addObject(state,action){action.payload.forEach(function(element){var result=state.firebaseData.find(function(obj){return obj.userId==element.userId;});if(!result){state.firebaseData.push(element);}});}}//   extraReducers: {\n//     [getALL.pending]: (state) => {},\n//     [getALL.rejected]: (state, action) => {\n//       state.error = action.error;\n//     },\n//     [getALL.fulfilled]: (state, action) => {\n//       state.current = action.payload;\n//     },\n//   },\n});var firebaseReducer=post.reducer,actions=post.actions;//createSlice sẽ trả về cho ta 2 biến là reducer và action\nvar addObject=actions.addObject;export{addObject};export default firebaseReducer;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/redux/Firebase/FirebaseSlice.jsx"],"names":["variable","JSONPLACEHOLDERApi","require","createSlice","createAsyncThunk","post","name","initialState","firebaseData","reducers","addObject","state","action","payload","forEach","element","result","find","obj","userId","push","firebaseReducer","reducer","actions"],"mappings":"AAAA;AACA,MAAO,GAAKA,CAAAA,QAAZ,KAA0B,2BAA1B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,wBAA/B,C,aAE0CC,OAAO,CAAC,kBAAD,C,CAAzCC,W,UAAAA,W,CAAaC,gB,UAAAA,gB,CAErB,GAAMC,CAAAA,IAAI,CAAGF,WAAW,CAAC,CACvBG,IAAI,CAAE,UADiB,CAEvBC,YAAY,CAAE,CACZC,YAAY,CAAE,EADF,CAFS,CAKvBC,QAAQ,CAAE,CACRC,SAAS,CAAE,mBAACC,KAAD,CAAQC,MAAR,CAAmB,CAC5BA,MAAM,CAACC,OAAP,CAAeC,OAAf,CAAuB,SAACC,OAAD,CAAa,CAClC,GAAIC,CAAAA,MAAM,CAAGL,KAAK,CAACH,YAAN,CAAmBS,IAAnB,CACX,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,MAAJ,EAAcJ,OAAO,CAACI,MAA/B,EADW,CAAb,CAGA,GAAI,CAACH,MAAL,CAAa,CACXL,KAAK,CAACH,YAAN,CAAmBY,IAAnB,CAAwBL,OAAxB,EACD,CACF,CAPD,EAQD,CAVO,CAYV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBuB,CAAD,CAAxB,C,GA4BiBM,CAAAA,e,CAA6BhB,I,CAAtCiB,O,CAA0BC,O,CAAYlB,I,CAAZkB,O,CAAkB;GACrCb,CAAAA,S,CAAca,O,CAAdb,S,mBACf,cAAeW,CAAAA,eAAf","sourcesContent":["// import ContractType from \"./contractType\";\r\nimport * as variable from \"../../variables/Variables\";\r\nimport JSONPLACEHOLDERApi from \"api/JSONPLACEHOLDERApi\";\r\n\r\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\n\r\nconst post = createSlice({\r\n  name: \"firebase\",\r\n  initialState: {\r\n    firebaseData: [],\r\n  },\r\n  reducers: {\r\n    addObject: (state, action) => {\r\n      action.payload.forEach((element) => {\r\n        let result = state.firebaseData.find(\r\n          (obj) => obj.userId == element.userId\r\n        );\r\n        if (!result) {\r\n          state.firebaseData.push(element);\r\n        }\r\n      });\r\n    },\r\n  },\r\n  //   extraReducers: {\r\n  //     [getALL.pending]: (state) => {},\r\n  //     [getALL.rejected]: (state, action) => {\r\n  //       state.error = action.error;\r\n  //     },\r\n  //     [getALL.fulfilled]: (state, action) => {\r\n  //       state.current = action.payload;\r\n  //     },\r\n  //   },\r\n});\r\n\r\nconst { reducer: firebaseReducer, actions } = post; //createSlice sẽ trả về cho ta 2 biến là reducer và action\r\nexport const { addObject } = actions;\r\nexport default firebaseReducer;\r\n"]},"metadata":{},"sourceType":"module"}