{"ast":null,"code":"var _jsxFileName = \"E:\\\\light-bootstrap-dashboard-react-master\\\\src\\\\layouts\\\\Admin.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\nimport { connect } from \"react-redux\";\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\nimport firebase from \"util/firebase\";\nimport { addObject } from \"redux/index\";\nimport { style } from \"variables/Variables.jsx\";\nimport routes from \"routes.js\";\nimport image from \"assets/img/sidebar-3.jpg\";\nimport { array, object } from \"yup/lib/locale\";\nimport { useRef } from \"react\"; // class Admin extends Component {\n\nconst Admin = props => {\n  // constructor(props) {\n  //   super(props);\n  //   this.notify = null;\n  //   this.setNotify = (element) => {\n  //     this.notify = element;\n  //   };\n  //   this.state = {\n  //     _notificationSystem: null,\n  //     image: image,\n  //     color: \"black\",\n  //     hasImage: true,\n  //     fixedClasses: \"dropdown show-dropdown open\",\n  //   };\n  // }\n  const {\n    notify,\n    setNotify\n  } = React.useState(null);\n  const {\n    image,\n    setImage\n  } = React.useState(image);\n  const {\n    color,\n    setColor\n  } = React.useState(\"black\");\n  const {\n    hasImage,\n    setHasImage\n  } = React.useState(true);\n  const {\n    fixedClasses,\n    setFixedClasses\n  } = React.useState(\"dropdown show-dropdown open\");\n  const mainPanel = useRef(0); //! Hàm này có tác dụng là tạo ra một notification, ta sẽ dùng hàm này cứ mỗi khi firebase bắt\n  //! sự kiện\n\n  const addNotify = () => {\n    var color = Math.floor(Math.random() * 4 + 1);\n    var level;\n\n    switch (color) {\n      case 1:\n        level = \"success\";\n        break;\n\n      case 2:\n        level = \"warning\";\n        break;\n\n      case 3:\n        level = \"error\";\n        break;\n\n      case 4:\n        level = \"info\";\n        break;\n\n      default:\n        break;\n    }\n\n    notify.addNotification({\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        \"data-notify\": \"icon\",\n        className: \"pe-7s-gift\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 14\n        }\n      }),\n      message: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, \"Welcome to \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 22\n        }\n      }, \"Light Bootstrap Dashboard\"), \" - a beautiful freebie for every web developer.\"),\n      level: level,\n      position: \"tr\",\n      autoDismiss: 15\n    });\n  }; // handleNotificationClick = (position) => {\n  //   var color = Math.floor(Math.random() * 4 + 1);\n  //   var level;\n  //   switch (color) {\n  //     case 1:\n  //       level = \"success\";\n  //       break;\n  //     case 2:\n  //       level = \"warning\";\n  //       break;\n  //     case 3:\n  //       level = \"error\";\n  //       break;\n  //     case 4:\n  //       level = \"info\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   this.state._notificationSystem.addNotification({\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n  //     message: (\n  //       <div>\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n  //         every web developer.\n  //       </div>\n  //     ),\n  //     level: level,\n  //     position: position,\n  //     autoDismiss: 15,\n  //   });\n  // };\n\n\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return /*#__PURE__*/React.createElement(Route, {\n          path: prop.layout + prop.path,\n          render: props => /*#__PURE__*/React.createElement(prop.component, Object.assign({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }\n          })),\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }\n        });\n      } else {\n        return null;\n      }\n    });\n  };\n\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (props.location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n        return routes[i].name;\n      }\n    }\n\n    return \"Brand\";\n  };\n\n  handleImageClick = image => {\n    // this.setState({ image: image });\n    setImage(image);\n  };\n\n  handleColorClick = color => {\n    // this.setState({ color: color });\n    setColor(color);\n  };\n\n  handleHasImage = hasImage => {\n    // this.setState({ hasImage: hasImage });\n    setHasImage(hasImage);\n  };\n\n  handleFixedClick = () => {\n    // if (this.state.fixedClasses === \"dropdown\") {\n    if (fixedClasses === \"dropdown\") {\n      // this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\n      setFixedClasses(\"dropdown show-dropdown open\");\n    } else {\n      // this.setState({ fixedClasses: \"dropdown\" });\n      setFixedClasses(\"dropdown\");\n    }\n  };\n\n  useEffect(() => {\n    firebaseListening();\n    return () => {\n      removeFirebaseListening();\n    };\n  }, [input]); // componentDidMount() {\n  // }\n  // componentDidUpdate(e) {\n  //   if (\n  //     window.innerWidth < 993 &&\n  //     e.history.location.pathname !== e.location.pathname &&\n  //     document.documentElement.className.indexOf(\"nav-open\") !== -1\n  //   ) {\n  //     document.documentElement.classList.toggle(\"nav-open\");\n  //   }\n  //   if (e.history.action === \"PUSH\") {\n  //     document.documentElement.scrollTop = 0;\n  //     document.scrollingElement.scrollTop = 0;\n  //     mainPanel.scrollTop = 0;\n  //   }\n  // }\n  // componentWillUnmount() {\n  //   this.removeFirebaseListening();\n  // }\n  // ! Lắng nghe sự thay đổi của database trên firebase\n\n  function firebaseListening(params) {\n    var userCount = firebase.database().ref(\"users\"); // ! Mỗi lần có sự thay đổi ở redux store thì sẽ nổ notification\n\n    if (props.firebase) {\n      addNotify();\n    }\n\n    userCount.on(\"value\", snapshot => {\n      let newArr = []; // const data = snapshot.val();\n      // ? Vì snapshot sẽ chỉ trả về các obj nên ta muốn nó thành 1 array ta phải làm bằng tay, chi tiết thế nào thì coi trong quick note\n\n      snapshot.forEach(child => {\n        newArr.push({ ...child.val(),\n          userId: child.key\n        });\n      });\n      this.props.addObject(newArr);\n    });\n  }\n\n  function removeFirebaseListening(params) {\n    firebase.database().ref(\"user\").off(\"value\");\n  } // render() {\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NotificationSystem, {\n    ref: setNotify,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Sidebar, Object.assign({}, props, {\n    routes: routes // image={this.state.image}\n    // color={this.state.color}\n    // hasImage={this.state.hasImage}\n    ,\n    image: image,\n    color: color,\n    hasImage: hasImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"main-panel\",\n    className: \"main-panel\",\n    ref: \"mainPanel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AdminNavbar, Object.assign({}, props, {\n    brandText: getBrandText(props.location.pathname),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, this.getRoutes(routes)), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  })));\n}; // }\n//Có tác dụng select ra những state cần xử lí\n\n/**\n * state này là của redux, và chữ fn đóng vai trò là 1 props\n * fn có giá trị là state.full_name của redux\n * @param {} state\n */\n// const mapStateToProps = (state) => {\n//   return {\n//     firebase: state.firebase,\n//   };\n// };\n// const mapDispatchToProps = dispatch => {\n//   return {\n//   }\n// };\n// export default connect(mapStateToProps, { addObject })(Admin);\n\n\nexport default Admin;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/layouts/Admin.jsx"],"names":["React","Component","Route","Switch","NotificationSystem","connect","AdminNavbar","Footer","Sidebar","FixedPlugin","firebase","addObject","style","routes","image","array","object","useRef","Admin","props","notify","setNotify","useState","setImage","color","setColor","hasImage","setHasImage","fixedClasses","setFixedClasses","mainPanel","addNotify","Math","floor","random","level","addNotification","title","message","position","autoDismiss","getRoutes","map","prop","key","layout","path","getBrandText","i","length","location","pathname","indexOf","name","handleImageClick","handleColorClick","handleHasImage","handleFixedClick","useEffect","firebaseListening","removeFirebaseListening","input","params","userCount","database","ref","on","snapshot","newArr","forEach","child","push","val","userId","off"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\nimport { connect } from \"react-redux\";\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\nimport firebase from \"util/firebase\";\nimport { addObject } from \"redux/index\";\n\nimport { style } from \"variables/Variables.jsx\";\n\nimport routes from \"routes.js\";\n\nimport image from \"assets/img/sidebar-3.jpg\";\nimport { array, object } from \"yup/lib/locale\";\nimport { useRef } from \"react\";\n\n// class Admin extends Component {\nconst Admin = (props) => {\n  // constructor(props) {\n  //   super(props);\n  //   this.notify = null;\n\n  //   this.setNotify = (element) => {\n  //     this.notify = element;\n  //   };\n\n  //   this.state = {\n  //     _notificationSystem: null,\n  //     image: image,\n  //     color: \"black\",\n  //     hasImage: true,\n  //     fixedClasses: \"dropdown show-dropdown open\",\n  //   };\n  // }\n  const { notify, setNotify } = React.useState(null);\n  const { image, setImage } = React.useState(image);\n  const { color, setColor } = React.useState(\"black\");\n  const { hasImage, setHasImage } = React.useState(true);\n  const { fixedClasses, setFixedClasses } = React.useState(\n    \"dropdown show-dropdown open\"\n  );\n  const mainPanel = useRef(0);\n\n  //! Hàm này có tác dụng là tạo ra một notification, ta sẽ dùng hàm này cứ mỗi khi firebase bắt\n  //! sự kiện\n  const addNotify = () => {\n    var color = Math.floor(Math.random() * 4 + 1);\n    var level;\n    switch (color) {\n      case 1:\n        level = \"success\";\n        break;\n      case 2:\n        level = \"warning\";\n        break;\n      case 3:\n        level = \"error\";\n        break;\n      case 4:\n        level = \"info\";\n        break;\n      default:\n        break;\n    }\n    notify.addNotification({\n      title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n      message: (\n        <div>\n          Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n          every web developer.\n        </div>\n      ),\n      level: level,\n      position: \"tr\",\n      autoDismiss: 15,\n    });\n  };\n\n  // handleNotificationClick = (position) => {\n  //   var color = Math.floor(Math.random() * 4 + 1);\n  //   var level;\n  //   switch (color) {\n  //     case 1:\n  //       level = \"success\";\n  //       break;\n  //     case 2:\n  //       level = \"warning\";\n  //       break;\n  //     case 3:\n  //       level = \"error\";\n  //       break;\n  //     case 4:\n  //       level = \"info\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   this.state._notificationSystem.addNotification({\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n  //     message: (\n  //       <div>\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n  //         every web developer.\n  //       </div>\n  //     ),\n  //     level: level,\n  //     position: position,\n  //     autoDismiss: 15,\n  //   });\n  // };\n  getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            render={(props) => (\n              <prop.component\n                {...props}\n                // handleClick={handleNotificationClick}\n              />\n            )}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  handleImageClick = (image) => {\n    // this.setState({ image: image });\n    setImage(image);\n  };\n  handleColorClick = (color) => {\n    // this.setState({ color: color });\n    setColor(color);\n  };\n  handleHasImage = (hasImage) => {\n    // this.setState({ hasImage: hasImage });\n    setHasImage(hasImage);\n  };\n  handleFixedClick = () => {\n    // if (this.state.fixedClasses === \"dropdown\") {\n    if (fixedClasses === \"dropdown\") {\n      // this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\n      setFixedClasses(\"dropdown show-dropdown open\");\n    } else {\n      // this.setState({ fixedClasses: \"dropdown\" });\n      setFixedClasses(\"dropdown\");\n    }\n  };\n\n  useEffect(() => {\n    firebaseListening();\n    return () => {\n      removeFirebaseListening();\n    };\n  }, [input]);\n\n  // componentDidMount() {\n  // }\n  // componentDidUpdate(e) {\n  //   if (\n  //     window.innerWidth < 993 &&\n  //     e.history.location.pathname !== e.location.pathname &&\n  //     document.documentElement.className.indexOf(\"nav-open\") !== -1\n  //   ) {\n  //     document.documentElement.classList.toggle(\"nav-open\");\n  //   }\n  //   if (e.history.action === \"PUSH\") {\n  //     document.documentElement.scrollTop = 0;\n  //     document.scrollingElement.scrollTop = 0;\n  //     mainPanel.scrollTop = 0;\n  //   }\n  // }\n  // componentWillUnmount() {\n  //   this.removeFirebaseListening();\n  // }\n\n  // ! Lắng nghe sự thay đổi của database trên firebase\n  function firebaseListening(params) {\n    var userCount = firebase.database().ref(\"users\");\n\n    // ! Mỗi lần có sự thay đổi ở redux store thì sẽ nổ notification\n    if (props.firebase) {\n      addNotify();\n    }\n    userCount.on(\"value\", (snapshot) => {\n      let newArr = [];\n      // const data = snapshot.val();\n      // ? Vì snapshot sẽ chỉ trả về các obj nên ta muốn nó thành 1 array ta phải làm bằng tay, chi tiết thế nào thì coi trong quick note\n      snapshot.forEach((child) => {\n        newArr.push({ ...child.val(), userId: child.key });\n      });\n\n      this.props.addObject(newArr);\n    });\n  }\n\n  function removeFirebaseListening(params) {\n    firebase.database().ref(\"user\").off(\"value\");\n  }\n  // render() {\n  return (\n    <div className=\"wrapper\">\n      <NotificationSystem ref={setNotify} style={style} />\n      <Sidebar\n        {...props}\n        routes={routes}\n        // image={this.state.image}\n        // color={this.state.color}\n        // hasImage={this.state.hasImage}\n        image={image}\n        color={color}\n        hasImage={hasImage}\n      />\n      <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n        <AdminNavbar\n          {...props}\n          brandText={getBrandText(props.location.pathname)}\n        />\n        <Switch>{this.getRoutes(routes)}</Switch>\n        <Footer />\n      </div>\n    </div>\n  );\n};\n// }\n\n//Có tác dụng select ra những state cần xử lí\n/**\n * state này là của redux, và chữ fn đóng vai trò là 1 props\n * fn có giá trị là state.full_name của redux\n * @param {} state\n */\n// const mapStateToProps = (state) => {\n//   return {\n//     firebase: state.firebase,\n//   };\n// };\n// const mapDispatchToProps = dispatch => {\n//   return {\n\n//   }\n// };\n\n// export default connect(mapStateToProps, { addObject })(Admin);\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}