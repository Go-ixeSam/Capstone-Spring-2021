{"ast":null,"code":"// api/axiosClient.js\nimport axios from \"axios\";\nimport queryString from \"query-string\";\nimport * as variable from \"variables/Variables\"; // Set up default config for http requests here\n// Please have a look at here `https://github.com/axios/axios#request-\n// config` for the full list of configs\n\nconst axiosClient = axios.create({\n  baseURL: variable.jsonplaceholerAPI,\n  headers: {\n    \"content-type\": \"application/json\"\n  },\n  //   ! Việc parse param của asiox có hơi \n  // !vấn đề nên ta sẽ sử dụng query string để xủ lí việc này\n  //? Ví dụ như ta phải viét query stirng thế này : ?userid=\"\"&password=\"\". Khá là mệt, \n  //?dùng cái thư việ này ta chỉ cần bỏ param vào thôi, còn lại nó sẽ tự chuyển thành query trên\n  paramsSerializer: params => queryString.stringify(params)\n}); // ! Xử lí phần authen token, mỗi api đề có cái này mới đc\n\naxiosClient.interceptors.request.use(async config => {\n  // Handle token here ...\n  return config;\n}); // * mỗi reponse ta sẽ phải thực hiện lấy\n\naxiosClient.interceptors.response.use( //*reponse.data để lấy về json yêu cầu, ta thực hiện ở đây luôn cho lẹ\n// ! nghĩ lại thì ta cần nhiều thư hơn đơn thuần là data\nresponse => {\n  // if (response && response.data) {\n  //   return response.data;\n  // }\n  return response;\n}, error => {\n  // * Nếu ta muốn xem cái này thì ở kết quả trả về ta .error thì ta sẽ thấy rõ, nó cho ta biết status code và message đủ cả ko \n  // * cần phải thêm cái gì cả\n  throw error;\n});\nexport default axiosClient;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/api/axiosClient.js"],"names":["axios","queryString","variable","axiosClient","create","baseURL","jsonplaceholerAPI","headers","paramsSerializer","params","stringify","interceptors","request","use","config","response","error"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAO,KAAKC,QAAZ,MAA0B,qBAA1B,C,CAEA;AAEA;AACA;;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC/BC,EAAAA,OAAO,EAAEH,QAAQ,CAACI,iBADa;AAE/BC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT,GAFsB;AAK/B;AACA;AAEA;AACA;AAEAC,EAAAA,gBAAgB,EAAGC,MAAD,IAAYR,WAAW,CAACS,SAAZ,CAAsBD,MAAtB;AAXC,CAAb,CAApB,C,CAcA;;AACAN,WAAW,CAACQ,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC,CAAqC,MAAOC,MAAP,IAAkB;AACrD;AACA,SAAOA,MAAP;AACD,CAHD,E,CAKA;;AACAX,WAAW,CAACQ,YAAZ,CAAyBI,QAAzB,CAAkCF,GAAlC,EACA;AACA;AACGE,QAAD,IAAc;AACZ;AACA;AACA;AACA,SAAOA,QAAP;AACD,CARH,EASGC,KAAD,IAAW;AACT;AACA;AACA,QAAMA,KAAN;AACD,CAbH;AAeA,eAAeb,WAAf","sourcesContent":["// api/axiosClient.js\r\nimport axios from \"axios\";\r\nimport queryString from \"query-string\";\r\nimport * as variable from \"variables/Variables\";\r\n\r\n// Set up default config for http requests here\r\n\r\n// Please have a look at here `https://github.com/axios/axios#request-\r\n// config` for the full list of configs\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: variable.jsonplaceholerAPI,\r\n  headers: {\r\n    \"content-type\": \"application/json\",\r\n  },\r\n  //   ! Việc parse param của asiox có hơi \r\n  // !vấn đề nên ta sẽ sử dụng query string để xủ lí việc này\r\n\r\n  //? Ví dụ như ta phải viét query stirng thế này : ?userid=\"\"&password=\"\". Khá là mệt, \r\n  //?dùng cái thư việ này ta chỉ cần bỏ param vào thôi, còn lại nó sẽ tự chuyển thành query trên\r\n\r\n  paramsSerializer: (params) => queryString.stringify(params),\r\n});\r\n\r\n// ! Xử lí phần authen token, mỗi api đề có cái này mới đc\r\naxiosClient.interceptors.request.use(async (config) => {\r\n  // Handle token here ...\r\n  return config;\r\n});\r\n\r\n// * mỗi reponse ta sẽ phải thực hiện lấy\r\naxiosClient.interceptors.response.use(\r\n//*reponse.data để lấy về json yêu cầu, ta thực hiện ở đây luôn cho lẹ\r\n// ! nghĩ lại thì ta cần nhiều thư hơn đơn thuần là data\r\n  (response) => {\r\n    // if (response && response.data) {\r\n    //   return response.data;\r\n    // }\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // * Nếu ta muốn xem cái này thì ở kết quả trả về ta .error thì ta sẽ thấy rõ, nó cho ta biết status code và message đủ cả ko \r\n    // * cần phải thêm cái gì cả\r\n    throw error;\r\n  }\r\n);\r\nexport default axiosClient;\r\n "]},"metadata":{},"sourceType":"module"}