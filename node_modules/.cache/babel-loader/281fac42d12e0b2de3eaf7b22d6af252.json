{"ast":null,"code":"import _defineProperty from\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import*as variable from\"variables/Variables\";export function createData(id,name,calories,fat,carbs,protein,isLock){var _ref;return _ref={},_defineProperty(_ref,variable.id,id),_defineProperty(_ref,variable.name,name),_defineProperty(_ref,variable.calories,calories),_defineProperty(_ref,variable.fat,fat),_defineProperty(_ref,variable.carbs,carbs),_defineProperty(_ref,variable.protein,protein),_defineProperty(_ref,variable.islock,isLock),_ref;}export function createPostData(creator,dateSubmitted,id,reportCount,negativeCommendCount){var _ref2;return _ref2={},_defineProperty(_ref2,variable.creator,creator),_defineProperty(_ref2,variable.dateSubmitted,dateSubmitted),_defineProperty(_ref2,variable.id,id),_defineProperty(_ref2,variable.reportCount,reportCount),_defineProperty(_ref2,variable.negativeCommendCount,negativeCommendCount),_ref2;}export var createAccountData=function createAccountData(id,accountStatus,userName,createDate){var _ref3;return _ref3={},_defineProperty(_ref3,variable.id,id),_defineProperty(_ref3,variable.accoutStatus,accountStatus),_defineProperty(_ref3,variable.userName,userName),_defineProperty(_ref3,variable.createDate,createDate),_ref3;};/**\r\n * * Với 3 kiểu string input là:\r\n * ! 2015-03-25, 03/25/2015 và Mar 25 2015\r\n * @param {*} stringDate\r\n * @returns\r\n */export function convertStringToDate(stringDate){var date;return date=new Date(stringDate);}//! Ouput của cái string date sẽ là: 03/12/2021\nexport function convertDateToString(date){var month=date.getMonth()+1;var stringDate;return stringDate=month+\"/\"+date.getDate()+\"/\"+date.getFullYear();}/**\r\n *\r\n * @param {*} label\r\n * @param {*} numeric //* dòng này dùng để xắp xếp vị trí của body cell data dựa theo kiểu giá trị, nếu là số thì sắp bên phải và ngược lại\r\n * @param {*} disablePadding //* dùng hoặc ko dùng header cell padding\r\n * @param {*} id\r\n * @returns\r\n */export function createHeader(label,numeric,disablePadding,id){return{id:id,numeric:numeric,disablePadding:disablePadding,label:label};}","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/util/ContructorCreation.jsx"],"names":["variable","createData","id","name","calories","fat","carbs","protein","isLock","islock","createPostData","creator","dateSubmitted","reportCount","negativeCommendCount","createAccountData","accountStatus","userName","createDate","accoutStatus","convertStringToDate","stringDate","date","Date","convertDateToString","month","getMonth","getDate","getFullYear","createHeader","label","numeric","disablePadding"],"mappings":"wKAAA,MAAO,GAAKA,CAAAA,QAAZ,KAA0B,qBAA1B,CACA,MAAO,SAASC,CAAAA,UAAT,CAAoBC,EAApB,CAAwBC,IAAxB,CAA8BC,QAA9B,CAAwCC,GAAxC,CAA6CC,KAA7C,CAAoDC,OAApD,CAA6DC,MAA7D,CAAqE,UAC1E,oCACGR,QAAQ,CAACE,EADZ,CACiBA,EADjB,uBAEGF,QAAQ,CAACG,IAFZ,CAEmBA,IAFnB,uBAGGH,QAAQ,CAACI,QAHZ,CAGuBA,QAHvB,uBAIGJ,QAAQ,CAACK,GAJZ,CAIkBA,GAJlB,uBAKGL,QAAQ,CAACM,KALZ,CAKoBA,KALpB,uBAMGN,QAAQ,CAACO,OANZ,CAMsBA,OANtB,uBAOGP,QAAQ,CAACS,MAPZ,CAOqBD,MAPrB,OASD,CACD,MAAO,SAASE,CAAAA,cAAT,CACLC,OADK,CAELC,aAFK,CAGLV,EAHK,CAILW,WAJK,CAKLC,oBALK,CAML,WACA,sCACGd,QAAQ,CAACW,OADZ,CACsBA,OADtB,wBAEGX,QAAQ,CAACY,aAFZ,CAE4BA,aAF5B,wBAGGZ,QAAQ,CAACE,EAHZ,CAGiBA,EAHjB,wBAIGF,QAAQ,CAACa,WAJZ,CAI0BA,WAJ1B,wBAKGb,QAAQ,CAACc,oBALZ,CAKmCA,oBALnC,QAOD,CAED,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACb,EAAD,CAAKc,aAAL,CAAoBC,QAApB,CAA8BC,UAA9B,CAA6C,WAC5E,sCACGlB,QAAQ,CAACE,EADZ,CACiBA,EADjB,wBAEGF,QAAQ,CAACmB,YAFZ,CAE2BH,aAF3B,wBAGGhB,QAAQ,CAACiB,QAHZ,CAGuBA,QAHvB,wBAOGjB,QAAQ,CAACkB,UAPZ,CAOyBA,UAPzB,QAUD,CAXM,CAaP;;;;;GAMA,MAAO,SAASE,CAAAA,mBAAT,CAA6BC,UAA7B,CAAyC,CAC9C,GAAIC,CAAAA,IAAJ,CACA,MAAQA,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,CAASF,UAAT,CAAf,CACD,CAED;AACA,MAAO,SAASG,CAAAA,mBAAT,CAA6BF,IAA7B,CAAmC,CACxC,GAAMG,CAAAA,KAAK,CAAGH,IAAI,CAACI,QAAL,GAAkB,CAAhC,CACA,GAAIL,CAAAA,UAAJ,CACA,MAAQA,CAAAA,UAAU,CAAGI,KAAK,CAAG,GAAR,CAAcH,IAAI,CAACK,OAAL,EAAd,CAA+B,GAA/B,CAAqCL,IAAI,CAACM,WAAL,EAA1D,CACD,CAED;;;;;;;GAQA,MAAO,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6BC,OAA7B,CAAsCC,cAAtC,CAAsD9B,EAAtD,CAA0D,CAC/D,MAAO,CACLA,EAAE,CAAEA,EADC,CAEL6B,OAAO,CAAEA,OAFJ,CAGLC,cAAc,CAAEA,cAHX,CAILF,KAAK,CAAEA,KAJF,CAAP,CAMD","sourcesContent":["import * as variable from \"variables/Variables\";\r\nexport function createData(id, name, calories, fat, carbs, protein, isLock) {\r\n  return {\r\n    [variable.id]: id,\r\n    [variable.name]: name,\r\n    [variable.calories]: calories,\r\n    [variable.fat]: fat,\r\n    [variable.carbs]: carbs,\r\n    [variable.protein]: protein,\r\n    [variable.islock]: isLock,\r\n  };\r\n}\r\nexport function createPostData(\r\n  creator,\r\n  dateSubmitted,\r\n  id,\r\n  reportCount,\r\n  negativeCommendCount\r\n) {\r\n  return {\r\n    [variable.creator]: creator,\r\n    [variable.dateSubmitted]: dateSubmitted,\r\n    [variable.id]: id,\r\n    [variable.reportCount]: reportCount,\r\n    [variable.negativeCommendCount]: negativeCommendCount,\r\n  };\r\n}\r\n\r\nexport const createAccountData = (id, accountStatus, userName, createDate) => {\r\n  return {\r\n    [variable.id]: id,\r\n    [variable.accoutStatus]: accountStatus,\r\n    [variable.userName]: userName,\r\n    // [variable.email]: email,\r\n    // [variable.birthDate]: birthDate,\r\n    // [variable.sex]: sex,\r\n    [variable.createDate]: createDate,\r\n    // [variable.phone]: phone,\r\n  };\r\n};\r\n\r\n/**\r\n * * Với 3 kiểu string input là:\r\n * ! 2015-03-25, 03/25/2015 và Mar 25 2015\r\n * @param {*} stringDate\r\n * @returns\r\n */\r\nexport function convertStringToDate(stringDate) {\r\n  var date;\r\n  return (date = new Date(stringDate));\r\n}\r\n\r\n//! Ouput của cái string date sẽ là: 03/12/2021\r\nexport function convertDateToString(date) {\r\n  const month = date.getMonth() + 1;\r\n  var stringDate;\r\n  return (stringDate = month + \"/\" + date.getDate() + \"/\" + date.getFullYear());\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} label\r\n * @param {*} numeric //* dòng này dùng để xắp xếp vị trí của body cell data dựa theo kiểu giá trị, nếu là số thì sắp bên phải và ngược lại\r\n * @param {*} disablePadding //* dùng hoặc ko dùng header cell padding\r\n * @param {*} id\r\n * @returns\r\n */\r\nexport function createHeader(label, numeric, disablePadding, id) {\r\n  return {\r\n    id: id,\r\n    numeric: numeric,\r\n    disablePadding: disablePadding,\r\n    label: label,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}