{"ast":null,"code":"// import ContractType from \"./contractType\";\nimport * as variable from \"../../variables/Variables\";\nimport JSONPLACEHOLDERApi from \"api/JSONPLACEHOLDERApi\";\n\nconst {\n  createSlice,\n  createAsyncThunk\n} = require(\"@reduxjs/toolkit\");\n\nconst post = createSlice({\n  name: \"firebase\",\n  initialState: {\n    firebaseData: [{\n      fistname: \"nguyen\",\n      lastname: \"3213\",\n      userId: \"JfApZ4s\"\n    }]\n  },\n  reducers: {\n    addObject: (state, action) => {\n      let found = {};\n      action.payload.forEach(element => {\n        found = state.firebaseData.find(obj => obj.userId == element.userId); // if(f){\n        // }\n      });\n      console.log(\"Hình dáng \", action.payload);\n      console.log(\"có hay ko\", found);\n    }\n  } //   extraReducers: {\n  //     [getALL.pending]: (state) => {},\n  //     [getALL.rejected]: (state, action) => {\n  //       state.error = action.error;\n  //     },\n  //     [getALL.fulfilled]: (state, action) => {\n  //       state.current = action.payload;\n  //     },\n  //   },\n\n});\nconst {\n  reducer: firebaseReducer,\n  actions\n} = post; //createSlice sẽ trả về cho ta 2 biến là reducer và action\n\nexport const {\n  addObject\n} = actions;\nexport default firebaseReducer;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/redux/Firebase/FirebaseSlice.jsx"],"names":["variable","JSONPLACEHOLDERApi","createSlice","createAsyncThunk","require","post","name","initialState","firebaseData","fistname","lastname","userId","reducers","addObject","state","action","found","payload","forEach","element","find","obj","console","log","reducer","firebaseReducer","actions"],"mappings":"AAAA;AACA,OAAO,KAAKA,QAAZ,MAA0B,2BAA1B;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;;AAEA,MAAM;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAAoCC,OAAO,CAAC,kBAAD,CAAjD;;AAEA,MAAMC,IAAI,GAAGH,WAAW,CAAC;AACvBI,EAAAA,IAAI,EAAE,UADiB;AAEvBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,YAAY,EAAE,CACZ;AACEC,MAAAA,QAAQ,EAAE,QADZ;AAEEC,MAAAA,QAAQ,EAAE,MAFZ;AAGEC,MAAAA,MAAM,EAAE;AAHV,KADY;AADF,GAFS;AAWvBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5B,UAAIC,KAAK,GAAG,EAAZ;AACAD,MAAAA,MAAM,CAACE,OAAP,CAAeC,OAAf,CAAwBC,OAAD,IAAa;AAClCH,QAAAA,KAAK,GAAGF,KAAK,CAACN,YAAN,CAAmBY,IAAnB,CAAyBC,GAAD,IAASA,GAAG,CAACV,MAAJ,IAAcQ,OAAO,CAACR,MAAvD,CAAR,CADkC,CAElC;AAEA;AACD,OALD;AAMAW,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BR,MAAM,CAACE,OAAjC;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBP,KAAzB;AACD;AAXO,GAXa,CAwBvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhCuB,CAAD,CAAxB;AAmCA,MAAM;AAAEQ,EAAAA,OAAO,EAAEC,eAAX;AAA4BC,EAAAA;AAA5B,IAAwCrB,IAA9C,C,CAAoD;;AACpD,OAAO,MAAM;AAAEQ,EAAAA;AAAF,IAAgBa,OAAtB;AACP,eAAeD,eAAf","sourcesContent":["// import ContractType from \"./contractType\";\r\nimport * as variable from \"../../variables/Variables\";\r\nimport JSONPLACEHOLDERApi from \"api/JSONPLACEHOLDERApi\";\r\n\r\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\n\r\nconst post = createSlice({\r\n  name: \"firebase\",\r\n  initialState: {\r\n    firebaseData: [\r\n      {\r\n        fistname: \"nguyen\",\r\n        lastname: \"3213\",\r\n        userId: \"JfApZ4s\",\r\n      },\r\n    ],\r\n  },\r\n  reducers: {\r\n    addObject: (state, action) => {\r\n      let found = {};\r\n      action.payload.forEach((element) => {\r\n        found = state.firebaseData.find((obj) => obj.userId == element.userId);\r\n        // if(f){\r\n\r\n        // }\r\n      });\r\n      console.log(\"Hình dáng \", action.payload);\r\n      console.log(\"có hay ko\", found);\r\n    },\r\n  },\r\n  //   extraReducers: {\r\n  //     [getALL.pending]: (state) => {},\r\n  //     [getALL.rejected]: (state, action) => {\r\n  //       state.error = action.error;\r\n  //     },\r\n  //     [getALL.fulfilled]: (state, action) => {\r\n  //       state.current = action.payload;\r\n  //     },\r\n  //   },\r\n});\r\n\r\nconst { reducer: firebaseReducer, actions } = post; //createSlice sẽ trả về cho ta 2 biến là reducer và action\r\nexport const { addObject } = actions;\r\nexport default firebaseReducer;\r\n"]},"metadata":{},"sourceType":"module"}