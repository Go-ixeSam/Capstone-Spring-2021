{"ast":null,"code":"import IconButton from\"@material-ui/core/IconButton\";import TableHead from\"@material-ui/core/TableHead\";import TableRow from\"@material-ui/core/TableRow\";import TableSortLabel from\"@material-ui/core/TableSortLabel\";import React from\"react\";import*as variable from\"../../../variables/Variables\";import{StyledHeaderCell}from\"../StyledCell\";function EnhancedTableHead(props){var classes=props.classes,onSelectAllClick=props.onSelectAllClick,order=props.order,orderBy=props.orderBy,numSelected=props.numSelected,rowCount=props.rowCount,onRequestSort=props.onRequestSort,headCells=props.headCells,actionButtonList=props.actionButtonList;var createSortHandler=function createSortHandler(property){return function(event){onRequestSort(event,property);};};var editHeaderIcon={border:\"none\",backgroundColor:variable.primaryColor,height:14,width:14};return/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,actionButtonList.map(function(action){if(action==\"remove\"){return/*#__PURE__*/React.createElement(StyledHeaderCell,{padding:\"checkbox\",style:{fontSize:14}},/*#__PURE__*/React.createElement(IconButton,{disabled:true}));}return/*#__PURE__*/React.createElement(StyledHeaderCell,{padding:\"checkbox\",style:{fontSize:14}});}),headCells.map(function(headCell){return/*#__PURE__*/React.createElement(StyledHeaderCell,{key:headCell.id,align:headCell.numeric?\"right\":\"left\",padding:headCell.disablePadding?\"none\":\"default\",sortDirection:orderBy===headCell.id?order:false},/*#__PURE__*/React.createElement(TableSortLabel,{active:orderBy===headCell.id,direction:orderBy===headCell.id?order:\"asc\",onClick:createSortHandler(headCell.id)},headCell.label,orderBy===headCell.id?/*#__PURE__*/React.createElement(\"span\",{className:classes.visuallyHidden},order===\"desc\"?\"sorted descending\":\"sorted ascending\"):null));})));}export default EnhancedTableHead;","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/components/SuperTable/Header/AdvanceHeader.js"],"names":["IconButton","TableHead","TableRow","TableSortLabel","React","variable","StyledHeaderCell","EnhancedTableHead","props","classes","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","headCells","actionButtonList","createSortHandler","property","event","editHeaderIcon","border","backgroundColor","primaryColor","height","width","map","action","fontSize","headCell","id","numeric","disablePadding","label","visuallyHidden"],"mappings":"AAAA,MAAOA,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,8BAA1B,CACA,OAASC,gBAAT,KAAiC,eAAjC,CAEA,QAASC,CAAAA,iBAAT,CAA2BC,KAA3B,CAAkC,IAE9BC,CAAAA,OAF8B,CAW5BD,KAX4B,CAE9BC,OAF8B,CAG9BC,gBAH8B,CAW5BF,KAX4B,CAG9BE,gBAH8B,CAI9BC,KAJ8B,CAW5BH,KAX4B,CAI9BG,KAJ8B,CAK9BC,OAL8B,CAW5BJ,KAX4B,CAK9BI,OAL8B,CAM9BC,WAN8B,CAW5BL,KAX4B,CAM9BK,WAN8B,CAO9BC,QAP8B,CAW5BN,KAX4B,CAO9BM,QAP8B,CAQ9BC,aAR8B,CAW5BP,KAX4B,CAQ9BO,aAR8B,CAS9BC,SAT8B,CAW5BR,KAX4B,CAS9BQ,SAT8B,CAU9BC,gBAV8B,CAW5BT,KAX4B,CAU9BS,gBAV8B,CAYhC,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,QAAD,QAAc,UAACC,KAAD,CAAW,CACjDL,aAAa,CAACK,KAAD,CAAQD,QAAR,CAAb,CACD,CAFyB,EAA1B,CAIA,GAAME,CAAAA,cAAc,CAAG,CACrBC,MAAM,CAAE,MADa,CAErBC,eAAe,CAAElB,QAAQ,CAACmB,YAFL,CAGrBC,MAAM,CAAE,EAHa,CAIrBC,KAAK,CAAE,EAJc,CAAvB,CAOA,mBACE,oBAAC,SAAD,mBACE,oBAAC,QAAD,MACGT,gBAAgB,CAACU,GAAjB,CAAqB,SAACC,MAAD,CAAY,CAChC,GAAIA,MAAM,EAAI,QAAd,CAAwB,CACtB,mBACE,oBAAC,gBAAD,EAAkB,OAAO,CAAC,UAA1B,CAAqC,KAAK,CAAE,CAAEC,QAAQ,CAAE,EAAZ,CAA5C,eACE,oBAAC,UAAD,EAAY,QAAQ,KAApB,EADF,CADF,CAKD,CACD,mBACE,oBAAC,gBAAD,EACE,OAAO,CAAC,UADV,CAEE,KAAK,CAAE,CAAEA,QAAQ,CAAE,EAAZ,CAFT,EADF,CAMD,CAdA,CADH,CAyBGb,SAAS,CAACW,GAAV,CAAc,SAACG,QAAD,qBACb,oBAAC,gBAAD,EACE,GAAG,CAAEA,QAAQ,CAACC,EADhB,CAEE,KAAK,CAAED,QAAQ,CAACE,OAAT,CAAmB,OAAnB,CAA6B,MAFtC,CAGE,OAAO,CAAEF,QAAQ,CAACG,cAAT,CAA0B,MAA1B,CAAmC,SAH9C,CAIE,aAAa,CAAErB,OAAO,GAAKkB,QAAQ,CAACC,EAArB,CAA0BpB,KAA1B,CAAkC,KAJnD,eAME,oBAAC,cAAD,EACE,MAAM,CAAEC,OAAO,GAAKkB,QAAQ,CAACC,EAD/B,CAEE,SAAS,CAAEnB,OAAO,GAAKkB,QAAQ,CAACC,EAArB,CAA0BpB,KAA1B,CAAkC,KAF/C,CAGE,OAAO,CAAEO,iBAAiB,CAACY,QAAQ,CAACC,EAAV,CAH5B,EAKGD,QAAQ,CAACI,KALZ,CAMGtB,OAAO,GAAKkB,QAAQ,CAACC,EAArB,cACC,4BAAM,SAAS,CAAEtB,OAAO,CAAC0B,cAAzB,EACGxB,KAAK,GAAK,MAAV,CAAmB,mBAAnB,CAAyC,kBAD5C,CADD,CAIG,IAVN,CANF,CADa,EAAd,CAzBH,CADF,CADF,CAmDD,CAYD,cAAeJ,CAAAA,iBAAf","sourcesContent":["import IconButton from \"@material-ui/core/IconButton\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport * as variable from \"../../../variables/Variables\";\r\nimport { StyledHeaderCell } from \"../StyledCell\";\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n    headCells,\r\n    actionButtonList,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  const editHeaderIcon = {\r\n    border: \"none\",\r\n    backgroundColor: variable.primaryColor,\r\n    height: 14,\r\n    width: 14,\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {actionButtonList.map((action) => {\r\n          if (action == \"remove\") {\r\n            return (\r\n              <StyledHeaderCell padding=\"checkbox\" style={{ fontSize: 14 }}>\r\n                <IconButton disabled></IconButton>\r\n              </StyledHeaderCell>\r\n            );\r\n          }\r\n          return (\r\n            <StyledHeaderCell\r\n              padding=\"checkbox\"\r\n              style={{ fontSize: 14 }}\r\n            ></StyledHeaderCell>\r\n          );\r\n        })}\r\n\r\n        {/* <StyledHeaderCell padding=\"checkbox\" style={{ fontSize: 14 }}>\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </StyledHeaderCell> */}\r\n        {headCells.map((headCell) => (\r\n          <StyledHeaderCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </StyledHeaderCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default EnhancedTableHead;\r\n"]},"metadata":{},"sourceType":"module"}