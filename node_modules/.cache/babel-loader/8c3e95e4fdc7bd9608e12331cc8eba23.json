{"ast":null,"code":"import _slicedToArray from\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _defineProperty from\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React,{useState}from\"react\";import{CardNoFooter}from\"../components/Card/Card\";import{Col,Grid,Row}from\"react-bootstrap\";import{FormControll}from\"../components/Formik/FormikControl\";import{useDispatch,useSelector}from\"react-redux\";import{getPercentReport,getPercent,getPercentName,getPercentResult,getSystemConfigLoading}from\"../redux/Selector/Selectors\";import{Formik,Field,Form,useField,useFormikContext}from\"formik\";import{ShowPopUp,SuccessPopUp,LoadingPopUp}from\"components/Modal/Modal\";import*as variable from\"../variables/Variables\";import{addPercentReportName,getPercentById,getAllPercentReport,updatePercentThreshold}from\"../redux/index\";import{MaterialButton}from\"../components/CustomButton/MaterialButton\";function SystemConfiguration(){var _initialValue;var dispatch=useDispatch();var loading=useSelector(function(state){return getSystemConfigLoading(state);});var percentNames={elementConfig:{options:useSelector(function(state){return getPercentName(state);})}};React.useEffect(function(){// * khúc này lúc sau sẽ lấy giá trị percent đầu tiên của mảng percent report gửi về và đưa vào initialValue percent bằng cách gọi API\nvar loadPercentName=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return dispatch(getAllPercentReport());case 2:res=_context.sent;dispatch(addPercentReportName(res.payload.data));case 4:case\"end\":return _context.stop();}}},_callee);}));return function loadPercentName(){return _ref.apply(this,arguments);};}();loadPercentName();},[]);var initialValue=(_initialValue={},_defineProperty(_initialValue,variable.percentName,\"\"),_defineProperty(_initialValue,variable.percent,\"\"),_initialValue);var MyField=function MyField(props){var percent=useSelector(function(state){return getPercent(state);});var _useFormikContext=useFormikContext(),percentName=_useFormikContext.values.percentName,setFieldValue=_useFormikContext.setFieldValue;var _useField=useField(props),_useField2=_slicedToArray(_useField,2),field=_useField2[0],meta=_useField2[1];React.useEffect(function(){var set=function set(){dispatch(getPercentById(percentName));setFieldValue(props.name,percent);};set();},[percentName,percent]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormControll,Object.assign({},props,field)));};var onSubmit=function onSubmit(value,onSubmitProps){console.log(\"value, \",value);var submitChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res,updateData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return dispatch(updatePercentThreshold({id:value[variable.percentName],name:\"\",precent:value[variable.percent]}));case 2:res=_context2.sent;_context2.next=5;return dispatch(getAllPercentReport());case 5:updateData=_context2.sent;dispatch(addPercentReportName(updateData.payload.data));console.log(\"submit= \",res);onSubmitProps.setSubmitting(false);case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function submitChange(){return _ref2.apply(this,arguments);};}();submitChange();};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(LoadingPopUp,{visible:loading,length:\"200px\"}),/*#__PURE__*/React.createElement(Grid,{fluid:true,style:{margin:0,padding:0}},/*#__PURE__*/React.createElement(CardNoFooter,{title:\"\",content:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{style:{width:\"30%\"}},/*#__PURE__*/React.createElement(Formik,{initialValues:initialValue//   validationSchema={validationSchema}\n,onSubmit:onSubmit},function(formik){return/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(FormControll,Object.assign({elementType:\"select\",label:\"Loại ngưỡng báo cáo\",name:variable.percentName},percentNames)),/*#__PURE__*/React.createElement(MyField,{elementType:\"input\",type:\"text\",label:\"Phần trăm ngưỡng\",name:variable.percent}),/*#__PURE__*/React.createElement(MaterialButton,{variant:\"contained\",color:\"success\",type:\"submit\",size:\"large\",disabled:formik.isSubmitting||!formik.touched[variable.percent],style:{marginRight:5,marginTop:10}},\"Duy\\u1EC7t rau\"));})))})));}export default SystemConfiguration;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/views/SystemConfiguration.jsx"],"names":["React","useState","CardNoFooter","Col","Grid","Row","FormControll","useDispatch","useSelector","getPercentReport","getPercent","getPercentName","getPercentResult","getSystemConfigLoading","Formik","Field","Form","useField","useFormikContext","ShowPopUp","SuccessPopUp","LoadingPopUp","variable","addPercentReportName","getPercentById","getAllPercentReport","updatePercentThreshold","MaterialButton","SystemConfiguration","dispatch","loading","state","percentNames","elementConfig","options","useEffect","loadPercentName","res","payload","data","initialValue","percentName","percent","MyField","props","values","setFieldValue","field","meta","set","name","onSubmit","value","onSubmitProps","console","log","submitChange","id","precent","updateData","setSubmitting","margin","padding","width","formik","isSubmitting","touched","marginRight","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { CardNoFooter } from \"../components/Card/Card\";\r\nimport { Col, Grid, Row } from \"react-bootstrap\";\r\nimport { FormControll } from \"../components/Formik/FormikControl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getPercentReport,\r\n  getPercent,\r\n  getPercentName,\r\n  getPercentResult,\r\n  getSystemConfigLoading,\r\n} from \"../redux/Selector/Selectors\";\r\nimport { Formik, Field, Form, useField, useFormikContext } from \"formik\";\r\nimport { ShowPopUp, SuccessPopUp, LoadingPopUp } from \"components/Modal/Modal\";\r\n\r\nimport * as variable from \"../variables/Variables\";\r\nimport {\r\n  addPercentReportName,\r\n  getPercentById,\r\n  getAllPercentReport,\r\n  updatePercentThreshold,\r\n} from \"../redux/index\";\r\nimport { MaterialButton } from \"../components/CustomButton/MaterialButton\";\r\n\r\nfunction SystemConfiguration() {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state) => getSystemConfigLoading(state));\r\n  const percentNames = {\r\n    elementConfig: {\r\n      options: useSelector((state) => getPercentName(state)),\r\n    },\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // * khúc này lúc sau sẽ lấy giá trị percent đầu tiên của mảng percent report gửi về và đưa vào initialValue percent bằng cách gọi API\r\n    const loadPercentName = async () => {\r\n      const res = await dispatch(getAllPercentReport());\r\n      dispatch(addPercentReportName(res.payload.data));\r\n    };\r\n    loadPercentName();\r\n  }, []);\r\n\r\n  const initialValue = {\r\n    [variable.percentName]: \"\",\r\n    [variable.percent]: \"\",\r\n  };\r\n\r\n  const MyField = (props) => {\r\n    const percent = useSelector((state) => getPercent(state));\r\n    const {\r\n      values: { percentName },\r\n      setFieldValue,\r\n    } = useFormikContext();\r\n    const [field, meta] = useField(props);\r\n\r\n    React.useEffect(() => {\r\n      const set = () => {\r\n        dispatch(getPercentById(percentName));\r\n        setFieldValue(props.name, percent);\r\n      };\r\n      set();\r\n    }, [percentName, percent]);\r\n\r\n    return (\r\n      <>\r\n        <FormControll {...props} {...field} />\r\n      </>\r\n    );\r\n  };\r\n\r\n  const onSubmit = (value, onSubmitProps) => {\r\n    console.log(\"value, \", value);\r\n    const submitChange = async () => {\r\n      const res = await dispatch(\r\n        updatePercentThreshold({\r\n          id: value[variable.percentName],\r\n          name: \"\",\r\n          precent: value[variable.percent],\r\n        })\r\n      );\r\n\r\n      //* Update lai du lieu sau khi submit xong\r\n     const updateData= await dispatch(getAllPercentReport());\r\n      dispatch(addPercentReportName(updateData.payload.data));\r\n      console.log(\"submit= \", res);\r\n      onSubmitProps.setSubmitting(false);\r\n    };\r\n    submitChange();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <LoadingPopUp visible={loading} length=\"200px\" />\r\n      <Grid fluid style={{ margin: 0, padding: 0 }}>\r\n        <CardNoFooter\r\n          title=\"\"\r\n          content={\r\n            <React.Fragment>\r\n              <div style={{ width: \"30%\" }}>\r\n                <Formik\r\n                  initialValues={initialValue}\r\n                  //   validationSchema={validationSchema}\r\n                  onSubmit={onSubmit}\r\n                >\r\n                  {(formik) => {\r\n                    return (\r\n                      <Form>\r\n                        <FormControll\r\n                          elementType=\"select\"\r\n                          label={\"Loại ngưỡng báo cáo\"}\r\n                          name={variable.percentName}\r\n                          {...percentNames}\r\n                        />\r\n                        <MyField\r\n                          elementType=\"input\"\r\n                          type=\"text\"\r\n                          label={\"Phần trăm ngưỡng\"}\r\n                          name={variable.percent}\r\n                        />\r\n\r\n                        <MaterialButton\r\n                          variant=\"contained\"\r\n                          color=\"success\"\r\n                          type=\"submit\"\r\n                          size=\"large\"\r\n                          disabled={\r\n                            formik.isSubmitting ||\r\n                           !formik.touched[variable.percent]\r\n                          }\r\n                          style={{ marginRight: 5, marginTop: 10 }}\r\n                        >\r\n                          Duyệt rau\r\n                        </MaterialButton>\r\n                      </Form>\r\n                    );\r\n                  }}\r\n                </Formik>\r\n              </div>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SystemConfiguration;\r\n"]},"metadata":{},"sourceType":"module"}