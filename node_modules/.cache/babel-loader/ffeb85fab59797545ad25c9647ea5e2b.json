{"ast":null,"code":"var _jsxFileName = \"E:\\\\light-bootstrap-dashboard-react-master\\\\src\\\\components\\\\LoadingSpinner\\\\LoadingSpinner.jsx\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/ClipLoader\"; // Can be a string as well. Need to ensure each key-value pair ends with ;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nfunction LoadingSpinner() {\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"green\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sweet-loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setLoading(!loading),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Toggle Loader\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: color,\n    onChange: input => setColor(input.target.value),\n    placeholder: \"Color of the loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ClipLoader, {\n    color: color,\n    loading: loading,\n    css: override,\n    size: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default LoadingSpinner;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/components/LoadingSpinner/LoadingSpinner.jsx"],"names":["React","useState","css","ClipLoader","override","LoadingSpinner","loading","setLoading","color","setColor","input","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB,C,CAEA;;AACA,MAAMC,QAAQ,GAAGF,GAAI;;;;CAArB;;AAMA,SAASG,cAAT,GAA0B;AACxB,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAApC;AACA,MAAI,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,OAAD,CAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAMM,UAAU,CAAC,CAACD,OAAF,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AACE,IAAA,KAAK,EAAEE,KADT;AAEE,IAAA,QAAQ,EAAGE,KAAD,IAAWD,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAF/B;AAGE,IAAA,WAAW,EAAC,qBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEJ,KAAnB;AAA0B,IAAA,OAAO,EAAEF,OAAnC;AAA4C,IAAA,GAAG,EAAEF,QAAjD;AAA2D,IAAA,IAAI,EAAE,GAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD;;AAED,eAAeC,cAAf","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { css } from \"@emotion/core\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\n// Can be a string as well. Need to ensure each key-value pair ends with ;\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nfunction LoadingSpinner() {\r\n  let [loading, setLoading] = useState(true);\r\n  let [color, setColor] = useState(\"green\");\r\n\r\n  return (\r\n    <div className=\"sweet-loading\">\r\n      <button onClick={() => setLoading(!loading)}>Toggle Loader</button>\r\n      <input\r\n        value={color}\r\n        onChange={(input) => setColor(input.target.value)}\r\n        placeholder=\"Color of the loader\"\r\n      />\r\n\r\n      <ClipLoader color={color} loading={loading} css={override} size={100} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingSpinner;\r\n"]},"metadata":{},"sourceType":"module"}