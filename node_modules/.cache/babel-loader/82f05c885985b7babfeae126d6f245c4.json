{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sam\\\\Documents\\\\GitHub\\\\Capstone-Spring-2021\\\\src\\\\views\\\\Signin.jsx\";\nimport { Box } from \"@material-ui/core\";\nimport { FormControll } from \"components/Formik/FormikControl\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, setFirebaseToken } from \"redux/index\";\nimport { getSignInForm, getToken } from \"redux/Selector/Selectors\";\nimport message from \"util/firebase\";\nimport * as variable from \"variables/Variables\";\nimport * as Yup from \"yup\";\nimport \"../components/SignIn/style.scss\";\nlet width = 240;\nlet marginBottom = 5;\nlet headeFontSize = 20;\nlet choseSignInTypeHeight = 30;\nlet choseSignInTypeWidth = \"80%\";\nlet startIcon = 15;\nlet chooseSignInPadding = 20;\nlet attensionPadding = 10; // * Style cho may cai nut chon loai dang nhap\n\nlet choseStyle = {\n  height: choseSignInTypeHeight,\n  padding: 0,\n  marginBottom: 10,\n  width: choseSignInTypeWidth,\n  fontSize: 12\n};\nconst initialValue = {\n  [variable.username]: \"\",\n  [variable.password]: \"\"\n};\n/**\r\n * * hàm test dùng để tạo ra 1 validation custom\r\n * * với tham số 1 là tên của cái validation này\r\n * * tham số 2 là message error\r\n * * tham số 3 là 1 function với value chính là cái data đc input\r\n */\n\nconst validationSchema = Yup.object({\n  [variable.password]: Yup.string().required([variable.require]),\n  [variable.username]: Yup.string().required([variable.require]),\n  checkpassword: Yup.string().when([variable.password], {\n    is: val => val == \"sam\" > 0 ? true : false,\n    then: Yup.string().oneOf([Yup.ref(variable.password)], \"Your password is wrong\")\n  })\n});\n\nfunction Signin() {\n  const token = useSelector(state => getToken(state));\n  const signInForm = useSelector(state => getSignInForm(state));\n  const [firebaseToken, setFirebaseToken] = React.useState(\"\");\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    const getTokenFromServer = async () => {\n      try {\n        const currentToken = await message.getToken({\n          vapidKey: \"BJT4KMAdFm6G8Sjq49q8RmDMsP6w0jPUghMTSMcdfkduJnBNzfxsSlLGEAMQzKjsu1aCtCtGA9TBT4D1wCk4SxM\"\n        });\n\n        if (currentToken) {\n          setFirebaseToken(currentToken);\n          console.log(\"registration success, here firebase token=\", currentToken);\n        } else {\n          // Show permission request UI\n          console.log(\"No registration token available. Request permission to generate one.\");\n        }\n      } catch (error) {\n        console.log(\"firebase token error= \", error);\n      }\n    };\n\n    getTokenFromServer();\n  }, []);\n\n  const onSubmit = (value, onSubmitProps) => {\n    console.log(\"submit value và có ở Sâm: \", value); //* giá trị của submiting thì formik sẽ tự động set khi ta dùng đén fieldError, bỏi vì nó làm thay đổi đến object error nên submiting sẽ ko\n    //* chuyển thành true\n    //! Nếu như token bằng rỗng thì chứng tỏ mật khẩu sai\n\n    console.log(\"token lên web vào ngày 5/5\", firebaseToken);\n    dispatch(login({\n      phoneNumber: value.username,\n      deviceToken: firebaseToken,\n      password: value.password\n    })).then(() => {\n      if (token == \"\") {\n        onSubmitProps.setFieldError([variable.password], \"Hãy kiểm tra lại mật khẩu hoặc tên đăng nhập của bạn\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValue,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, formik => {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        paddingLeft: 15,\n        fontFamily: \"Roboto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"#9e9e9e\",\n        fontSize: headeFontSize\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \"\\u0110\\u0103ng nh\\u1EADp\"), /*#__PURE__*/React.createElement(Box, {\n      width: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: headeFontSize\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, \"Web Admin\")), signInForm.map(rows => {\n      const columns = rows.row.cols;\n      return columns.map(column => {\n        const controlType = column.elementType;\n        const {\n          name,\n          type,\n          placeholder,\n          labeltext\n        } = column.elementConfig;\n        return /*#__PURE__*/React.createElement(FormControll, Object.assign({\n          elementType: \"input\",\n          type: type,\n          name: name,\n          placeholder: placeholder\n        }, column, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }\n        }));\n      });\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"attensin\",\n      style: {\n        visibility: \"hidden\",\n        textAlign: \"right\",\n        paddingRight: attensionPadding,\n        marginTop: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: 12,\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, \"Qu\\xEAn m\\u1EADt kh\\u1EA9u?\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, \"\\u0110\\u0103ng nh\\u1EADp\"));\n  }))));\n}\n\nexport default Signin;","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/views/Signin.jsx"],"names":["Box","FormControll","Form","Formik","React","useDispatch","useSelector","login","setFirebaseToken","getSignInForm","getToken","message","variable","Yup","width","marginBottom","headeFontSize","choseSignInTypeHeight","choseSignInTypeWidth","startIcon","chooseSignInPadding","attensionPadding","choseStyle","height","padding","fontSize","initialValue","username","password","validationSchema","object","string","required","require","checkpassword","when","is","val","then","oneOf","ref","Signin","token","state","signInForm","firebaseToken","useState","dispatch","useEffect","getTokenFromServer","currentToken","vapidKey","console","log","error","onSubmit","value","onSubmitProps","phoneNumber","deviceToken","setFieldError","display","flexDirection","alignItems","formik","paddingLeft","fontFamily","color","fontWeight","map","rows","columns","row","cols","column","controlType","elementType","name","type","placeholder","labeltext","elementConfig","visibility","textAlign","paddingRight","marginTop"],"mappings":"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","sourcesContent":["import { Box } from \"@material-ui/core\";\r\nimport { FormControll } from \"components/Formik/FormikControl\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login, setFirebaseToken } from \"redux/index\";\r\nimport { getSignInForm, getToken } from \"redux/Selector/Selectors\";\r\nimport message from \"util/firebase\";\r\nimport * as variable from \"variables/Variables\";\r\nimport * as Yup from \"yup\";\r\nimport \"../components/SignIn/style.scss\";\r\n\r\nlet width = 240;\r\nlet marginBottom = 5;\r\nlet headeFontSize = 20;\r\nlet choseSignInTypeHeight = 30;\r\nlet choseSignInTypeWidth = \"80%\";\r\nlet startIcon = 15;\r\nlet chooseSignInPadding = 20;\r\nlet attensionPadding = 10;\r\n// * Style cho may cai nut chon loai dang nhap\r\nlet choseStyle = {\r\n  height: choseSignInTypeHeight,\r\n  padding: 0,\r\n  marginBottom: 10,\r\n  width: choseSignInTypeWidth,\r\n  fontSize: 12,\r\n};\r\n\r\nconst initialValue = {\r\n  [variable.username]: \"\",\r\n  [variable.password]: \"\",\r\n};\r\n\r\n/**\r\n * * hàm test dùng để tạo ra 1 validation custom\r\n * * với tham số 1 là tên của cái validation này\r\n * * tham số 2 là message error\r\n * * tham số 3 là 1 function với value chính là cái data đc input\r\n */\r\n\r\nconst validationSchema = Yup.object({\r\n  [variable.password]: Yup.string().required([variable.require]),\r\n  [variable.username]: Yup.string().required([variable.require]),\r\n  checkpassword: Yup.string().when([variable.password], {\r\n    is: (val) => (val == \"sam\" > 0 ? true : false),\r\n    then: Yup.string().oneOf(\r\n      [Yup.ref(variable.password)],\r\n      \"Your password is wrong\"\r\n    ),\r\n  }),\r\n});\r\n\r\nfunction Signin() {\r\n  const token = useSelector((state) => getToken(state));\r\n  const signInForm = useSelector((state) => getSignInForm(state));\r\n  const [firebaseToken, setFirebaseToken] = React.useState(\"\");\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    const getTokenFromServer = async () => {\r\n      try {\r\n        const currentToken = await message.getToken({\r\n          vapidKey:\r\n            \"BJT4KMAdFm6G8Sjq49q8RmDMsP6w0jPUghMTSMcdfkduJnBNzfxsSlLGEAMQzKjsu1aCtCtGA9TBT4D1wCk4SxM\",\r\n        });\r\n        if (currentToken) {\r\n          setFirebaseToken(currentToken);\r\n          console.log(\r\n            \"registration success, here firebase token=\",\r\n            currentToken\r\n          );\r\n        } else {\r\n          // Show permission request UI\r\n          console.log(\r\n            \"No registration token available. Request permission to generate one.\"\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.log(\"firebase token error= \", error);\r\n      }\r\n    };\r\n    getTokenFromServer();\r\n  }, []);\r\n  const onSubmit = (value, onSubmitProps) => {\r\n    console.log(\"submit value và có ở Sâm: \", value);\r\n    //* giá trị của submiting thì formik sẽ tự động set khi ta dùng đén fieldError, bỏi vì nó làm thay đổi đến object error nên submiting sẽ ko\r\n    //* chuyển thành true\r\n\r\n    //! Nếu như token bằng rỗng thì chứng tỏ mật khẩu sai\r\n    console.log(\"token lên web vào ngày 5/5\", firebaseToken);\r\n    dispatch(\r\n      login({\r\n        phoneNumber: value.username,\r\n        deviceToken: firebaseToken,\r\n        password: value.password,\r\n      })\r\n    ).then(() => {\r\n      if (token == \"\") {\r\n        onSubmitProps.setFieldError(\r\n          [variable.password],\r\n          \"Hãy kiểm tra lại mật khẩu hoặc tên đăng nhập của bạn\"\r\n        );\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}\r\n    >\r\n      <div className=\"login-page\">\r\n        <div className=\"form\">\r\n          <Formik\r\n            initialValues={initialValue}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n          >\r\n            {(formik) => {\r\n              return (\r\n                <Form>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"row\",\r\n                      paddingLeft: 15,\r\n                      fontFamily: \"Roboto\",\r\n                    }}\r\n                  >\r\n                    <p style={{ color: \"#9e9e9e\", fontSize: headeFontSize }}>\r\n                      Đăng nhập\r\n                    </p>\r\n                    <Box width={5} />\r\n                    <p style={{ fontWeight: \"bold\", fontSize: headeFontSize }}>\r\n                      Web Admin\r\n                    </p>\r\n                  </div>\r\n                  {signInForm.map((rows) => {\r\n                    const columns = rows.row.cols;\r\n                    return columns.map((column) => {\r\n                      const controlType = column.elementType;\r\n                      const { name, type, placeholder, labeltext } =\r\n                        column.elementConfig;\r\n                      return (\r\n                        <FormControll\r\n                          elementType=\"input\"\r\n                          type={type}\r\n                          name={name}\r\n                          placeholder={placeholder}\r\n                          {...column}\r\n                        />\r\n                      );\r\n                    });\r\n                  })}\r\n                  <div\r\n                    className=\"attensin\"\r\n                    style={{\r\n                      visibility: \"hidden\",\r\n                      textAlign: \"right\",\r\n                      paddingRight: attensionPadding,\r\n                      marginTop: 5,\r\n                    }}\r\n                  >\r\n                    <p style={{ fontSize: 12, fontWeight: \"bold\" }}>\r\n                      Quên mật khẩu?\r\n                    </p>\r\n                  </div>\r\n                  {/* {console.log(\"formik valid value\", formik)} */}\r\n                  <button type=\"submit\">Đăng nhập</button>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n"]},"metadata":{},"sourceType":"module"}