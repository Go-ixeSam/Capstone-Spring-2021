{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"E:\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";// api/axiosClient.js\nimport axios from\"axios\";import queryString from\"query-string\";import*as variable from\"variables/Variables\";// Set up default config for http requests here\n// Please have a look at here `https://github.com/axios/axios#request-\n// config` for the full list of configs\nvar axiosClient=axios.create({baseURL:variable.jsonplaceholerAPI,headers:{\"content-type\":\"application/json\"},//   ! Việc parse param của asiox có hơi \n// !vấn đề nên ta sẽ sử dụng query string để xủ lí việc này\n//? Ví dụ như ta phải viét query stirng thế này : ?userid=\"\"&password=\"\". Khá là mệt, \n//?dùng cái thư việ này ta chỉ cần bỏ param vào thôi, còn lại nó sẽ tự chuyển thành query trên\nparamsSerializer:function paramsSerializer(params){return queryString.stringify(params);}});// ! Xử lí phần authen token, mỗi api đề có cái này mới đc\naxiosClient.interceptors.request.use(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(config){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",config);case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());// * mỗi reponse ta sẽ phải thực hiện lấy\naxiosClient.interceptors.response.use(//*reponse.data để lấy về json yêu cầu, ta thực hiện ở đây luôn cho lẹ\n// ! nghĩ lại thì ta cần nhiều thư hơn đơn thuần là data\nfunction(response){// if (response && response.data) {\n//   return response.data;\n// }\nreturn response;},function(error){// * Nếu ta muốn xem cái này thì ở kết quả trả về ta .error thì ta sẽ thấy rõ, nó cho ta biết status code và message đủ cả ko \n// * cần phải thêm cái gì cả\nthrow error;});export default axiosClient;","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/api/axiosClient.js"],"names":["axios","queryString","variable","axiosClient","create","baseURL","jsonplaceholerAPI","headers","paramsSerializer","params","stringify","interceptors","request","use","config","response","error"],"mappings":"yUAAA;AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,qBAA1B,CAEA;AAEA;AACA;AAEA,GAAMC,CAAAA,WAAW,CAAGH,KAAK,CAACI,MAAN,CAAa,CAC/BC,OAAO,CAAEH,QAAQ,CAACI,iBADa,CAE/BC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFsB,CAK/B;AACA;AAEA;AACA;AAEAC,gBAAgB,CAAE,0BAACC,MAAD,QAAYR,CAAAA,WAAW,CAACS,SAAZ,CAAsBD,MAAtB,CAAZ,EAXa,CAAb,CAApB,CAcA;AACAN,WAAW,CAACQ,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC,0FAAqC,iBAAOC,MAAP,kJAE5BA,MAF4B,wDAArC,gEAKA;AACAX,WAAW,CAACQ,YAAZ,CAAyBI,QAAzB,CAAkCF,GAAlC,CACA;AACA;AACE,SAACE,QAAD,CAAc,CACZ;AACA;AACA;AACA,MAAOA,CAAAA,QAAP,CACD,CARH,CASE,SAACC,KAAD,CAAW,CACT;AACA;AACA,KAAMA,CAAAA,KAAN,CACD,CAbH,EAeA,cAAeb,CAAAA,WAAf","sourcesContent":["// api/axiosClient.js\r\nimport axios from \"axios\";\r\nimport queryString from \"query-string\";\r\nimport * as variable from \"variables/Variables\";\r\n\r\n// Set up default config for http requests here\r\n\r\n// Please have a look at here `https://github.com/axios/axios#request-\r\n// config` for the full list of configs\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: variable.jsonplaceholerAPI,\r\n  headers: {\r\n    \"content-type\": \"application/json\",\r\n  },\r\n  //   ! Việc parse param của asiox có hơi \r\n  // !vấn đề nên ta sẽ sử dụng query string để xủ lí việc này\r\n\r\n  //? Ví dụ như ta phải viét query stirng thế này : ?userid=\"\"&password=\"\". Khá là mệt, \r\n  //?dùng cái thư việ này ta chỉ cần bỏ param vào thôi, còn lại nó sẽ tự chuyển thành query trên\r\n\r\n  paramsSerializer: (params) => queryString.stringify(params),\r\n});\r\n\r\n// ! Xử lí phần authen token, mỗi api đề có cái này mới đc\r\naxiosClient.interceptors.request.use(async (config) => {\r\n  // Handle token here ...\r\n  return config;\r\n});\r\n\r\n// * mỗi reponse ta sẽ phải thực hiện lấy\r\naxiosClient.interceptors.response.use(\r\n//*reponse.data để lấy về json yêu cầu, ta thực hiện ở đây luôn cho lẹ\r\n// ! nghĩ lại thì ta cần nhiều thư hơn đơn thuần là data\r\n  (response) => {\r\n    // if (response && response.data) {\r\n    //   return response.data;\r\n    // }\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // * Nếu ta muốn xem cái này thì ở kết quả trả về ta .error thì ta sẽ thấy rõ, nó cho ta biết status code và message đủ cả ko \r\n    // * cần phải thêm cái gì cả\r\n    throw error;\r\n  }\r\n);\r\nexport default axiosClient;\r\n "]},"metadata":{},"sourceType":"module"}