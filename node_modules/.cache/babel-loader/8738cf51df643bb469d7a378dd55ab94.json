{"ast":null,"code":"var _jsxFileName = \"E:\\\\light-bootstrap-dashboard-react-master\\\\src\\\\components\\\\SuperTable\\\\AdvanceTable.js\";\nimport { Box, TableFooter } from \"@material-ui/core\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport clsx from \"clsx\";\nimport { useFormik } from \"formik\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { removeAdvanceRecordSelected, getLocked, setTrip, getDataByNameSearch } from \"../../redux\";\nimport { getAdvanceDataByNameSearch, removeAdvanceRecord, getUserRole, getAdvanceData } from \"../../redux/Selector/Selectors\";\nimport * as variable from \"../../variables/Variables\";\nimport { DeleteButton } from \"../../components/CustomButton/CustomButton\";\nimport SearchOption from \"../../components/FilterOption/SearchOption/SearchBar\";\nimport { StyledTableCell } from \"./StyledCell\";\nimport { StyledTableRow } from \"./StyledRow\";\nimport EnhancedTableHead from \"../SuperTable/Header/AdvanceHeader\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLock, faLockOpen } from \"@fortawesome/free-solid-svg-icons\";\nconst NormalPElement = styled.p`\n  font-size: 14px;\n  margin: 0px;\n`;\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === \"light\" ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: \"1 1 100%\"\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const {\n    numSelected\n  } = props;\n  return /*#__PURE__*/React.createElement(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, numSelected > 0 ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, numSelected, \" selected\") : /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    id: \"tableTitle\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"Nutrition\"), numSelected > 0 ? /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }))) : /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Filter list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"filter list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FilterListIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    \"& .MuiSelect-root\": {\n      fontSize: 14,\n      margin: 0\n    }\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    // fontSize:14,\n    minWidth: 750,\n    borderCollapse: \"collapse\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  }\n}));\nexport default function EnhancedTable(props) {\n  const classes = useStyles(); // ! row này sẽ đại diện cho dữ liệu lấy trực tiếp từ store (global)\n\n  const rowWithDataFromStore = props.bodyData; // * cái row ở bên store truyền từ bên component vào\n\n  const [rows, setRows] = React.useState(props.bodyData); //* cái row ở trực tiếp bên store luôn\n\n  let directRowBody = useSelector(state => getAdvanceData(state));\n  const dispatch = useDispatch();\n  let history = useHistory(); // ! history object\n  // * Dùng để đánh dấu account đang bị lock\n\n  const [isLock, setIsLock] = React.useState(0); // ! Dùng để kiểm tra sự thay đổi của  const rowWithDataFromStore = props.bodyData;\n  //!  lấy trực tiếp từ store. Vì ở đây rows đc khởi tạo với useState nên nếu như\n  //! ko thực hiện hàm set của nó thì dù store có thay đổi state thì nó cũng ko tự trigger render\n\n  React.useEffect(() => {\n    console.log(\"Đã vào effect\", rowWithDataFromStore);\n    setRows(rowWithDataFromStore);\n  }, rowWithDataFromStore); //* Dùng để thông báo rằng những field ko cần phải show ở table\n\n  const {\n    notShowing\n  } = props; // console.log(rows);\n\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const removeRows = useSelector(state => removeAdvanceRecord(state, selected));\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  }; //! tam thoi chua dung den all click\n\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      return;\n    }\n  }; // ! Hàm này sẽ nhận name của cái row đc click và truyền đến trang edit\n  // const handleEdit = (selectedRowName) => {\n  //   console.log(\"user role=\", userRole);\n  //   if (userRole == variable.fleetManagerRole) {\n  //     history.push(variable.fleetmanager + `/truckform/:name${selectedRowName}`);\n  //     history.push({\n  //       pathname: variable.fleetmanager + \"/truckform\",\n  //       search: `?name=${selectedRowName}`,\n  //     });\n  //   }\n  // };\n\n  /**\r\n   * ! row sẽ tượng trưng cái row đc click\r\n   * @param {*} event\r\n   * @param {*} row\r\n   */\n\n\n  const handleClick = (event, row) => {\n    const {\n      name\n    } = row;\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    } // ! tam thoi ta se trien khai tren store\n\n\n    setSelected(newSelected);\n    console.log(selected);\n  };\n\n  const deleteRow = () => {\n    console.log(\"row moi: \", selected);\n    dispatch(removeAdvanceRecordSelected(selected)); //! tìm ra những row đc lựa chọng\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  const formik = useFormik({\n    initialValues: {\n      searchvalue: \"\",\n      filtervalue: \"Name\"\n    },\n    onSubmit: values => {\n      console.log(\"search value\", values);\n\n      switch (values[\"filtervalue\"]) {\n        case \"Name\":\n          console.log(setRows(getAdvanceDataByNameSearch(rows, values[\"searchvalue\"])));\n          setRows(getAdvanceDataByNameSearch(rows, values[\"searchvalue\"])); // dispatch(getDataByNameSearch(values[\"searchvalue\"]));\n\n          break;\n\n        case \" Age\":\n          console.log(\"result\", values[\"filtervalue\"]);\n          break;\n      }\n    }\n  });\n\n  function lockAccount(id) {\n    let clone = [...rows];\n    clone.map(obj => {\n      if (obj[variable.id] == id) {\n        if (obj[variable.islock] == 1) {\n          console.log(\"Bang do\");\n          obj[variable.islock] = 0;\n        } else {\n          obj[variable.islock] = 1;\n        }\n      }\n    }); // setRows(clone);\n    // dispatch(setTrip(clone));\n  }\n\n  function handleLockAccount(row) {\n    let id = row[variable.id]; // ! Nhấp vào sẽ thành mở/đóng khóa\n\n    dispatch(getLocked(id)); // lockAccount(id)\n    // setRows(directRowBody)\n    // setTimeout();\n    //   const lockAccount = async () => {\n    //     let result = \"\";\n    //     try {\n    //       await dispatch(getLocked(id));\n    //       result = \"success\";\n    //       // setTimeout(setRows(directRowBody), 3000);\n    //     } catch (error) {\n    //       console.log(error);\n    //       result = \"error\";\n    //     }\n    //     return result;\n    //   };\n    //   lockAccount().then((result) => {\n    //     console.log(\"result= \", result);\n    //     if (result == \"success\") {\n    //       // setRows(directRowBody);\n    //       setTimeout(setRows(directRowBody), 3000);\n    //     }\n    //   });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchOption, {\n    formikAction: formik,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    height: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: dense ? \"small\" : \"medium\",\n    \"aria-label\": \"enhanced table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    headCells: props.headCells,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }\n  }, stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row.name);\n    const labelId = `enhanced-table-checkbox-${index}`; // * string dùng để lọc những field ko shwo lên table\n\n    let string = \"\";\n    const objectInArr = [];\n\n    for (const key in row) {\n      notShowing.map(showing => {\n        string = showing;\n      });\n\n      if (string.localeCompare(key)) {\n        // ! Ko biết lí do vì sao mà ID lại bằng ID khi so sánh trong mảng nên thêm dòng dưới\n        if (key != \"ID\") {\n          objectInArr.push({\n            key: key,\n            value: row[key]\n          });\n        }\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(StyledTableRow, {\n      hover: true,\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row.Dessert,\n      selected: isItemSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(StyledTableCell, {\n      padding: \"checkbox\",\n      onClick: () => handleLockAccount(row),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        color: row[variable.islock] == 1 ? \"red\" : null\n      },\n      icon: row[variable.islock] == 1 ? faLock : faLockOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 27\n      }\n    }))), objectInArr.map((obj, index) => {\n      if (index == 0) {\n        return /*#__PURE__*/React.createElement(StyledTableCell, {\n          component: \"th\",\n          id: labelId,\n          scope: \"row\",\n          padding: \"none\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 29\n          }\n        }, obj.value);\n      } else {\n        return /*#__PURE__*/React.createElement(StyledTableCell, {\n          align: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 29\n          }\n        }, obj.value);\n      }\n    }));\n  }), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: (dense ? 33 : 53) * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 3,\n    size: \"small\",\n    style: {\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 19\n    }\n  }, selected.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: 14,\n      margin: 0,\n      paddingLeft: 10,\n      color: variable.materialSecondaryColorMain\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 25\n    }\n  }, selected.length, \" selected\"), /*#__PURE__*/React.createElement(DeleteButton, {\n    click: deleteRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      flex: \"1 1 100%\"\n    },\n    variant: \"h6\",\n    id: \"tableTitle\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 4,\n    size: \"small\",\n    style: {\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    style: {\n      fontSize: 14\n    },\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows.length,\n    labelRowsPerPage: /*#__PURE__*/React.createElement(NormalPElement, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 23\n      }\n    }, \"Rows per page:\"),\n    labelDisplayedRows: ({\n      from,\n      to,\n      count\n    }) => /*#__PURE__*/React.createElement(NormalPElement, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 23\n      }\n    }, from, \"-\", to, \" of \", count !== -1 ? count : \"more than\" + to),\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 19\n    }\n  }))))))));\n}","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/components/SuperTable/AdvanceTable.js"],"names":["Box","TableFooter","Checkbox","FormControlLabel","IconButton","Paper","lighten","makeStyles","Switch","Table","TableBody","TableCell","TableContainer","TablePagination","TableRow","Toolbar","Tooltip","Typography","DeleteIcon","EditIcon","FilterListIcon","clsx","useFormik","PropTypes","React","useDispatch","useSelector","styled","removeAdvanceRecordSelected","getLocked","setTrip","getDataByNameSearch","getAdvanceDataByNameSearch","removeAdvanceRecord","getUserRole","getAdvanceData","variable","DeleteButton","SearchOption","StyledTableCell","StyledTableRow","EnhancedTableHead","useHistory","FontAwesomeIcon","faLock","faLockOpen","NormalPElement","p","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","EnhancedTableToolbar","props","classes","numSelected","propTypes","number","isRequired","useStyles","width","fontSize","margin","paper","marginBottom","table","minWidth","borderCollapse","visuallyHidden","border","clip","height","overflow","padding","position","top","EnhancedTable","rowWithDataFromStore","bodyData","rows","setRows","useState","directRowBody","state","dispatch","history","isLock","setIsLock","useEffect","console","log","notShowing","setOrder","setOrderBy","selected","setSelected","removeRows","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","event","property","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","name","handleClick","row","selectedIndex","indexOf","newSelected","concat","slice","length","deleteRow","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","handleChangeDense","isSelected","emptyRows","Math","min","formik","initialValues","searchvalue","filtervalue","onSubmit","values","lockAccount","id","clone","obj","islock","handleLockAccount","headCells","isItemSelected","labelId","string","objectInArr","key","showing","localeCompare","push","Dessert","display","flexDirection","alignItems","materialSecondaryColorMain","from","to","count"],"mappings":"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","sourcesContent":["import { Box, TableFooter } from \"@material-ui/core\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport clsx from \"clsx\";\r\nimport { useFormik } from \"formik\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  removeAdvanceRecordSelected,\r\n  getLocked,\r\n  setTrip,\r\n  getDataByNameSearch,\r\n} from \"../../redux\";\r\nimport {\r\n  getAdvanceDataByNameSearch,\r\n  removeAdvanceRecord,\r\n  getUserRole,\r\n  getAdvanceData,\r\n} from \"../../redux/Selector/Selectors\";\r\nimport * as variable from \"../../variables/Variables\";\r\nimport { DeleteButton } from \"../../components/CustomButton/CustomButton\";\r\nimport SearchOption from \"../../components/FilterOption/SearchOption/SearchBar\";\r\nimport { StyledTableCell } from \"./StyledCell\";\r\nimport { StyledTableRow } from \"./StyledRow\";\r\nimport EnhancedTableHead from \"../SuperTable/Header/AdvanceHeader\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLock, faLockOpen } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NormalPElement = styled.p`\r\n  font-size: 14px;\r\n  margin: 0px;\r\n`;\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& .MuiSelect-root\": {\r\n      fontSize: 14,\r\n      margin: 0,\r\n    },\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    // fontSize:14,\r\n    minWidth: 750,\r\n    borderCollapse: \"collapse\",\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n\r\n  // ! row này sẽ đại diện cho dữ liệu lấy trực tiếp từ store (global)\r\n  const rowWithDataFromStore = props.bodyData;\r\n\r\n  // * cái row ở bên store truyền từ bên component vào\r\n  const [rows, setRows] = React.useState(props.bodyData);\r\n\r\n  //* cái row ở trực tiếp bên store luôn\r\n  let directRowBody = useSelector((state) => getAdvanceData(state));\r\n\r\n  const dispatch = useDispatch();\r\n  let history = useHistory(); // ! history object\r\n\r\n  // * Dùng để đánh dấu account đang bị lock\r\n  const [isLock, setIsLock] = React.useState(0);\r\n\r\n  // ! Dùng để kiểm tra sự thay đổi của  const rowWithDataFromStore = props.bodyData;\r\n  //!  lấy trực tiếp từ store. Vì ở đây rows đc khởi tạo với useState nên nếu như\r\n  //! ko thực hiện hàm set của nó thì dù store có thay đổi state thì nó cũng ko tự trigger render\r\n  React.useEffect(() => {\r\n    console.log(\"Đã vào effect\", rowWithDataFromStore);\r\n    setRows(rowWithDataFromStore);\r\n  }, rowWithDataFromStore);\r\n\r\n  //* Dùng để thông báo rằng những field ko cần phải show ở table\r\n  const { notShowing } = props;\r\n\r\n  // console.log(rows);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n\r\n  const [selected, setSelected] = React.useState([]);\r\n\r\n  const removeRows = useSelector((state) =>\r\n    removeAdvanceRecord(state, selected)\r\n  );\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  //! tam thoi chua dung den all click\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      return;\r\n    }\r\n  };\r\n\r\n  // ! Hàm này sẽ nhận name của cái row đc click và truyền đến trang edit\r\n  // const handleEdit = (selectedRowName) => {\r\n  //   console.log(\"user role=\", userRole);\r\n  //   if (userRole == variable.fleetManagerRole) {\r\n  //     history.push(variable.fleetmanager + `/truckform/:name${selectedRowName}`);\r\n  //     history.push({\r\n  //       pathname: variable.fleetmanager + \"/truckform\",\r\n  //       search: `?name=${selectedRowName}`,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  /**\r\n   * ! row sẽ tượng trưng cái row đc click\r\n   * @param {*} event\r\n   * @param {*} row\r\n   */\r\n  const handleClick = (event, row) => {\r\n    const { name } = row;\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    // ! tam thoi ta se trien khai tren store\r\n    setSelected(newSelected);\r\n    console.log(selected);\r\n  };\r\n\r\n  const deleteRow = () => {\r\n    console.log(\"row moi: \", selected);\r\n    dispatch(removeAdvanceRecordSelected(selected));\r\n    //! tìm ra những row đc lựa chọng\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      searchvalue: \"\",\r\n      filtervalue: \"Name\",\r\n    },\r\n    onSubmit: (values) => {\r\n      console.log(\"search value\", values);\r\n      switch (values[\"filtervalue\"]) {\r\n        case \"Name\":\r\n          console.log(\r\n            setRows(getAdvanceDataByNameSearch(rows, values[\"searchvalue\"]))\r\n          );\r\n          setRows(getAdvanceDataByNameSearch(rows, values[\"searchvalue\"]));\r\n          // dispatch(getDataByNameSearch(values[\"searchvalue\"]));\r\n          break;\r\n        case \" Age\":\r\n          console.log(\"result\", values[\"filtervalue\"]);\r\n          break;\r\n      }\r\n    },\r\n  });\r\n\r\n  function lockAccount(id) {\r\n    let clone = [...rows];\r\n    clone.map((obj) => {\r\n      if (obj[variable.id] == id) {\r\n        if (obj[variable.islock] == 1) {\r\n          console.log(\"Bang do\");\r\n          obj[variable.islock] = 0;\r\n        } else {\r\n          obj[variable.islock] = 1;\r\n        }\r\n      }\r\n    });\r\n    // setRows(clone);\r\n    // dispatch(setTrip(clone));\r\n  }\r\n\r\n  function handleLockAccount(row) {\r\n    let id = row[variable.id];\r\n\r\n    // ! Nhấp vào sẽ thành mở/đóng khóa\r\n    dispatch(getLocked(id));\r\n    // lockAccount(id)\r\n    // setRows(directRowBody)\r\n    // setTimeout();\r\n\r\n    //   const lockAccount = async () => {\r\n    //     let result = \"\";\r\n    //     try {\r\n    //       await dispatch(getLocked(id));\r\n    //       result = \"success\";\r\n    //       // setTimeout(setRows(directRowBody), 3000);\r\n    //     } catch (error) {\r\n    //       console.log(error);\r\n    //       result = \"error\";\r\n    //     }\r\n    //     return result;\r\n    //   };\r\n    //   lockAccount().then((result) => {\r\n    //     console.log(\"result= \", result);\r\n    //     if (result == \"success\") {\r\n    //       // setRows(directRowBody);\r\n    //       setTimeout(setRows(directRowBody), 3000);\r\n    //     }\r\n    //   });\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <SearchOption formikAction={formik} />\r\n        <Box height={10} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n              headCells={props.headCells}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  // * string dùng để lọc những field ko shwo lên table\r\n                  let string = \"\";\r\n                  const objectInArr = [];\r\n                  for (const key in row) {\r\n                    notShowing.map((showing) => {\r\n                      string = showing;\r\n                    });\r\n                    if (string.localeCompare(key)) {\r\n                      // ! Ko biết lí do vì sao mà ID lại bằng ID khi so sánh trong mảng nên thêm dòng dưới\r\n                      if (key != \"ID\") {\r\n                        objectInArr.push({\r\n                          key: key,\r\n                          value: row[key],\r\n                        });\r\n                      }\r\n                    }\r\n                  }\r\n\r\n                  return (\r\n                    <StyledTableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.Dessert}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <StyledTableCell\r\n                        padding=\"checkbox\"\r\n                        onClick={() => handleLockAccount(row)}\r\n                      >\r\n                        {/* {console.log(\"isLock ne:\", row[variable.islock])} */}\r\n                        <IconButton>\r\n                          <FontAwesomeIcon\r\n                            style={{\r\n                              color: row[variable.islock] == 1 ? \"red\" : null,\r\n                            }}\r\n                            icon={\r\n                              row[variable.islock] == 1 ? faLock : faLockOpen\r\n                            }\r\n                          />\r\n                        </IconButton>\r\n                      </StyledTableCell>\r\n                      {/* <StyledTableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                          onClick={(event) => handleClick(event, row)}\r\n                        />\r\n                      </StyledTableCell> */}\r\n                      {objectInArr.map((obj, index) => {\r\n                        if (index == 0) {\r\n                          return (\r\n                            <StyledTableCell\r\n                              component=\"th\"\r\n                              id={labelId}\r\n                              scope=\"row\"\r\n                              padding=\"none\"\r\n                            >\r\n                              {obj.value}\r\n                            </StyledTableCell>\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <StyledTableCell align=\"right\">\r\n                              {obj.value}\r\n                            </StyledTableCell>\r\n                          );\r\n                        }\r\n                      })}\r\n                    </StyledTableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={7} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow style={{ border: \"none\" }}>\r\n                <TableCell colSpan={3} size=\"small\" style={{ padding: 0 }}>\r\n                  <div>\r\n                    {selected.length > 0 ? (\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <p\r\n                          style={{\r\n                            fontSize: 14,\r\n                            margin: 0,\r\n                            paddingLeft: 10,\r\n                            color: variable.materialSecondaryColorMain,\r\n                          }}\r\n                        >\r\n                          {selected.length} selected\r\n                        </p>\r\n                        <DeleteButton click={deleteRow} />\r\n                      </div>\r\n                    ) : (\r\n                      <Typography\r\n                        style={{ flex: \"1 1 100%\" }}\r\n                        variant=\"h6\"\r\n                        id=\"tableTitle\"\r\n                        component=\"div\"\r\n                      >\r\n                        <p></p>\r\n                      </Typography>\r\n                    )}\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell colSpan={4} size={\"small\"} style={{ padding: 0 }}>\r\n                  <TablePagination\r\n                    style={{ fontSize: 14 }}\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    labelRowsPerPage={\r\n                      <NormalPElement>Rows per page:</NormalPElement>\r\n                    }\r\n                    labelDisplayedRows={({ from, to, count }) => (\r\n                      <NormalPElement>\r\n                        {from}-{to}\r\n                        {\" of \"}\r\n                        {count !== -1 ? count : \"more than\" + to}\r\n                      </NormalPElement>\r\n                    )}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      {/* <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}