{"ast":null,"code":"import{faReadme}from'@fortawesome/free-brands-svg-icons';import{faLock,faLockOpen}from\"@fortawesome/free-solid-svg-icons\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import IconButton from\"@material-ui/core/IconButton\";import React from\"react\";import{getLocked}from\"redux/index\";import*as variable from\"variables/Variables\";import{StyledTableCell}from\"./StyledCell\";import{getModalVisible}from\"../../redux/Selector/Selectors\";import{useDispatch,useSelector}from\"react-redux\";import{setVisible}from\"redux/index\";var ActionButton=function ActionButton(props){var row=props.row,handlelock=props.handlelock,name=props.name;var dispatch=useDispatch();function handleLockAccount(row){var id=row[variable.id];// ! Nhấp vào sẽ thành mở/đóng khóa\ndispatch(getLocked(id));}function openModal(){dispatch(setVisible(true));}switch(name){case\"lock\":return/*#__PURE__*/React.createElement(StyledTableCell,{padding:\"checkbox\",onClick:function onClick(){return handleLockAccount(row);}},/*#__PURE__*/React.createElement(IconButton,null,/*#__PURE__*/React.createElement(FontAwesomeIcon,{style:{color:row[variable.islock]==1?\"red\":null},icon:row[variable.islock]==1?faLock:faLockOpen})));case\"edit\":return null;case\"read\":return/*#__PURE__*/React.createElement(StyledTableCell,{padding:\"checkbox\"},/*#__PURE__*/React.createElement(IconButton,{onClick:openModal},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faReadme})));// case \"lock\":\n}};export default ActionButton;","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/components/SuperTable/ActionButton.js"],"names":["faReadme","faLock","faLockOpen","FontAwesomeIcon","IconButton","React","getLocked","variable","StyledTableCell","getModalVisible","useDispatch","useSelector","setVisible","ActionButton","props","row","handlelock","name","dispatch","handleLockAccount","id","openModal","color","islock"],"mappings":"AAAA,OAASA,QAAT,KAAyB,oCAAzB,CACA,OAASC,MAAT,CAAiBC,UAAjB,KAAmC,mCAAnC,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,aAA1B,CACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,qBAA1B,CACA,OAASC,eAAT,KAAgC,cAAhC,CACA,OAAQC,eAAR,KAA8B,gCAA9B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAAQC,UAAR,KAAyB,aAAzB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,IACtBC,CAAAA,GADsB,CACID,KADJ,CACtBC,GADsB,CACjBC,UADiB,CACIF,KADJ,CACjBE,UADiB,CACLC,IADK,CACIH,KADJ,CACLG,IADK,CAE9B,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CACA,QAASS,CAAAA,iBAAT,CAA2BJ,GAA3B,CAAgC,CAC9B,GAAIK,CAAAA,EAAE,CAAGL,GAAG,CAACR,QAAQ,CAACa,EAAV,CAAZ,CACA;AACAF,QAAQ,CAACZ,SAAS,CAACc,EAAD,CAAV,CAAR,CACD,CACD,QAASC,CAAAA,SAAT,EAAqB,CACnBH,QAAQ,CAACN,UAAU,CAAC,IAAD,CAAX,CAAR,CACD,CACD,OAAQK,IAAR,EACE,IAAK,MAAL,CACE,mBACE,oBAAC,eAAD,EACE,OAAO,CAAC,UADV,CAEE,OAAO,CAAE,yBAAME,CAAAA,iBAAiB,CAACJ,GAAD,CAAvB,EAFX,eAIE,oBAAC,UAAD,mBACE,oBAAC,eAAD,EACE,KAAK,CAAE,CACLO,KAAK,CAAEP,GAAG,CAACR,QAAQ,CAACgB,MAAV,CAAH,EAAwB,CAAxB,CAA4B,KAA5B,CAAoC,IADtC,CADT,CAIE,IAAI,CAAER,GAAG,CAACR,QAAQ,CAACgB,MAAV,CAAH,EAAwB,CAAxB,CAA4BtB,MAA5B,CAAqCC,UAJ7C,EADF,CAJF,CADF,CAeF,IAAK,MAAL,CACE,MAAO,KAAP,CACF,IAAK,MAAL,CACE,mBACE,oBAAC,eAAD,EACE,OAAO,CAAC,UADV,eAGE,oBAAC,UAAD,EAAY,OAAO,CAAEmB,SAArB,eACE,oBAAC,eAAD,EACE,IAAI,CAAErB,QADR,EADF,CAHF,CADF,CAYF;AAhCF,CAkCD,CA7CD,CA+CA,cAAea,CAAAA,YAAf","sourcesContent":["import { faReadme } from '@fortawesome/free-brands-svg-icons';\r\nimport { faLock, faLockOpen } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport React from \"react\";\r\nimport { getLocked } from \"redux/index\";\r\nimport * as variable from \"variables/Variables\";\r\nimport { StyledTableCell } from \"./StyledCell\";\r\nimport {getModalVisible} from \"../../redux/Selector/Selectors\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {setVisible} from \"redux/index\"\r\n\r\nconst ActionButton = (props) => {\r\n  const { row, handlelock, name } = props;\r\n  const dispatch = useDispatch();\r\n  function handleLockAccount(row) {\r\n    let id = row[variable.id];\r\n    // ! Nhấp vào sẽ thành mở/đóng khóa\r\n    dispatch(getLocked(id));\r\n  }\r\n  function openModal() {\r\n    dispatch(setVisible(true));\r\n  }\r\n  switch (name) {\r\n    case \"lock\":\r\n      return (\r\n        <StyledTableCell\r\n          padding=\"checkbox\"\r\n          onClick={() => handleLockAccount(row)}\r\n        >\r\n          <IconButton>\r\n            <FontAwesomeIcon\r\n              style={{\r\n                color: row[variable.islock] == 1 ? \"red\" : null,\r\n              }}\r\n              icon={row[variable.islock] == 1 ? faLock : faLockOpen}\r\n            />\r\n          </IconButton>\r\n        </StyledTableCell>\r\n      );\r\n    case \"edit\":\r\n      return null;\r\n    case \"read\":\r\n      return (\r\n        <StyledTableCell\r\n          padding=\"checkbox\"\r\n        >\r\n          <IconButton onClick={openModal}>\r\n            <FontAwesomeIcon\r\n              icon={faReadme}\r\n            />\r\n          </IconButton>\r\n        </StyledTableCell>\r\n      );\r\n\r\n    // case \"lock\":\r\n  }\r\n};\r\n\r\nexport default ActionButton;\r\n"]},"metadata":{},"sourceType":"module"}