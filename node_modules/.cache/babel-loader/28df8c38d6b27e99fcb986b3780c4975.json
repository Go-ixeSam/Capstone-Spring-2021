{"ast":null,"code":"import * as variable from \"variables/Variables\";\nexport function getList(state) {\n  return state.contract.listTestSelectorstSelector;\n}\nexport function getTrip(state) {\n  return state.trip.tripData;\n}\nexport function getAdvanceData(state) {\n  return state.account.accountData;\n}\nexport function getAdvanceSelectedData(state) {\n  return state.trip.advanceTableDataSelected;\n}\nexport function getAdvanceDataByNameSearch(advanceTableData, searchValue) {\n  return advanceTableData.filter(record => record.Dessert.includes(searchValue));\n}\nexport function getUserRole(state) {\n  return state.user.roles.text;\n}\nexport function getModalVisible(state) {\n  return state.post.userPostVisible;\n}\nexport function getMaterialHeader(state) {\n  return state.account.accountTableHeader;\n}\nexport function getSignInForm(state) {\n  return state.account.signInForm;\n}\nexport function getFirebase(state) {\n  return state.firebase;\n}\nexport function getPostTableHeader(state) {\n  return state.post.tableHeader;\n}\nexport function getPostTableBodyData(state) {\n  return state.post.advanceTableData;\n}\nexport function getLoadingStatus(state) {\n  return state.account.loading;\n}\nexport function getSuccessStatus(state) {\n  return state.account.success;\n}\nexport function getFailStatus(state) {\n  return state.account.fail;\n}\n/**\r\n * ! Tìm kiến trip dựa trên ID\r\n * @param {*} state\r\n * @param {*} id\r\n */\n\nexport function getTripDetailById(state) {\n  const id = state.trip.tripSelectedID;\n  return state.trip.tripData.tableBody.record.find(obj => obj.contractCode == id);\n}\nexport function removeAdvanceRecord(state, selectedRecord) {\n  let newArray = [];\n  selectedRecord.map(selected => {\n    newArray = state.trip.advanceTableData.filter(record => record.name != selected);\n  });\n  return newArray;\n}","map":{"version":3,"sources":["E:/light-bootstrap-dashboard-react-master/src/redux/Selector/Selectors.js"],"names":["variable","getList","state","contract","listTestSelectorstSelector","getTrip","trip","tripData","getAdvanceData","account","accountData","getAdvanceSelectedData","advanceTableDataSelected","getAdvanceDataByNameSearch","advanceTableData","searchValue","filter","record","Dessert","includes","getUserRole","user","roles","text","getModalVisible","post","userPostVisible","getMaterialHeader","accountTableHeader","getSignInForm","signInForm","getFirebase","firebase","getPostTableHeader","tableHeader","getPostTableBodyData","getLoadingStatus","loading","getSuccessStatus","success","getFailStatus","fail","getTripDetailById","id","tripSelectedID","tableBody","find","obj","contractCode","removeAdvanceRecord","selectedRecord","newArray","map","selected","name"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,qBAA1B;AAEA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAC7B,SAAOA,KAAK,CAACC,QAAN,CAAeC,0BAAtB;AACD;AAED,OAAO,SAASC,OAAT,CAAiBH,KAAjB,EAAwB;AAC7B,SAAOA,KAAK,CAACI,IAAN,CAAWC,QAAlB;AACD;AAED,OAAO,SAASC,cAAT,CAAwBN,KAAxB,EAA+B;AACpC,SAAOA,KAAK,CAACO,OAAN,CAAcC,WAArB;AACD;AAED,OAAO,SAASC,sBAAT,CAAgCT,KAAhC,EAAuC;AAC5C,SAAOA,KAAK,CAACI,IAAN,CAAWM,wBAAlB;AACD;AAED,OAAO,SAASC,0BAAT,CAAoCC,gBAApC,EAAsDC,WAAtD,EAAmE;AACxE,SAAOD,gBAAgB,CAACE,MAAjB,CAAyBC,MAAD,IAC7BA,MAAM,CAACC,OAAP,CAAeC,QAAf,CAAwBJ,WAAxB,CADK,CAAP;AAGD;AAED,OAAO,SAASK,WAAT,CAAqBlB,KAArB,EAA4B;AACjC,SAAOA,KAAK,CAACmB,IAAN,CAAWC,KAAX,CAAiBC,IAAxB;AACD;AACD,OAAO,SAASC,eAAT,CAAyBtB,KAAzB,EAAgC;AACrC,SAAOA,KAAK,CAACuB,IAAN,CAAWC,eAAlB;AACD;AAED,OAAO,SAASC,iBAAT,CAA2BzB,KAA3B,EAAkC;AACvC,SAAOA,KAAK,CAACO,OAAN,CAAcmB,kBAArB;AACD;AAED,OAAO,SAASC,aAAT,CAAuB3B,KAAvB,EAA8B;AACnC,SAAOA,KAAK,CAACO,OAAN,CAAcqB,UAArB;AACD;AAED,OAAO,SAASC,WAAT,CAAqB7B,KAArB,EAA4B;AACjC,SAAOA,KAAK,CAAC8B,QAAb;AACD;AAED,OAAO,SAASC,kBAAT,CAA4B/B,KAA5B,EAAkC;AACvC,SAAOA,KAAK,CAACuB,IAAN,CAAWS,WAAlB;AACD;AAED,OAAO,SAASC,oBAAT,CAA8BjC,KAA9B,EAAoC;AACzC,SAAOA,KAAK,CAACuB,IAAN,CAAWX,gBAAlB;AACD;AACD,OAAO,SAASsB,gBAAT,CAA0BlC,KAA1B,EAAgC;AACrC,SAAOA,KAAK,CAACO,OAAN,CAAc4B,OAArB;AACD;AACD,OAAO,SAASC,gBAAT,CAA0BpC,KAA1B,EAAgC;AACrC,SAAOA,KAAK,CAACO,OAAN,CAAc8B,OAArB;AACD;AACD,OAAO,SAASC,aAAT,CAAuBtC,KAAvB,EAA6B;AAClC,SAAOA,KAAK,CAACO,OAAN,CAAcgC,IAArB;AACD;AACD;;;;;;AAKA,OAAO,SAASC,iBAAT,CAA2BxC,KAA3B,EAAkC;AACvC,QAAMyC,EAAE,GAAGzC,KAAK,CAACI,IAAN,CAAWsC,cAAtB;AACA,SAAO1C,KAAK,CAACI,IAAN,CAAWC,QAAX,CAAoBsC,SAApB,CAA8B5B,MAA9B,CAAqC6B,IAArC,CACJC,GAAD,IAASA,GAAG,CAACC,YAAJ,IAAoBL,EADxB,CAAP;AAGD;AACD,OAAO,SAASM,mBAAT,CAA6B/C,KAA7B,EAAoCgD,cAApC,EAAoD;AACzD,MAAIC,QAAQ,GAAG,EAAf;AACAD,EAAAA,cAAc,CAACE,GAAf,CAAoBC,QAAD,IAAc;AAC/BF,IAAAA,QAAQ,GAAGjD,KAAK,CAACI,IAAN,CAAWQ,gBAAX,CAA4BE,MAA5B,CACRC,MAAD,IAAYA,MAAM,CAACqC,IAAP,IAAeD,QADlB,CAAX;AAGD,GAJD;AAKA,SAAOF,QAAP;AACD","sourcesContent":["import * as variable from \"variables/Variables\"\r\n\r\nexport function getList(state) {\r\n  return state.contract.listTestSelectorstSelector;\r\n}\r\n\r\nexport function getTrip(state) {\r\n  return state.trip.tripData;\r\n}\r\n\r\nexport function getAdvanceData(state) {\r\n  return state.account.accountData;\r\n}\r\n\r\nexport function getAdvanceSelectedData(state) {\r\n  return state.trip.advanceTableDataSelected;\r\n}\r\n\r\nexport function getAdvanceDataByNameSearch(advanceTableData, searchValue) {\r\n  return advanceTableData.filter((record) =>\r\n    record.Dessert.includes(searchValue)\r\n  );\r\n}\r\n\r\nexport function getUserRole(state) {\r\n  return state.user.roles.text;\r\n}\r\nexport function getModalVisible(state) {\r\n  return state.post.userPostVisible;\r\n}\r\n\r\nexport function getMaterialHeader(state) {\r\n  return state.account.accountTableHeader;\r\n}\r\n\r\nexport function getSignInForm(state) {\r\n  return state.account.signInForm;\r\n}\r\n\r\nexport function getFirebase(state) {\r\n  return state.firebase;\r\n}\r\n\r\nexport function getPostTableHeader(state){\r\n  return state.post.tableHeader\r\n}\r\n\r\nexport function getPostTableBodyData(state){\r\n  return state.post.advanceTableData\r\n}\r\nexport function getLoadingStatus(state){\r\n  return state.account.loading\r\n}\r\nexport function getSuccessStatus(state){\r\n  return state.account.success\r\n}\r\nexport function getFailStatus(state){\r\n  return state.account.fail\r\n}\r\n/**\r\n * ! Tìm kiến trip dựa trên ID\r\n * @param {*} state\r\n * @param {*} id\r\n */\r\nexport function getTripDetailById(state) {\r\n  const id = state.trip.tripSelectedID;\r\n  return state.trip.tripData.tableBody.record.find(\r\n    (obj) => obj.contractCode == id\r\n  );\r\n}\r\nexport function removeAdvanceRecord(state, selectedRecord) {\r\n  let newArray = [];\r\n  selectedRecord.map((selected) => {\r\n    newArray = state.trip.advanceTableData.filter(\r\n      (record) => record.name != selected\r\n    );\r\n  });\r\n  return newArray;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}