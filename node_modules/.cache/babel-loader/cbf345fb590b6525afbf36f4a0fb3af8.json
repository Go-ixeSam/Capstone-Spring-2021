{"ast":null,"code":"var DESCRIPTORS = require('./_descriptors');\n\nvar getKeys = require('./_object-keys');\n\nvar toIObject = require('./_to-iobject');\n\nvar isEnum = require('./_object-pie').f;\n\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n\n    while (length > i) {\n      key = keys[i++];\n\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n\n    return result;\n  };\n};","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/node_modules/core-js/library/modules/_object-to-array.js"],"names":["DESCRIPTORS","require","getKeys","toIObject","isEnum","f","module","exports","isEntries","it","O","keys","length","i","result","key","call","push"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,eAAD,CAAvB;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,eAAD,CAAP,CAAyBI,CAAtC;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,SAAV,EAAqB;AACpC,SAAO,UAAUC,EAAV,EAAc;AACnB,QAAIC,CAAC,GAAGP,SAAS,CAACM,EAAD,CAAjB;AACA,QAAIE,IAAI,GAAGT,OAAO,CAACQ,CAAD,CAAlB;AACA,QAAIE,MAAM,GAAGD,IAAI,CAACC,MAAlB;AACA,QAAIC,CAAC,GAAG,CAAR;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,GAAJ;;AACA,WAAOH,MAAM,GAAGC,CAAhB,EAAmB;AACjBE,MAAAA,GAAG,GAAGJ,IAAI,CAACE,CAAC,EAAF,CAAV;;AACA,UAAI,CAACb,WAAD,IAAgBI,MAAM,CAACY,IAAP,CAAYN,CAAZ,EAAeK,GAAf,CAApB,EAAyC;AACvCD,QAAAA,MAAM,CAACG,IAAP,CAAYT,SAAS,GAAG,CAACO,GAAD,EAAML,CAAC,CAACK,GAAD,CAAP,CAAH,GAAmBL,CAAC,CAACK,GAAD,CAAzC;AACD;AACF;;AACD,WAAOD,MAAP;AACD,GAdD;AAeD,CAhBD","sourcesContent":["var DESCRIPTORS = require('./_descriptors');\r\nvar getKeys = require('./_object-keys');\r\nvar toIObject = require('./_to-iobject');\r\nvar isEnum = require('./_object-pie').f;\r\nmodule.exports = function (isEntries) {\r\n  return function (it) {\r\n    var O = toIObject(it);\r\n    var keys = getKeys(O);\r\n    var length = keys.length;\r\n    var i = 0;\r\n    var result = [];\r\n    var key;\r\n    while (length > i) {\r\n      key = keys[i++];\r\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\r\n        result.push(isEntries ? [key, O[key]] : O[key]);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"script"}