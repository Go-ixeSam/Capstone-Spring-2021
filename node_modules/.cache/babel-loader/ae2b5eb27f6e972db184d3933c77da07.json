{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Sam\\\\Documents\\\\GitHub\\\\Capstone-Spring-2021\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v1.3.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/import imageSide from\"assets/img/garden.jpg\";import Footer from\"components/Footer/Footer\";import AdminNavbar from\"components/Navbars/AdminNavbar\";import Sidebar from\"components/Sidebar/Sidebar\";import React,{useRef,useState}from\"react\";import NotificationSystem from\"react-notification-system\";import{useDispatch,useSelector}from\"react-redux\";import{Route,Switch,useHistory,useLocation}from\"react-router-dom\";import{addObject,increaseNotificationCount}from\"redux/index\";import{getFirebase}from\"redux/Selector/Selectors\";import routes from\"routes.js\";import message from\"util/firebase\";import{style}from\"variables/Variables.jsx\";import*as variable from\"../variables/Variables\";var Admin=function Admin(props){var _useState=useState(imageSide),_useState2=_slicedToArray(_useState,2),image=_useState2[0],setImage=_useState2[1];var _useState3=useState(\"black\"),_useState4=_slicedToArray(_useState3,2),color=_useState4[0],setColor=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),hasImage=_useState6[0],setHasImage=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),isNotify=_useState8[0],setIsNotify=_useState8[1];// ! cái này dùng để ngăn cho việc notification nổ lần đầu tiên khi hàng của store đc thêm vào lần đầu tiên\nvar _useState9=useState(\"dropdown show-dropdown open\"),_useState10=_slicedToArray(_useState9,2),fixedClasses=_useState10[0],setFixedClasses=_useState10[1];var history=useHistory();var location=useLocation();var mainPanel=useRef();var notify=useRef();var dataInFirebase=useSelector(function(state){return getFirebase(state);});var dispatch=useDispatch();//! Hàm này có tác dụng là tạo ra một notification, ta sẽ dùng hàm này cứ mỗi khi firebase bắt\n//! sự kiện\nvar addNotify=function addNotify(message){// increaseNotificationCount()\n// dispatch(increaseNotificationCount())\nvar color=Math.floor(Math.random()*4+1);var level;var notification=notify.current;switch(color){case 1:level=\"success\";break;case 2:level=\"warning\";break;case 3:level=\"error\";break;case 4:level=\"info\";break;default:break;}notification.addNotification({title:/*#__PURE__*/React.createElement(\"span\",{\"data-notify\":\"icon\",className:\"pe-7s-leaf\"}),message:/*#__PURE__*/React.createElement(\"div\",null,message),level:level,position:\"tr\",autoDismiss:15});};// handleNotificationClick = (position) => {\n//   var color = Math.floor(Math.random() * 4 + 1);\n//   var level;\n//   switch (color) {\n//     case 1:\n//       level = \"success\";\n//       break;\n//     case 2:\n//       level = \"warning\";\n//       break;\n//     case 3:\n//       level = \"error\";\n//       break;\n//     case 4:\n//       level = \"info\";\n//       break;\n//     default:\n//       break;\n//   }\n//   this.state._notificationSystem.addNotification({\n//     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n//     message: (\n//       <div>\n//         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n//         every web developer.\n//       </div>\n//     ),\n//     level: level,\n//     position: position,\n//     autoDismiss: 15,\n//   });\n// };\nvar getRoutes=function getRoutes(routes){return routes.map(function(prop,key){if(prop.layout===\"/admin\"){return/*#__PURE__*/React.createElement(Route,{path:prop.layout+prop.path,render:function render(props){return/*#__PURE__*/React.createElement(prop.component,props);},key:key});}else{return null;}});};var getBrandText=function getBrandText(path){for(var i=0;i<routes.length;i++){if(props.location.pathname.indexOf(routes[i].layout+routes[i].path)!==-1){return routes[i].name;}}return\"Brand\";};var handleImageClick=function handleImageClick(image){setImage(image);};var handleColorClick=function handleColorClick(color){setColor(color);};var handleHasImage=function handleHasImage(hasImage){setHasImage(hasImage);};var handleFixedClick=function handleFixedClick(){if(fixedClasses===\"dropdown\"){setFixedClasses(\"dropdown show-dropdown open\");}else{setFixedClasses(\"dropdown\");}};// * cho này để lắng nghe firebase DB realtime, ta ko dùng nữa\nReact.useEffect(function(){message.onMessage(function(payload){console.log(\"Message received. \",payload);//! cứ mỗi 1 noti đến là cộgn thêm 1\n// increaseNotificationCount();\naddNotify(payload.notification.body);});},[]);function notifyMe(){// Let's check if the browser supports notifications\nif(!(\"Notification\"in window)){alert(\"This browser does not support desktop notification\");}// Let's check whether notification permissions have already been granted\nelse if(Notification.permission===\"granted\"){// If it's okay let's create a notification\nvar notification=new Notification(\"Hi there!\");}// Otherwise, we need to ask the user for permission\nelse if(Notification.permission!==\"denied\"){Notification.requestPermission(function(permission){// If the user accepts, let's create a notification\nif(permission===\"granted\"){var notification=new Notification(\"Hi there!\");}});}// At last, if the user has denied notifications, and you\n// want to be respectful there is no need to bother them any more.\n}React.useEffect(function(){//! setIsNotify dùng để ngăn cho ko hiện notification khi lần đầu event listener đc nổ\nsetIsNotify(isNotify+1);//! đây là đk để nổi notification =_\nif(dataInFirebase.firebaseData.length!=0&&isNotify>=2){addNotify();}/**\r\n     * * Sẽ có thêm phần chức năng là hiển thị số post cần phải duyệt,\r\n     * * mỗi post sẽ có trạng thái là duyệt và chưa duyệt, những cái chưa duyệt sẽ đc đưa vào list chưa duyệt và hiển thị\r\n     * * số sẽ trừ dần mỗi khi duyệt xong và bài post cũng sẽ biến mất hoàn toàn khỏi list hiển thị\r\n     */},[dataInFirebase]);React.useEffect(function(){if(window.innerWidth<993&&history.location.pathname!==location.pathname&&document.documentElement.className.indexOf(\"nav-open\")!==-1){document.documentElement.classList.toggle(\"nav-open\");}if(history.action===\"PUSH\"){document.documentElement.scrollTop=0;document.scrollingElement.scrollTop=0;mainPanel.scrollTop=0;}},[mainPanel]);// ! Lắng nghe sự thay đổi của database trên firebase\nvar firebaseListening=function firebaseListening(params){// var userCount = firebase.database().ref(\"users\");\n// userCount.on(\"value\", (snapshot) => {\n//   let newArr = [];\n//   // ? Vì snapshot sẽ chỉ trả về các obj nên ta muốn nó thành 1 array ta phải làm bằng tay, chi tiết thế nào thì coi trong quick note\n//   snapshot.forEach((child) => {\n//     //chỉ bỏ những node child nào có status là no, tức là chưa đc duyệt\n//     if (child.val()[\"status\"] == \"not\") {\n//       newArr.push({ ...child.val(), userId: child.key });\n//     }\n//   });\n//   dispatch(addObject(newArr));\n// });\n};//! bỏ lắng nghe khi cái component này unmount\nfunction removeFirebaseListening(params){// firebase.database().ref(\"user\").off(\"value\");\n}return/*#__PURE__*/React.createElement(\"div\",{className:\"wrapper\"},/*#__PURE__*/React.createElement(NotificationSystem,{ref:notify,style:style}),/*#__PURE__*/React.createElement(Sidebar,Object.assign({},props,{routes:routes,image:image,color:color,hasImage:hasImage})),/*#__PURE__*/React.createElement(\"div\",{id:\"main-panel\",className:\"main-panel\",ref:mainPanel},/*#__PURE__*/React.createElement(AdminNavbar,Object.assign({},props,{brandText:getBrandText(props.location.pathname)})),/*#__PURE__*/React.createElement(Switch,null,getRoutes(routes)),/*#__PURE__*/React.createElement(Footer,null)));};export default Admin;","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/layouts/Admin.jsx"],"names":["imageSide","Footer","AdminNavbar","Sidebar","React","useRef","useState","NotificationSystem","useDispatch","useSelector","Route","Switch","useHistory","useLocation","addObject","increaseNotificationCount","getFirebase","routes","message","style","variable","Admin","props","image","setImage","color","setColor","hasImage","setHasImage","isNotify","setIsNotify","fixedClasses","setFixedClasses","history","location","mainPanel","notify","dataInFirebase","state","dispatch","addNotify","Math","floor","random","level","notification","current","addNotification","title","position","autoDismiss","getRoutes","map","prop","key","layout","path","getBrandText","i","length","pathname","indexOf","name","handleImageClick","handleColorClick","handleHasImage","handleFixedClick","useEffect","onMessage","payload","console","log","body","notifyMe","window","alert","Notification","permission","requestPermission","firebaseData","innerWidth","document","documentElement","className","classList","toggle","action","scrollTop","scrollingElement","firebaseListening","params","removeFirebaseListening"],"mappings":"mLAAA;;;;;;;;;;;;;;;;EAiBA,MAAOA,CAAAA,SAAP,KAAsB,uBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gCAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,4BAApB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,KAAwC,OAAxC,CACA,MAAOC,CAAAA,kBAAP,KAA+B,2BAA/B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,UAAxB,CAAoCC,WAApC,KAAuD,kBAAvD,CACA,OAASC,SAAT,CAAoBC,yBAApB,KAAqD,aAArD,CACA,OAASC,WAAT,KAA4B,0BAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,OAASC,KAAT,KAAsB,yBAAtB,CACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,wBAA1B,CACA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,eACGhB,QAAQ,CAACN,SAAD,CADX,wCAChBuB,KADgB,eACTC,QADS,8BAEGlB,QAAQ,CAAC,OAAD,CAFX,yCAEhBmB,KAFgB,eAETC,QAFS,8BAGSpB,QAAQ,CAAC,IAAD,CAHjB,yCAGhBqB,QAHgB,eAGNC,WAHM,8BAIStB,QAAQ,CAAC,CAAD,CAJjB,yCAIhBuB,QAJgB,eAINC,WAJM,eAIsB;AAJtB,eAKiBxB,QAAQ,CAC9C,6BAD8C,CALzB,0CAKhByB,YALgB,gBAKFC,eALE,gBAQvB,GAAIC,CAAAA,OAAO,CAAGrB,UAAU,EAAxB,CACA,GAAIsB,CAAAA,QAAQ,CAAGrB,WAAW,EAA1B,CACA,GAAMsB,CAAAA,SAAS,CAAG9B,MAAM,EAAxB,CACA,GAAM+B,CAAAA,MAAM,CAAG/B,MAAM,EAArB,CACA,GAAMgC,CAAAA,cAAc,CAAG5B,WAAW,CAAC,SAAC6B,KAAD,QAAWtB,CAAAA,WAAW,CAACsB,KAAD,CAAtB,EAAD,CAAlC,CACA,GAAMC,CAAAA,QAAQ,CAAG/B,WAAW,EAA5B,CAEA;AACA;AACA,GAAMgC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACtB,OAAD,CAAa,CAC7B;AACA;AACA,GAAIO,CAAAA,KAAK,CAAGgB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,CAAhB,CAAoB,CAA/B,CAAZ,CACA,GAAIC,CAAAA,KAAJ,CACA,GAAMC,CAAAA,YAAY,CAAGT,MAAM,CAACU,OAA5B,CACA,OAAQrB,KAAR,EACE,IAAK,EAAL,CACEmB,KAAK,CAAG,SAAR,CACA,MACF,IAAK,EAAL,CACEA,KAAK,CAAG,SAAR,CACA,MACF,IAAK,EAAL,CACEA,KAAK,CAAG,OAAR,CACA,MACF,IAAK,EAAL,CACEA,KAAK,CAAG,MAAR,CACA,MACF,QACE,MAdJ,CAgBAC,YAAY,CAACE,eAAb,CAA6B,CAC3BC,KAAK,cAAE,4BAAM,cAAY,MAAlB,CAAyB,SAAS,CAAC,YAAnC,EADoB,CAE3B9B,OAAO,cAAE,+BAAMA,OAAN,CAFkB,CAG3B0B,KAAK,CAAEA,KAHoB,CAI3BK,QAAQ,CAAE,IAJiB,CAK3BC,WAAW,CAAE,EALc,CAA7B,EAOD,CA7BD,CA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAClC,MAAD,CAAY,CAC5B,MAAOA,CAAAA,MAAM,CAACmC,GAAP,CAAW,SAACC,IAAD,CAAOC,GAAP,CAAe,CAC/B,GAAID,IAAI,CAACE,MAAL,GAAgB,QAApB,CAA8B,CAC5B,mBACE,oBAAC,KAAD,EACE,IAAI,CAAEF,IAAI,CAACE,MAAL,CAAcF,IAAI,CAACG,IAD3B,CAEE,MAAM,CAAE,gBAAClC,KAAD,qBACN,oBAAC,IAAD,CAAM,SAAN,CACMA,KADN,CADM,EAFV,CAQE,GAAG,CAAEgC,GARP,EADF,CAYD,CAbD,IAaO,CACL,MAAO,KAAP,CACD,CACF,CAjBM,CAAP,CAkBD,CAnBD,CAoBA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACD,IAAD,CAAU,CAC7B,IAAK,GAAIE,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGzC,MAAM,CAAC0C,MAA3B,CAAmCD,CAAC,EAApC,CAAwC,CACtC,GACEpC,KAAK,CAACY,QAAN,CAAe0B,QAAf,CAAwBC,OAAxB,CAAgC5C,MAAM,CAACyC,CAAD,CAAN,CAAUH,MAAV,CAAmBtC,MAAM,CAACyC,CAAD,CAAN,CAAUF,IAA7D,IACA,CAAC,CAFH,CAGE,CACA,MAAOvC,CAAAA,MAAM,CAACyC,CAAD,CAAN,CAAUI,IAAjB,CACD,CACF,CACD,MAAO,OAAP,CACD,CAVD,CAWA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACxC,KAAD,CAAW,CAClCC,QAAQ,CAACD,KAAD,CAAR,CACD,CAFD,CAGA,GAAMyC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACvC,KAAD,CAAW,CAClCC,QAAQ,CAACD,KAAD,CAAR,CACD,CAFD,CAGA,GAAMwC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACtC,QAAD,CAAc,CACnCC,WAAW,CAACD,QAAD,CAAX,CACD,CAFD,CAGA,GAAMuC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,GAAInC,YAAY,GAAK,UAArB,CAAiC,CAC/BC,eAAe,CAAC,6BAAD,CAAf,CACD,CAFD,IAEO,CACLA,eAAe,CAAC,UAAD,CAAf,CACD,CACF,CAND,CAQA;AACA5B,KAAK,CAAC+D,SAAN,CAAgB,UAAM,CACpBjD,OAAO,CAACkD,SAAR,CAAkB,SAACC,OAAD,CAAa,CAC7BC,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAkCF,OAAlC,EAEA;AACA;AACA7B,SAAS,CAAC6B,OAAO,CAACxB,YAAR,CAAqB2B,IAAtB,CAAT,CACD,CAND,EAOD,CARD,CAQG,EARH,EAUA,QAASC,CAAAA,QAAT,EAAoB,CAClB;AACA,GAAI,EAAE,gBAAkBC,CAAAA,MAApB,CAAJ,CAAiC,CAC/BC,KAAK,CAAC,oDAAD,CAAL,CACD,CAED;AAJA,IAKK,IAAIC,YAAY,CAACC,UAAb,GAA4B,SAAhC,CAA2C,CAC9C;AACA,GAAIhC,CAAAA,YAAY,CAAG,GAAI+B,CAAAA,YAAJ,CAAiB,WAAjB,CAAnB,CACD,CAED;AALK,IAMA,IAAIA,YAAY,CAACC,UAAb,GAA4B,QAAhC,CAA0C,CAC7CD,YAAY,CAACE,iBAAb,CAA+B,SAAUD,UAAV,CAAsB,CACnD;AACA,GAAIA,UAAU,GAAK,SAAnB,CAA8B,CAC5B,GAAIhC,CAAAA,YAAY,CAAG,GAAI+B,CAAAA,YAAJ,CAAiB,WAAjB,CAAnB,CACD,CACF,CALD,EAMD,CAED;AACA;AACD,CACDxE,KAAK,CAAC+D,SAAN,CAAgB,UAAM,CACpB;AACArC,WAAW,CAACD,QAAQ,CAAG,CAAZ,CAAX,CAEA;AACA,GAAIQ,cAAc,CAAC0C,YAAf,CAA4BpB,MAA5B,EAAsC,CAAtC,EAA2C9B,QAAQ,EAAI,CAA3D,CAA8D,CAC5DW,SAAS,GACV,CAED;;;;OAKD,CAdD,CAcG,CAACH,cAAD,CAdH,EAgBAjC,KAAK,CAAC+D,SAAN,CAAgB,UAAM,CACpB,GACEO,MAAM,CAACM,UAAP,CAAoB,GAApB,EACA/C,OAAO,CAACC,QAAR,CAAiB0B,QAAjB,GAA8B1B,QAAQ,CAAC0B,QADvC,EAEAqB,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCtB,OAAnC,CAA2C,UAA3C,IAA2D,CAAC,CAH9D,CAIE,CACAoB,QAAQ,CAACC,eAAT,CAAyBE,SAAzB,CAAmCC,MAAnC,CAA0C,UAA1C,EACD,CACD,GAAIpD,OAAO,CAACqD,MAAR,GAAmB,MAAvB,CAA+B,CAC7BL,QAAQ,CAACC,eAAT,CAAyBK,SAAzB,CAAqC,CAArC,CACAN,QAAQ,CAACO,gBAAT,CAA0BD,SAA1B,CAAsC,CAAtC,CACApD,SAAS,CAACoD,SAAV,CAAsB,CAAtB,CACD,CACF,CAbD,CAaG,CAACpD,SAAD,CAbH,EAeA;AACA,GAAMsD,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,MAAD,CAAY,CACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAbD,CAeA;AACA,QAASC,CAAAA,uBAAT,CAAiCD,MAAjC,CAAyC,CACvC;AACD,CACD,mBACE,2BAAK,SAAS,CAAC,SAAf,eACE,oBAAC,kBAAD,EAAoB,GAAG,CAAEtD,MAAzB,CAAiC,KAAK,CAAEjB,KAAxC,EADF,cAEE,oBAAC,OAAD,kBACMG,KADN,EAEE,MAAM,CAAEL,MAFV,CAGE,KAAK,CAAEM,KAHT,CAIE,KAAK,CAAEE,KAJT,CAKE,QAAQ,CAAEE,QALZ,GAFF,cASE,2BAAK,EAAE,CAAC,YAAR,CAAqB,SAAS,CAAC,YAA/B,CAA4C,GAAG,CAAEQ,SAAjD,eACE,oBAAC,WAAD,kBACMb,KADN,EAEE,SAAS,CAAEmC,YAAY,CAACnC,KAAK,CAACY,QAAN,CAAe0B,QAAhB,CAFzB,GADF,cAKE,oBAAC,MAAD,MAAST,SAAS,CAAClC,MAAD,CAAlB,CALF,cAME,oBAAC,MAAD,MANF,CATF,CADF,CAoBD,CA3OD,CA4OA,cAAeI,CAAAA,KAAf","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v1.3.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport imageSide from \"assets/img/garden.jpg\";\r\nimport Footer from \"components/Footer/Footer\";\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\r\nimport Sidebar from \"components/Sidebar/Sidebar\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport NotificationSystem from \"react-notification-system\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route, Switch, useHistory, useLocation } from \"react-router-dom\";\r\nimport { addObject, increaseNotificationCount } from \"redux/index\";\r\nimport { getFirebase } from \"redux/Selector/Selectors\";\r\nimport routes from \"routes.js\";\r\nimport message from \"util/firebase\";\r\nimport { style } from \"variables/Variables.jsx\";\r\nimport * as variable from \"../variables/Variables\";\r\nconst Admin = (props) => {\r\n  const [image, setImage] = useState(imageSide);\r\n  const [color, setColor] = useState(\"black\");\r\n  const [hasImage, setHasImage] = useState(true);\r\n  const [isNotify, setIsNotify] = useState(0); // ! cái này dùng để ngăn cho việc notification nổ lần đầu tiên khi hàng của store đc thêm vào lần đầu tiên\r\n  const [fixedClasses, setFixedClasses] = useState(\r\n    \"dropdown show-dropdown open\"\r\n  );\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n  const mainPanel = useRef();\r\n  const notify = useRef();\r\n  const dataInFirebase = useSelector((state) => getFirebase(state));\r\n  const dispatch = useDispatch();\r\n\r\n  //! Hàm này có tác dụng là tạo ra một notification, ta sẽ dùng hàm này cứ mỗi khi firebase bắt\r\n  //! sự kiện\r\n  const addNotify = (message) => {\r\n    // increaseNotificationCount()\r\n    // dispatch(increaseNotificationCount())\r\n    var color = Math.floor(Math.random() * 4 + 1);\r\n    var level;\r\n    const notification = notify.current;\r\n    switch (color) {\r\n      case 1:\r\n        level = \"success\";\r\n        break;\r\n      case 2:\r\n        level = \"warning\";\r\n        break;\r\n      case 3:\r\n        level = \"error\";\r\n        break;\r\n      case 4:\r\n        level = \"info\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    notification.addNotification({\r\n      title: <span data-notify=\"icon\" className=\"pe-7s-leaf\" />,\r\n      message: <div>{message}</div>,\r\n      level: level,\r\n      position: \"tr\",\r\n      autoDismiss: 15,\r\n    });\r\n  };\r\n\r\n  // handleNotificationClick = (position) => {\r\n  //   var color = Math.floor(Math.random() * 4 + 1);\r\n  //   var level;\r\n  //   switch (color) {\r\n  //     case 1:\r\n  //       level = \"success\";\r\n  //       break;\r\n  //     case 2:\r\n  //       level = \"warning\";\r\n  //       break;\r\n  //     case 3:\r\n  //       level = \"error\";\r\n  //       break;\r\n  //     case 4:\r\n  //       level = \"info\";\r\n  //       break;\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  //   this.state._notificationSystem.addNotification({\r\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\r\n  //     message: (\r\n  //       <div>\r\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\r\n  //         every web developer.\r\n  //       </div>\r\n  //     ),\r\n  //     level: level,\r\n  //     position: position,\r\n  //     autoDismiss: 15,\r\n  //   });\r\n  // };\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            render={(props) => (\r\n              <prop.component\r\n                {...props}\r\n                // handleClick={handleNotificationClick}\r\n              />\r\n            )}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  const getBrandText = (path) => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (\r\n        props.location.pathname.indexOf(routes[i].layout + routes[i].path) !==\r\n        -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n  const handleImageClick = (image) => {\r\n    setImage(image);\r\n  };\r\n  const handleColorClick = (color) => {\r\n    setColor(color);\r\n  };\r\n  const handleHasImage = (hasImage) => {\r\n    setHasImage(hasImage);\r\n  };\r\n  const handleFixedClick = () => {\r\n    if (fixedClasses === \"dropdown\") {\r\n      setFixedClasses(\"dropdown show-dropdown open\");\r\n    } else {\r\n      setFixedClasses(\"dropdown\");\r\n    }\r\n  };\r\n\r\n  // * cho này để lắng nghe firebase DB realtime, ta ko dùng nữa\r\n  React.useEffect(() => {\r\n    message.onMessage((payload) => {\r\n      console.log(\"Message received. \", payload);\r\n\r\n      //! cứ mỗi 1 noti đến là cộgn thêm 1\r\n      // increaseNotificationCount();\r\n      addNotify(payload.notification.body);\r\n    });\r\n  }, []);\r\n\r\n  function notifyMe() {\r\n    // Let's check if the browser supports notifications\r\n    if (!(\"Notification\" in window)) {\r\n      alert(\"This browser does not support desktop notification\");\r\n    }\r\n\r\n    // Let's check whether notification permissions have already been granted\r\n    else if (Notification.permission === \"granted\") {\r\n      // If it's okay let's create a notification\r\n      var notification = new Notification(\"Hi there!\");\r\n    }\r\n\r\n    // Otherwise, we need to ask the user for permission\r\n    else if (Notification.permission !== \"denied\") {\r\n      Notification.requestPermission(function (permission) {\r\n        // If the user accepts, let's create a notification\r\n        if (permission === \"granted\") {\r\n          var notification = new Notification(\"Hi there!\");\r\n        }\r\n      });\r\n    }\r\n\r\n    // At last, if the user has denied notifications, and you\r\n    // want to be respectful there is no need to bother them any more.\r\n  }\r\n  React.useEffect(() => {\r\n    //! setIsNotify dùng để ngăn cho ko hiện notification khi lần đầu event listener đc nổ\r\n    setIsNotify(isNotify + 1);\r\n\r\n    //! đây là đk để nổi notification =_\r\n    if (dataInFirebase.firebaseData.length != 0 && isNotify >= 2) {\r\n      addNotify();\r\n    }\r\n\r\n    /**\r\n     * * Sẽ có thêm phần chức năng là hiển thị số post cần phải duyệt,\r\n     * * mỗi post sẽ có trạng thái là duyệt và chưa duyệt, những cái chưa duyệt sẽ đc đưa vào list chưa duyệt và hiển thị\r\n     * * số sẽ trừ dần mỗi khi duyệt xong và bài post cũng sẽ biến mất hoàn toàn khỏi list hiển thị\r\n     */\r\n  }, [dataInFirebase]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      history.location.pathname !== location.pathname &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    }\r\n    if (history.action === \"PUSH\") {\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      mainPanel.scrollTop = 0;\r\n    }\r\n  }, [mainPanel]);\r\n\r\n  // ! Lắng nghe sự thay đổi của database trên firebase\r\n  const firebaseListening = (params) => {\r\n    // var userCount = firebase.database().ref(\"users\");\r\n    // userCount.on(\"value\", (snapshot) => {\r\n    //   let newArr = [];\r\n    //   // ? Vì snapshot sẽ chỉ trả về các obj nên ta muốn nó thành 1 array ta phải làm bằng tay, chi tiết thế nào thì coi trong quick note\r\n    //   snapshot.forEach((child) => {\r\n    //     //chỉ bỏ những node child nào có status là no, tức là chưa đc duyệt\r\n    //     if (child.val()[\"status\"] == \"not\") {\r\n    //       newArr.push({ ...child.val(), userId: child.key });\r\n    //     }\r\n    //   });\r\n    //   dispatch(addObject(newArr));\r\n    // });\r\n  };\r\n\r\n  //! bỏ lắng nghe khi cái component này unmount\r\n  function removeFirebaseListening(params) {\r\n    // firebase.database().ref(\"user\").off(\"value\");\r\n  }\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <NotificationSystem ref={notify} style={style} />\r\n      <Sidebar\r\n        {...props}\r\n        routes={routes}\r\n        image={image}\r\n        color={color}\r\n        hasImage={hasImage}\r\n      />\r\n      <div id=\"main-panel\" className=\"main-panel\" ref={mainPanel}>\r\n        <AdminNavbar\r\n          {...props}\r\n          brandText={getBrandText(props.location.pathname)}\r\n        />\r\n        <Switch>{getRoutes(routes)}</Switch>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Admin;\r\n"]},"metadata":{},"sourceType":"module"}