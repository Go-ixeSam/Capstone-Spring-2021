{"ast":null,"code":"import{configureStore,getDefaultMiddleware}from\"@reduxjs/toolkit\";import{combineReducers}from\"redux\";import{persistReducer}from\"redux-persist\";import storage from\"redux-persist/lib/storage\";import accountReducer from\"./Account/AccountSlice\";import tripReducer from\"./trip/TripSlice\";import postReducer from\"./Vegetable/VegetableSlice\";import firebaseReducer from\"./Firebase/FirebaseSlice\";import loginReducer from\"./Login/LoginSlice\";import dashboardReducer from\"./Dashboard/DashboardSlice\";import systemReducer from\"./SystemConfiguration/SystemConfigurationSlice\";import{createFilter,createBlacklistFilter}from'redux-persist-transform-filter';// import userReducer from \"./user/userSlice\"\nvar customizedMiddleware=getDefaultMiddleware({serializableCheck:false});// you want to store only a subset of your state of reducer one\nvar saveSubsetFilter=createFilter('post',['getAllVegetableUnapprovedCurrent']);var reducers=combineReducers({account:accountReducer,dashboard:dashboardReducer,trip:tripReducer,post:postReducer,firebase:firebaseReducer,login:loginReducer,systemConfig:systemReducer});var persistConfig={key:\"root\",storage:storage,whitelist:[\"login\"],blacklist:[\"account\",\"trip\",\"post\",\"firebase\",\"dashboard\",\"systemConfig\"],transforms:[saveSubsetFilter]};var persistedReducer=persistReducer(persistConfig,reducers);/**\r\n * *Hàm configStore này sẽ giúp ta config luôn cả redux devtool và thunk luôn\r\n */var store=configureStore({reducer:persistedReducer,middleware:customizedMiddleware});export default store;","map":{"version":3,"sources":["C:/Users/Sam/Documents/GitHub/Capstone-Spring-2021/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","combineReducers","persistReducer","storage","accountReducer","tripReducer","postReducer","firebaseReducer","loginReducer","dashboardReducer","systemReducer","createFilter","createBlacklistFilter","customizedMiddleware","serializableCheck","saveSubsetFilter","reducers","account","dashboard","trip","post","firebase","login","systemConfig","persistConfig","key","whitelist","blacklist","transforms","persistedReducer","store","reducer","middleware"],"mappings":"AAAA,OAASA,cAAT,CAAwBC,oBAAxB,KAAmD,kBAAnD,CACA,OAASC,eAAT,KAAgC,OAAhC,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAOC,CAAAA,cAAP,KAA2B,wBAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,kBAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,eAAP,KAA4B,0BAA5B,CACA,MAAOC,CAAAA,YAAP,KAAyB,oBAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,4BAA7B,CACA,MAAOC,CAAAA,aAAP,KAA0B,gDAA1B,CACA,OAASC,YAAT,CAAuBC,qBAAvB,KAAoD,gCAApD,CACA;AAEA,GAAMC,CAAAA,oBAAoB,CAACb,oBAAoB,CAAC,CAC9Cc,iBAAiB,CAAC,KAD4B,CAAD,CAA/C,CAGA;AACA,GAAMC,CAAAA,gBAAgB,CAAGJ,YAAY,CACnC,MADmC,CAEnC,CAAC,kCAAD,CAFmC,CAArC,CAIA,GAAMK,CAAAA,QAAQ,CAAGf,eAAe,CAAC,CAC/BgB,OAAO,CAAEb,cADsB,CAE/Bc,SAAS,CAACT,gBAFqB,CAG/BU,IAAI,CAAEd,WAHyB,CAI/Be,IAAI,CAAEd,WAJyB,CAK/Be,QAAQ,CAAEd,eALqB,CAM/Be,KAAK,CAACd,YANyB,CAO/Be,YAAY,CAACb,aAPkB,CAAD,CAAhC,CASA,GAAMc,CAAAA,aAAa,CAAG,CACpBC,GAAG,CAAE,MADe,CAEpBtB,OAAO,CAAPA,OAFoB,CAGpBuB,SAAS,CAAE,CAAC,OAAD,CAHS,CAIpBC,SAAS,CAAE,CAAC,SAAD,CAAY,MAAZ,CAAoB,MAApB,CAA4B,UAA5B,CAAuC,WAAvC,CAAmD,cAAnD,CAJS,CAKpBC,UAAU,CAAC,CAACb,gBAAD,CALS,CAAtB,CAOA,GAAMc,CAAAA,gBAAgB,CAAG3B,cAAc,CAACsB,aAAD,CAAgBR,QAAhB,CAAvC,CACA;;GAGA,GAAMc,CAAAA,KAAK,CAAG/B,cAAc,CAAC,CAC3BgC,OAAO,CAAEF,gBADkB,CAE3BG,UAAU,CAACnB,oBAFgB,CAAD,CAA5B,CAIA,cAAeiB,CAAAA,KAAf","sourcesContent":["import { configureStore,getDefaultMiddleware} from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport accountReducer from \"./Account/AccountSlice\";\r\nimport tripReducer from \"./trip/TripSlice\";\r\nimport postReducer from \"./Vegetable/VegetableSlice\";\r\nimport firebaseReducer from \"./Firebase/FirebaseSlice\";\r\nimport loginReducer from \"./Login/LoginSlice\";\r\nimport dashboardReducer from \"./Dashboard/DashboardSlice\"\r\nimport systemReducer from \"./SystemConfiguration/SystemConfigurationSlice\"\r\nimport { createFilter, createBlacklistFilter } from 'redux-persist-transform-filter';\r\n// import userReducer from \"./user/userSlice\"\r\n\r\nconst customizedMiddleware=getDefaultMiddleware({\r\n  serializableCheck:false\r\n})\r\n// you want to store only a subset of your state of reducer one\r\nconst saveSubsetFilter = createFilter(\r\n  'post',\r\n  ['getAllVegetableUnapprovedCurrent']\r\n);\r\nconst reducers = combineReducers({\r\n  account: accountReducer,\r\n  dashboard:dashboardReducer,\r\n  trip: tripReducer,\r\n  post: postReducer,\r\n  firebase: firebaseReducer,\r\n  login:loginReducer,\r\n  systemConfig:systemReducer\r\n});\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"login\"],\r\n  blacklist: [\"account\", \"trip\", \"post\", \"firebase\",\"dashboard\",\"systemConfig\"],\r\n  transforms:[saveSubsetFilter]\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n/**\r\n * *Hàm configStore này sẽ giúp ta config luôn cả redux devtool và thunk luôn\r\n */\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware:customizedMiddleware,\r\n});\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}